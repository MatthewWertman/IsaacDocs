{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-\\.\\_\\\u00b7]+"},"docs":[{"location":"","text":"Lua API Documentation for The Binding of Isaac - Afterbirth+ \u2693\ufe0e This Documentation is a community curated project that provides additional informations and code examples for the functions provided by the \"Binding of Isaac: Afterbirth+\" LUA modding API. If you want to contribute to this project, consider visiting the Github Project or the Official BoI Discord-Server If you want to have a specific part of the Documentation explained, consider messaging me: Discord : Wofsauge#6503 Reddit : /u/Wofsauge","title":"Home"},{"location":"#lua-api-documentation-for-the-binding-of-isaac-afterbirth","text":"This Documentation is a community curated project that provides additional informations and code examples for the functions provided by the \"Binding of Isaac: Afterbirth+\" LUA modding API. If you want to contribute to this project, consider visiting the Github Project or the Official BoI Discord-Server If you want to have a specific part of the Documentation explained, consider messaging me: Discord : Wofsauge#6503 Reddit : /u/Wofsauge","title":"Lua API Documentation for The Binding of Isaac - Afterbirth+"},{"location":"Color/","text":"Class \"Color\" \u2693\ufe0e Constructors \u2693\ufe0e Color () \u2693\ufe0e Color Color ( float R, float G, float B, float A, int RO, int GO, int BO ) \u2693\ufe0e Constructor for the \"Color\" class. When using the Font class, use KColor() instead. Colors are made of three separate components, tint, colorize and offset. Tint acts like a color multiplicator. Offset is a color which is added after the tint is applied. Colorize is complicated. See the SetColorize () function for a detailed description. R, G, B and A accept numbers between 0 and 1. RO, GO and BO accept numbers between -255 and 255. Operators \u2693\ufe0e __mul () \u2693\ufe0e Color __mul ( Color right ) \u2693\ufe0e Defines the multiplication of two Color objects using the * operator. Functions \u2693\ufe0e Lerp () \u2693\ufe0e static Color Lerp ( Color m1, Color m2, float t ) \u2693\ufe0e Linear Interpolation between two colors. t is the \"progress\" of the interpolation. Setting t = 0.5 means that the color in the middle of m1 and m2 will be returned. Reset () \u2693\ufe0e void Reset ( ) \u2693\ufe0e Set\u00b7Colorize () \u2693\ufe0e void SetColorize ( float Red, float Green, float Blue, float Amount ) \u2693\ufe0e The colorize function can be used to change the color of sprites. Its the best for that purpose, since it doesnt affect existing coloranimations like the flashing of creep. The values can be between 0 and 1 for normal coloration. if you use higher numbers the color gets more vibrant. Notes The alpha component determines how much colorization must be applied. The function takes the original color, converts it to grayscale, multiplies it by the RGB components and then blends it back with the original color. The alpha value determines the blending factor. Colorization is applied after the tint and before the offset function. Example Code SetColorize ( 1 , 1 , 1 , 1 ) will turn the sprite into grayscale. SetColorize ( 1 , 0 , 0 , 1 ) will turn it red but not as a red tint but as shades of red. SetColorize ( 1 , 1 , 1 , 2 ) will invert the sprite without touching its luminosity. This code changes the color of red Creep to be purple 1 2 3 4 5 6 7 Test : AddCallback ( ModCallbacks . MC_POST_EFFECT_INIT , function ( _ , self ) if self . Variant == EffectVariant . CREEP_RED then local color = Color ( 1 , 1 , 1 , 1 , 0 , 0 , 0 ) color : SetColorize ( 4 , 0 , 4 , 1 ) self : GetSprite (). Color = color end end ) Set\u00b7Offset () \u2693\ufe0e void SetOffset ( float RedOffset, float GreenOffset, float BlueOffset ) \u2693\ufe0e Offset is a color that gets added to the sprite after the Tint was applied. Set\u00b7Tint () \u2693\ufe0e void SetTint ( float RedTint, float GreenTint, float BlueTint, float AlphaTint ) \u2693\ufe0e Tint acts like a color multiplicator. Variables \u2693\ufe0e A \u2693\ufe0e float A \u2693\ufe0e B \u2693\ufe0e float B \u2693\ufe0e BO \u2693\ufe0e float BO \u2693\ufe0e G \u2693\ufe0e float G \u2693\ufe0e GO \u2693\ufe0e float GO \u2693\ufe0e R \u2693\ufe0e float R \u2693\ufe0e RO \u2693\ufe0e float RO \u2693\ufe0e","title":"Color"},{"location":"Color/#class-color","text":"","title":"Class \"Color\""},{"location":"Color/#constructors","text":"","title":"Constructors"},{"location":"Color/#color","text":"","title":"Color ()"},{"location":"Color/#operators","text":"","title":"Operators"},{"location":"Color/#__mul","text":"","title":"__mul ()"},{"location":"Color/#functions","text":"","title":"Functions"},{"location":"Color/#lerp","text":"","title":"Lerp ()"},{"location":"Color/#reset","text":"","title":"Reset ()"},{"location":"Color/#setcolorize","text":"","title":"Set\u00b7Colorize ()"},{"location":"Color/#setoffset","text":"","title":"Set\u00b7Offset ()"},{"location":"Color/#settint","text":"","title":"Set\u00b7Tint ()"},{"location":"Color/#variables","text":"","title":"Variables"},{"location":"Color/#a","text":"","title":"A"},{"location":"Color/#b","text":"","title":"B"},{"location":"Color/#bo","text":"","title":"BO"},{"location":"Color/#g","text":"","title":"G"},{"location":"Color/#go","text":"","title":"GO"},{"location":"Color/#r","text":"","title":"R"},{"location":"Color/#ro","text":"","title":"RO"},{"location":"CppContainer_ArrayProxy_RoomConfigEntries/","text":"Class \"CppContainer::ArrayProxy::RoomConfigEntries\" \u2693\ufe0e Operators \u2693\ufe0e __len () \u2693\ufe0e int __len ( ) \u2693\ufe0e The length (#) operation. Returns the size of this list. Functions \u2693\ufe0e Get () \u2693\ufe0e userdata Get ( int idx ) \u2693\ufe0e Variables \u2693\ufe0e Size \u2693\ufe0e int Size \u2693\ufe0e","title":"RoomConfigEntries"},{"location":"CppContainer_ArrayProxy_RoomConfigEntries/#class-cppcontainerarrayproxyroomconfigentries","text":"","title":"Class \"CppContainer::ArrayProxy::RoomConfigEntries\""},{"location":"CppContainer_ArrayProxy_RoomConfigEntries/#operators","text":"","title":"Operators"},{"location":"CppContainer_ArrayProxy_RoomConfigEntries/#__len","text":"","title":"__len ()"},{"location":"CppContainer_ArrayProxy_RoomConfigEntries/#functions","text":"","title":"Functions"},{"location":"CppContainer_ArrayProxy_RoomConfigEntries/#get","text":"","title":"Get ()"},{"location":"CppContainer_ArrayProxy_RoomConfigEntries/#variables","text":"","title":"Variables"},{"location":"CppContainer_ArrayProxy_RoomConfigEntries/#size","text":"","title":"Size"},{"location":"CppContainer_ArrayProxy_RoomConfigSpawns/","text":"Class \"CppContainer::ArrayProxy::RoomConfigSpawns\" \u2693\ufe0e Operators \u2693\ufe0e __len () \u2693\ufe0e int __len ( ) \u2693\ufe0e The length (#) operation. Returns the amount of spawnables in this list. Functions \u2693\ufe0e Get () \u2693\ufe0e RoomConfig Spawn Get ( int idx ) \u2693\ufe0e Returns a RoomConfig Spawn at the index of the list provided. Variables \u2693\ufe0e Size \u2693\ufe0e int Size \u2693\ufe0e The amount of spawnables in the list.","title":"RoomConfigSpawns"},{"location":"CppContainer_ArrayProxy_RoomConfigSpawns/#class-cppcontainerarrayproxyroomconfigspawns","text":"","title":"Class \"CppContainer::ArrayProxy::RoomConfigSpawns\""},{"location":"CppContainer_ArrayProxy_RoomConfigSpawns/#operators","text":"","title":"Operators"},{"location":"CppContainer_ArrayProxy_RoomConfigSpawns/#__len","text":"","title":"__len ()"},{"location":"CppContainer_ArrayProxy_RoomConfigSpawns/#functions","text":"","title":"Functions"},{"location":"CppContainer_ArrayProxy_RoomConfigSpawns/#get","text":"","title":"Get ()"},{"location":"CppContainer_ArrayProxy_RoomConfigSpawns/#variables","text":"","title":"Variables"},{"location":"CppContainer_ArrayProxy_RoomConfigSpawns/#size","text":"","title":"Size"},{"location":"CppContainer_ArrayProxy_RoomDescriptor/","text":"Class \"CppContainer::ArrayProxy::RoomDescriptor\" \u2693\ufe0e Operators \u2693\ufe0e __len () \u2693\ufe0e int __len ( ) \u2693\ufe0e The length (#) operation. Returns the amount of rooms in the list. Functions \u2693\ufe0e Get () \u2693\ufe0e RoomDescriptor Get ( int idx ) \u2693\ufe0e Returns a RoomDescriptor at the index of the list provided. Variables \u2693\ufe0e Size \u2693\ufe0e int Size \u2693\ufe0e The amount of rooms in the list.","title":"RoomDescriptor"},{"location":"CppContainer_ArrayProxy_RoomDescriptor/#class-cppcontainerarrayproxyroomdescriptor","text":"","title":"Class \"CppContainer::ArrayProxy::RoomDescriptor\""},{"location":"CppContainer_ArrayProxy_RoomDescriptor/#operators","text":"","title":"Operators"},{"location":"CppContainer_ArrayProxy_RoomDescriptor/#__len","text":"","title":"__len ()"},{"location":"CppContainer_ArrayProxy_RoomDescriptor/#functions","text":"","title":"Functions"},{"location":"CppContainer_ArrayProxy_RoomDescriptor/#get","text":"","title":"Get ()"},{"location":"CppContainer_ArrayProxy_RoomDescriptor/#variables","text":"","title":"Variables"},{"location":"CppContainer_ArrayProxy_RoomDescriptor/#size","text":"","title":"Size"},{"location":"CppContainer_ArrayProxy_intValues/","text":"Class \"CppContainer::ArrayProxy::intValues\" \u2693\ufe0e Operators \u2693\ufe0e __len () \u2693\ufe0e int __len ( ) \u2693\ufe0e The length (#) operation. Returns the size of this list. Functions \u2693\ufe0e Get () \u2693\ufe0e userdata Get ( int idx ) \u2693\ufe0e Variables \u2693\ufe0e Size \u2693\ufe0e int Size \u2693\ufe0e","title":"intValues"},{"location":"CppContainer_ArrayProxy_intValues/#class-cppcontainerarrayproxyintvalues","text":"","title":"Class \"CppContainer::ArrayProxy::intValues\""},{"location":"CppContainer_ArrayProxy_intValues/#operators","text":"","title":"Operators"},{"location":"CppContainer_ArrayProxy_intValues/#__len","text":"","title":"__len ()"},{"location":"CppContainer_ArrayProxy_intValues/#functions","text":"","title":"Functions"},{"location":"CppContainer_ArrayProxy_intValues/#get","text":"","title":"Get ()"},{"location":"CppContainer_ArrayProxy_intValues/#variables","text":"","title":"Variables"},{"location":"CppContainer_ArrayProxy_intValues/#size","text":"","title":"Size"},{"location":"CppContainer_EntityList/","text":"Class \"CppContainer::EntityList\" \u2693\ufe0e Operators \u2693\ufe0e __len () \u2693\ufe0e int __len ( ) \u2693\ufe0e The length (#) operation. Returns the amount of entities in the list. Functions \u2693\ufe0e Get () \u2693\ufe0e Entity Get ( int idx ) \u2693\ufe0e Returns an Entity at the index of the list provided. Variables \u2693\ufe0e Size \u2693\ufe0e int Size \u2693\ufe0e The amount of entities in the list.","title":"EntityList"},{"location":"CppContainer_EntityList/#class-cppcontainerentitylist","text":"","title":"Class \"CppContainer::EntityList\""},{"location":"CppContainer_EntityList/#operators","text":"","title":"Operators"},{"location":"CppContainer_EntityList/#__len","text":"","title":"__len ()"},{"location":"CppContainer_EntityList/#functions","text":"","title":"Functions"},{"location":"CppContainer_EntityList/#get","text":"","title":"Get ()"},{"location":"CppContainer_EntityList/#variables","text":"","title":"Variables"},{"location":"CppContainer_EntityList/#size","text":"","title":"Size"},{"location":"CppContainer_Vector_CardConfigList/","text":"Class \"CppContainer::Vector::CardConfigList\" \u2693\ufe0e Operators \u2693\ufe0e __len () \u2693\ufe0e int __len ( ) \u2693\ufe0e The length (#) operation. Returns the amount of cards in the list. Functions \u2693\ufe0e Get () \u2693\ufe0e userdata Get ( int idx ) \u2693\ufe0e Returns userdata at the index of the list provided. Bugs This function does not return usable userdata, rendering it useless. Variables \u2693\ufe0e Size \u2693\ufe0e int Size \u2693\ufe0e The amount of cards in the list.","title":"CardConfigList"},{"location":"CppContainer_Vector_CardConfigList/#class-cppcontainervectorcardconfiglist","text":"","title":"Class \"CppContainer::Vector::CardConfigList\""},{"location":"CppContainer_Vector_CardConfigList/#operators","text":"","title":"Operators"},{"location":"CppContainer_Vector_CardConfigList/#__len","text":"","title":"__len ()"},{"location":"CppContainer_Vector_CardConfigList/#functions","text":"","title":"Functions"},{"location":"CppContainer_Vector_CardConfigList/#get","text":"","title":"Get ()"},{"location":"CppContainer_Vector_CardConfigList/#variables","text":"","title":"Variables"},{"location":"CppContainer_Vector_CardConfigList/#size","text":"","title":"Size"},{"location":"CppContainer_Vector_CostumeConfigList/","text":"Class \"CppContainer::Vector::CostumeConfigList\" \u2693\ufe0e Operators \u2693\ufe0e __len () \u2693\ufe0e int __len ( ) \u2693\ufe0e The length (#) operation. Returns the amount of costumes in the list. Functions \u2693\ufe0e Get () \u2693\ufe0e userdata Get ( int idx ) \u2693\ufe0e Returns userdata at the index of the list provided. Bugs This function does not return usable userdata, rendering it useless. Variables \u2693\ufe0e Size \u2693\ufe0e int Size \u2693\ufe0e The amount of costumes in the list.","title":"CostumeConfigList"},{"location":"CppContainer_Vector_CostumeConfigList/#class-cppcontainervectorcostumeconfiglist","text":"","title":"Class \"CppContainer::Vector::CostumeConfigList\""},{"location":"CppContainer_Vector_CostumeConfigList/#operators","text":"","title":"Operators"},{"location":"CppContainer_Vector_CostumeConfigList/#__len","text":"","title":"__len ()"},{"location":"CppContainer_Vector_CostumeConfigList/#functions","text":"","title":"Functions"},{"location":"CppContainer_Vector_CostumeConfigList/#get","text":"","title":"Get ()"},{"location":"CppContainer_Vector_CostumeConfigList/#variables","text":"","title":"Variables"},{"location":"CppContainer_Vector_CostumeConfigList/#size","text":"","title":"Size"},{"location":"CppContainer_Vector_EffectList/","text":"Class \"CppContainer::Vector::EffectList\" \u2693\ufe0e Operators \u2693\ufe0e __len () \u2693\ufe0e int __len ( ) \u2693\ufe0e The length (#) operation. Returns the amount of costumes in the list. Functions \u2693\ufe0e Get () \u2693\ufe0e userdata Get ( int idx ) \u2693\ufe0e Returns userdata at the index of the list provided. Bugs This function does not return usable userdata, rendering it useless. Variables \u2693\ufe0e Size \u2693\ufe0e int Size \u2693\ufe0e The amount of costumes in the list.","title":"EffectList"},{"location":"CppContainer_Vector_EffectList/#class-cppcontainervectoreffectlist","text":"","title":"Class \"CppContainer::Vector::EffectList\""},{"location":"CppContainer_Vector_EffectList/#operators","text":"","title":"Operators"},{"location":"CppContainer_Vector_EffectList/#__len","text":"","title":"__len ()"},{"location":"CppContainer_Vector_EffectList/#functions","text":"","title":"Functions"},{"location":"CppContainer_Vector_EffectList/#get","text":"","title":"Get ()"},{"location":"CppContainer_Vector_EffectList/#variables","text":"","title":"Variables"},{"location":"CppContainer_Vector_EffectList/#size","text":"","title":"Size"},{"location":"CppContainer_Vector_ItemConfigList/","text":"Class \"CppContainer::Vector::ItemConfigList\" \u2693\ufe0e Operators \u2693\ufe0e __len () \u2693\ufe0e int __len ( ) \u2693\ufe0e The length (#) operation. Returns the amount of items in the list. Functions \u2693\ufe0e Get () \u2693\ufe0e userdata Get ( int idx ) \u2693\ufe0e Returns userdata at the index of the list provided. Bugs This function does not return usable userdata, rendering it useless. Variables \u2693\ufe0e Size \u2693\ufe0e int Size \u2693\ufe0e The amount of items in the list.","title":"ItemConfigList"},{"location":"CppContainer_Vector_ItemConfigList/#class-cppcontainervectoritemconfiglist","text":"","title":"Class \"CppContainer::Vector::ItemConfigList\""},{"location":"CppContainer_Vector_ItemConfigList/#operators","text":"","title":"Operators"},{"location":"CppContainer_Vector_ItemConfigList/#__len","text":"","title":"__len ()"},{"location":"CppContainer_Vector_ItemConfigList/#functions","text":"","title":"Functions"},{"location":"CppContainer_Vector_ItemConfigList/#get","text":"","title":"Get ()"},{"location":"CppContainer_Vector_ItemConfigList/#variables","text":"","title":"Variables"},{"location":"CppContainer_Vector_ItemConfigList/#size","text":"","title":"Size"},{"location":"CppContainer_Vector_PillConfigList/","text":"Class \"CppContainer::Vector::PillConfigList\" \u2693\ufe0e Operators \u2693\ufe0e __len () \u2693\ufe0e int __len ( ) \u2693\ufe0e The length (#) operation. Returns the amount of pill effects in the list. Functions \u2693\ufe0e Get () \u2693\ufe0e userdata Get ( int idx ) \u2693\ufe0e Returns userdata at the index of the list provided. Bugs This function does not return usable userdata, rendering it useless. Variables \u2693\ufe0e Size \u2693\ufe0e int Size \u2693\ufe0e The amount of pill effects in the list.","title":"PillConfigList"},{"location":"CppContainer_Vector_PillConfigList/#class-cppcontainervectorpillconfiglist","text":"","title":"Class \"CppContainer::Vector::PillConfigList\""},{"location":"CppContainer_Vector_PillConfigList/#operators","text":"","title":"Operators"},{"location":"CppContainer_Vector_PillConfigList/#__len","text":"","title":"__len ()"},{"location":"CppContainer_Vector_PillConfigList/#functions","text":"","title":"Functions"},{"location":"CppContainer_Vector_PillConfigList/#get","text":"","title":"Get ()"},{"location":"CppContainer_Vector_PillConfigList/#variables","text":"","title":"Variables"},{"location":"CppContainer_Vector_PillConfigList/#size","text":"","title":"Size"},{"location":"CppContainer_Vector_VectorList/","text":"Class \"CppContainer::Vector::VectorList\" \u2693\ufe0e Operators \u2693\ufe0e __len () \u2693\ufe0e int __len ( ) \u2693\ufe0e The length (#) operation. Returns the size of this list. Functions \u2693\ufe0e Get () \u2693\ufe0e Vector Get ( int idx ) \u2693\ufe0e Variables \u2693\ufe0e Size \u2693\ufe0e int Size \u2693\ufe0e","title":"VectorList"},{"location":"CppContainer_Vector_VectorList/#class-cppcontainervectorvectorlist","text":"","title":"Class \"CppContainer::Vector::VectorList\""},{"location":"CppContainer_Vector_VectorList/#operators","text":"","title":"Operators"},{"location":"CppContainer_Vector_VectorList/#__len","text":"","title":"__len ()"},{"location":"CppContainer_Vector_VectorList/#functions","text":"","title":"Functions"},{"location":"CppContainer_Vector_VectorList/#get","text":"","title":"Get ()"},{"location":"CppContainer_Vector_VectorList/#variables","text":"","title":"Variables"},{"location":"CppContainer_Vector_VectorList/#size","text":"","title":"Size"},{"location":"Entity/","text":"Class \"Entity\" \u2693\ufe0e Children Classes \u2693\ufe0e EntityBomb , EntityEffect , EntityFamiliar , EntityKnife , EntityLaser , EntityNPC , EntityPickup , EntityPlayer , EntityProjectile , EntityTear Functions \u2693\ufe0e Add\u00b7Burn () \u2693\ufe0e void AddBurn ( EntityRef Source, int Duration, float Damage ) \u2693\ufe0e Adds a burn-effect to an enemy. Duration is in Number of Frames. Damage is the Damage taken per frame. Duration infos The Duration must be a minimum of 2 frames. Every consecutive damage tick is 20 frames apart. 1 2 3 4 2 Damage-ticks = 22 frames 3 = 42 4 = 62 ... Bug Changing the Damage value doesnt seem to have an effect. It always deals the amount of damage of the player. The Duration value seems to have an upper limit. For a PlayerEntity, its only lasting for the duration of one damage interval. For Entities its up to 6 damage-intervals. Example Code This code damages every entity in the room for 1 second with the damagesource set to the player. The total damage dealt is 1. 1 2 3 4 local player = Isaac . GetPlayer ( 0 ) for i , entity in ipairs ( Isaac . GetRoomEntities ()) do entity : AddBurn ( EntityRef ( player ), 30 , 1 ) end Add\u00b7Charmed () \u2693\ufe0e void AddCharmed ( int Duration ) \u2693\ufe0e Adds a charmed-effect to an enemy. Duration is in Number of Frames. Charmed enemies are friendly towards isaac and attack other enemies. AddCharmed ( - 1 ) makes the effect permanent and the enemy will follow you even to different rooms. Example Code This code charms every entity in the room for 1 second. 1 2 3 for i , entity in ipairs ( Isaac . GetRoomEntities ()) do entity : AddCharmed ( 30 ) end Add\u00b7Confusion () \u2693\ufe0e void AddConfusion ( EntityRef Source, int Duration, boolean IgnoreBosses ) \u2693\ufe0e Adds a confusion effect to an entity. Duration infos The Duration has a maximum of 5 seconds Example Code This code confuses every entity in the room for 1 second while ignoring bosses. 1 2 3 4 local player = Isaac . GetPlayer ( 0 ) for i , entity in ipairs ( Isaac . GetRoomEntities ()) do entity : AddConfusion ( EntityRef ( player ), 30 , true ) end Add\u00b7Entity\u00b7Flags () \u2693\ufe0e void AddEntityFlags ( int Flags ) \u2693\ufe0e Add EntityFlags to the entity. Flags are used to add specific effects like poisoning or freeze. You can add multiple flags at the same time by bitwise-concatenating them. Example Code This code adds slowing and confusion to the enetity. 1 2 3 4 local player = Isaac . GetPlayer ( 0 ) for i , entity in ipairs ( Isaac . GetRoomEntities ()) do entity : AddEntityFlags ( EntityFlag . FLAG_SLOW | EntityFlag . FLAG_CONFUSION ) end Add\u00b7Fear () \u2693\ufe0e void AddFear ( EntityRef Source, int Duration ) \u2693\ufe0e Adds a fear-effect to an entity. Duration infos The Duration has a maximum of 5 seconds Example Code This code frightens every entity in the room for 1 second. 1 2 3 4 local player = Isaac . GetPlayer ( 0 ) for i , entity in ipairs ( Isaac . GetRoomEntities ()) do entity : AddFear ( EntityRef ( player ), 30 ) end Add\u00b7Freeze () \u2693\ufe0e void AddFreeze ( EntityRef Source, int Duration ) \u2693\ufe0e Freezes an entity, making it unable to move and attack. Duration infos The Duration has a maximum of 5 seconds Example Code This code freezes every entity in the room for 1 second. 1 2 3 4 local player = Isaac . GetPlayer ( 0 ) for i , entity in ipairs ( Isaac . GetRoomEntities ()) do entity : AddFreeze ( EntityRef ( player ), 30 ) end Add\u00b7Health () \u2693\ufe0e void AddHealth ( float HitPoints ) \u2693\ufe0e Heals an entity. Add\u00b7Midas\u00b7Freeze () \u2693\ufe0e void AddMidasFreeze ( EntityRef Source, int Duration ) \u2693\ufe0e Turns the entity into a gold statue (can't move, can't attack, drops coins when killed) Duration infos The Duration has a maximum of 5 seconds Bug The golden color applied to the entity will stay for the full duration passed into the function, despite the freeze effect only lasting for a maximum of 5 seconds. Example Code This code turns every entity in the room into gold for 1 second. 1 2 3 4 local player = Isaac . GetPlayer ( 0 ) for i , entity in ipairs ( Isaac . GetRoomEntities ()) do entity : AddMidasFreeze ( EntityRef ( player ), 30 ) end Add\u00b7Poison () \u2693\ufe0e void AddPoison ( EntityRef Source, int Duration, float Damage ) \u2693\ufe0e Adds a poison effect to the entity. Duration infos The Duration must be a minimum of 2 frames. Every consecutive damage tick is 20 frames apart. 1 2 3 4 2 Damage-ticks = 22 frames 3 = 42 4 = 62 ... Bug Changing the Damage value doesnt seem to have an effect. It always deals the amount of damage of the player. The Duration value seems to have an upper limit. For a PlayerEntity, its only lasting for the duration of one damage interval. For Entities its up to 6 damage-intervals. Example Code This code applies a poison effect to every entity in the room for 1 second. 1 2 3 4 local player = Isaac . GetPlayer ( 0 ) for i , entity in ipairs ( Isaac . GetRoomEntities ()) do entity : AddPoison ( EntityRef ( player ), 30 , 1 ) end Add\u00b7Shrink () \u2693\ufe0e void AddShrink ( EntityRef Source, int Duration ) \u2693\ufe0e Adds a shrink effect to the entity. Duration infos The Duration has a maximum of 5 seconds Example Code This code shrinks every entity in the room for 1 second. 1 2 3 4 local player = Isaac . GetPlayer ( 0 ) for i , entity in ipairs ( Isaac . GetRoomEntities ()) do entity : AddShrink ( EntityRef ( player ), 30 ) end Add\u00b7Slowing () \u2693\ufe0e void AddSlowing ( EntityRef Source, int Duration, float SlowValue, Color SlowColor ) \u2693\ufe0e Makes the friction higher effectively slowing down the entity. Example Code This code slows every entity in the room for 1 second with 0.5 original speed and applying a red color to it. 1 2 3 4 5 local player = Isaac . GetPlayer ( 0 ) local slowColor = Color ( 1 , 0 , 0 , 1 , 0 , 0 , 0 ) for i , entity in ipairs ( Isaac . GetRoomEntities ()) do entity : AddSlowing ( EntityRef ( player ), 30 , 0.5 , slowColor ) end Add\u00b7Velocity () \u2693\ufe0e void AddVelocity ( Vector Velocity ) \u2693\ufe0e Adds velocity to the entity. This can be used to move him in a certain direktion (for example as a result of collision) Blood\u00b7Explode () \u2693\ufe0e void BloodExplode ( ) \u2693\ufe0e Explodes with gibs and blood. Can\u00b7Shut\u00b7Doors () \u2693\ufe0e boolean CanShutDoors ( ) \u2693\ufe0e enemies keep the doors shut. Clear\u00b7Entity\u00b7Flags () \u2693\ufe0e void ClearEntityFlags ( int Flags ) \u2693\ufe0e Removes all EntityFlags from the entity. Collides\u00b7With\u00b7Grid () \u2693\ufe0e boolean CollidesWithGrid ( ) \u2693\ufe0e Returns true, if the entity is able to collide with the grid. Die () \u2693\ufe0e void Die ( ) \u2693\ufe0e Kills the entity and trigger its death animation. Exists () \u2693\ufe0e boolean Exists ( ) \u2693\ufe0e Returns true, if this entity still exists. Get\u00b7Boss\u00b7ID () \u2693\ufe0e BossId GetBossID ( ) \u2693\ufe0e If the entity is a boss, it returns its specific boss id. If it isnt a boss it will return 0. Get\u00b7Color () \u2693\ufe0e Color GetColor ( ) \u2693\ufe0e Returns the Color object assosiated to this entity. Get\u00b7Data () \u2693\ufe0e table GetData ( ) \u2693\ufe0e Returns a table that contains all data assosiated with the entity. This can be used to add custom data as well. Notes Data associated with an entity does only persists in between rooms, when the entity is a player, familiar or the entity has the \"EntityFlag.FLAG_PERSISTENT\" Flag active. Data does not persists in between exiting the game to a menu, or when restarting/finishing a run. Example Code This code adds custom data to an entity or prints it in the console if it exists. 1 2 3 4 5 if type ( entity : GetData ()[ \"MyValue\" ]) == type ( nil ) then -- checks, if the Data does exist already entity : GetData ()[ \"MyValue\" ] = \"Cool\" -- assign a value to the data else print ( entity : GetData ()[ \"MyValue\" ]) -- this will print \"Cool\" in the console end Get\u00b7Drop\u00b7RNG () \u2693\ufe0e RNG GetDropRNG ( ) \u2693\ufe0e Returns the assigned RNG object for the entity. This RNG is used to determine the items that are dropped on the entities death. Get\u00b7Entity\u00b7Flags () \u2693\ufe0e int GetEntityFlags ( ) \u2693\ufe0e Get the EntityFlags of the entity. This will be a number which acts like a bitmask. Example Code This code prints something in the console, if the entity has a specific EntityFlags . 1 2 3 if entity : GetEntityFlags () & EntityFlag . FLAG_CONFUSION == EntityFlag . FLAG_CONFUSION then print ( \"This entity is confused!\" ) end Get\u00b7Last\u00b7Child () \u2693\ufe0e Entity GetLastChild ( ) \u2693\ufe0e Returns the last entity spawned by this entity. Get\u00b7Last\u00b7Parent () \u2693\ufe0e Entity GetLastParent ( ) \u2693\ufe0e Returns the last parent of this entity. Get\u00b7Sprite () \u2693\ufe0e Sprite GetSprite ( ) \u2693\ufe0e Return the sprite object of the entity. Has\u00b7Common\u00b7Parent\u00b7With\u00b7Entity () \u2693\ufe0e boolean HasCommonParentWithEntity ( Entity Other ) \u2693\ufe0e Has\u00b7Entity\u00b7Flags () \u2693\ufe0e boolean HasEntityFlags ( int Flags ) \u2693\ufe0e Returns true, if the entity has all named EntityFlags set. Example Code This code prints something in the console, if the entity has a specific EntityFlags . 1 2 3 if entity : HasEntityFlags ( EntityFlag . FLAG_CONFUSION ) then print ( \"This entity is confused!\" ) end Has\u00b7Full\u00b7Health () \u2693\ufe0e boolean HasFullHealth ( ) \u2693\ufe0e Has\u00b7Mortal\u00b7Damage () \u2693\ufe0e boolean HasMortalDamage ( ) \u2693\ufe0e Notes The game adds taken damage to a damage buffer, which gets applied in the next frame. HasMortalDamage() returns true if the buffered damage is enough to kill the entity. HasMortalDamage() will be updated additionally after TakeDamage() is called. Is\u00b7Active\u00b7Enemy () \u2693\ufe0e boolean IsActiveEnemy ( boolean includeDead ) \u2693\ufe0e return true for non background NPCs (ex: every enemy except fire and shopkeepers) Is\u00b7Boss () \u2693\ufe0e boolean IsBoss ( ) \u2693\ufe0e bosses display health bar Is\u00b7Dead () \u2693\ufe0e boolean IsDead ( ) \u2693\ufe0e Is\u00b7Enemy () \u2693\ufe0e boolean IsEnemy ( ) \u2693\ufe0e return true for NPCs that are not controlled by the player Is\u00b7Flying () \u2693\ufe0e boolean IsFlying ( ) \u2693\ufe0e Is\u00b7Frame () \u2693\ufe0e boolean IsFrame ( int Frame, int Offset ) \u2693\ufe0e true every X frames Is\u00b7Invincible () \u2693\ufe0e boolean IsInvincible ( ) \u2693\ufe0e Is\u00b7Visible () \u2693\ufe0e boolean IsVisible ( ) \u2693\ufe0e Is\u00b7Vulnerable\u00b7Enemy () \u2693\ufe0e boolean IsVulnerableEnemy ( ) \u2693\ufe0e return true for enemies that can be damaged Kill () \u2693\ufe0e void Kill ( ) \u2693\ufe0e Kills the entity and makes a blood splat or gibs. Multiply\u00b7Friction () \u2693\ufe0e void MultiplyFriction ( float Value ) \u2693\ufe0e Post\u00b7Render () \u2693\ufe0e void PostRender ( ) \u2693\ufe0e Remove () \u2693\ufe0e void Remove ( ) \u2693\ufe0e Remove the entity from the game instantly, without doing any additional effects/animations. Remove\u00b7Status\u00b7Effects () \u2693\ufe0e void RemoveStatusEffects ( ) \u2693\ufe0e Removes all Status Effects from the entity. Render () \u2693\ufe0e void Render ( Vector Offset ) \u2693\ufe0e Render the current sprite of the Entity at the current entity position + offset. Render\u00b7Shadow\u00b7Layer () \u2693\ufe0e boolean RenderShadowLayer ( Vector Offset ) \u2693\ufe0e Render the shadow / shadow layer again. Set\u00b7Color () \u2693\ufe0e void SetColor ( Color Color, int Duration, int Priority, boolean Fadeout, boolean Share ) \u2693\ufe0e Set the colormask for the entity. This can be used to tint the sprites in different colors. Example Code This code changes the color of the sprite to a fully white sprite for 15 frames. 1 entity : SetColor ( Color ( 1 , 1 , 1 , 1 , 255 , 255 , 255 ), 15 , 1 , false , false ) Set\u00b7Size () \u2693\ufe0e void SetSize ( float Size, Vector SizeMulti, int NumGridCollisionPoints ) \u2693\ufe0e Set the size ofthe entity. Set\u00b7Sprite\u00b7Frame () \u2693\ufe0e void SetSpriteFrame ( string AnimationName, int FrameNum ) \u2693\ufe0e Set\u00b7Sprite\u00b7Overlay\u00b7Frame () \u2693\ufe0e void SetSpriteOverlayFrame ( string AnimationName, int FrameNum ) \u2693\ufe0e Take\u00b7Damage () \u2693\ufe0e boolean TakeDamage ( float Damage, int Flags, EntityRef Source, int DamageCountdown ) \u2693\ufe0e Notes The game adds taken damage to a damage buffer, which gets applied in the next frame. Therefore, TakeDamage() will not decremented the entities HP immediately upon calling the function. Rather, it is only updated on the frame afterwards. To\u00b7Bomb () \u2693\ufe0e EntityBomb ToBomb ( ) \u2693\ufe0e To\u00b7Effect () \u2693\ufe0e EntityEffect ToEffect ( ) \u2693\ufe0e To\u00b7Familiar () \u2693\ufe0e EntityFamiliar ToFamiliar ( ) \u2693\ufe0e To\u00b7Knife () \u2693\ufe0e EntityKnife ToKnife ( ) \u2693\ufe0e To\u00b7Laser () \u2693\ufe0e EntityLaser ToLaser ( ) \u2693\ufe0e To\u00b7NPC () \u2693\ufe0e EntityNPC ToNPC ( ) \u2693\ufe0e To\u00b7Pickup () \u2693\ufe0e EntityPickup ToPickup ( ) \u2693\ufe0e To\u00b7Player () \u2693\ufe0e EntityPlayer ToPlayer ( ) \u2693\ufe0e To\u00b7Projectile () \u2693\ufe0e EntityProjectile ToProjectile ( ) \u2693\ufe0e To\u00b7Tear () \u2693\ufe0e EntityTear ToTear ( ) \u2693\ufe0e Update () \u2693\ufe0e void Update ( ) \u2693\ufe0e Variables \u2693\ufe0e Child \u2693\ufe0e Entity Child \u2693\ufe0e Collision\u00b7Damage \u2693\ufe0e float CollisionDamage \u2693\ufe0e Depth\u00b7Offset \u2693\ufe0e float DepthOffset \u2693\ufe0e Get/Set the depth-offset of the entity. This value is added to the Y Position of the entity, which is then used to determine the rendering order of each entity. Default value is 0 for all entities. Example Code This code explains how this variable works. 1 2 3 4 5 6 7 entity1 . Position . Y -- => 50 entity2 . Position . Y -- => 45 -- Entity1 is rendered in front of Entity2 entity1 . DepthOffset = - 10 -- new Entity1 renderYPosition => 40 -- Entity2 is rendered in front of Entity1 Drop\u00b7Seed \u2693\ufe0e int DropSeed \u2693\ufe0e Get/set the Seed of the Drop RNG. Entity\u00b7Collision\u00b7Class \u2693\ufe0e EntityCollisionClass EntityCollisionClass \u2693\ufe0e FlipX \u2693\ufe0e boolean FlipX \u2693\ufe0e Frame\u00b7Count \u2693\ufe0e int FrameCount \u2693\ufe0e Friction \u2693\ufe0e float Friction \u2693\ufe0e loaded from entity config Grid\u00b7Collision\u00b7Class \u2693\ufe0e GridCollisionClass GridCollisionClass \u2693\ufe0e Hit\u00b7Points \u2693\ufe0e float HitPoints \u2693\ufe0e Notes The HitPoints value is not decremented immediately upon taking damage like you would expect. Rather, it is only updated on the frame after the entity takes damage. Index \u2693\ufe0e int Index \u2693\ufe0e Init\u00b7Seed \u2693\ufe0e int InitSeed \u2693\ufe0e Mass \u2693\ufe0e float Mass \u2693\ufe0e Max\u00b7Hit\u00b7Points \u2693\ufe0e float MaxHitPoints \u2693\ufe0e Parent \u2693\ufe0e Entity Parent \u2693\ufe0e Position \u2693\ufe0e Vector Position \u2693\ufe0e Position\u00b7Offset \u2693\ufe0e Vector PositionOffset \u2693\ufe0e Render\u00b7ZOffset \u2693\ufe0e int RenderZOffset \u2693\ufe0e Bugs This variable doesnt seem to do anything useful. Use DepthOffset instead. Size\u00b7Multi \u2693\ufe0e Vector SizeMulti \u2693\ufe0e Spawner\u00b7Entity \u2693\ufe0e Entity SpawnerEntity \u2693\ufe0e Spawner\u00b7Type \u2693\ufe0e EntityType SpawnerType \u2693\ufe0e Spawner\u00b7Variant \u2693\ufe0e int SpawnerVariant \u2693\ufe0e Spawn\u00b7Grid\u00b7Index \u2693\ufe0e int SpawnGridIndex \u2693\ufe0e Splat\u00b7Color \u2693\ufe0e Color SplatColor \u2693\ufe0e Sprite\u00b7Offset \u2693\ufe0e Vector SpriteOffset \u2693\ufe0e Sprite\u00b7Rotation \u2693\ufe0e float SpriteRotation \u2693\ufe0e Sprite\u00b7Scale \u2693\ufe0e Vector SpriteScale \u2693\ufe0e Sub\u00b7Type \u2693\ufe0e int SubType \u2693\ufe0e Target \u2693\ufe0e Entity Target \u2693\ufe0e Target\u00b7Position \u2693\ufe0e Vector TargetPosition \u2693\ufe0e Type \u2693\ufe0e EntityType Type \u2693\ufe0e Variant \u2693\ufe0e int Variant \u2693\ufe0e Velocity \u2693\ufe0e Vector Velocity \u2693\ufe0e Visible \u2693\ufe0e boolean Visible \u2693\ufe0e Size \u2693\ufe0e float Size \u2693\ufe0e Returns the size of the hitbox on an entity.","title":"Entity"},{"location":"Entity/#class-entity","text":"","title":"Class \"Entity\""},{"location":"Entity/#children-classes","text":"EntityBomb , EntityEffect , EntityFamiliar , EntityKnife , EntityLaser , EntityNPC , EntityPickup , EntityPlayer , EntityProjectile , EntityTear","title":"Children Classes"},{"location":"Entity/#functions","text":"","title":"Functions"},{"location":"Entity/#addburn","text":"","title":"Add\u00b7Burn ()"},{"location":"Entity/#addcharmed","text":"","title":"Add\u00b7Charmed ()"},{"location":"Entity/#addconfusion","text":"","title":"Add\u00b7Confusion ()"},{"location":"Entity/#addentityflags","text":"","title":"Add\u00b7Entity\u00b7Flags ()"},{"location":"Entity/#addfear","text":"","title":"Add\u00b7Fear ()"},{"location":"Entity/#addfreeze","text":"","title":"Add\u00b7Freeze ()"},{"location":"Entity/#addhealth","text":"","title":"Add\u00b7Health ()"},{"location":"Entity/#addmidasfreeze","text":"","title":"Add\u00b7Midas\u00b7Freeze ()"},{"location":"Entity/#addpoison","text":"","title":"Add\u00b7Poison ()"},{"location":"Entity/#addshrink","text":"","title":"Add\u00b7Shrink ()"},{"location":"Entity/#addslowing","text":"","title":"Add\u00b7Slowing ()"},{"location":"Entity/#addvelocity","text":"","title":"Add\u00b7Velocity ()"},{"location":"Entity/#bloodexplode","text":"","title":"Blood\u00b7Explode ()"},{"location":"Entity/#canshutdoors","text":"","title":"Can\u00b7Shut\u00b7Doors ()"},{"location":"Entity/#clearentityflags","text":"","title":"Clear\u00b7Entity\u00b7Flags ()"},{"location":"Entity/#collideswithgrid","text":"","title":"Collides\u00b7With\u00b7Grid ()"},{"location":"Entity/#die","text":"","title":"Die ()"},{"location":"Entity/#exists","text":"","title":"Exists ()"},{"location":"Entity/#getbossid","text":"","title":"Get\u00b7Boss\u00b7ID ()"},{"location":"Entity/#getcolor","text":"","title":"Get\u00b7Color ()"},{"location":"Entity/#getdata","text":"","title":"Get\u00b7Data ()"},{"location":"Entity/#getdroprng","text":"","title":"Get\u00b7Drop\u00b7RNG ()"},{"location":"Entity/#getentityflags","text":"","title":"Get\u00b7Entity\u00b7Flags ()"},{"location":"Entity/#getlastchild","text":"","title":"Get\u00b7Last\u00b7Child ()"},{"location":"Entity/#getlastparent","text":"","title":"Get\u00b7Last\u00b7Parent ()"},{"location":"Entity/#getsprite","text":"","title":"Get\u00b7Sprite ()"},{"location":"Entity/#hascommonparentwithentity","text":"","title":"Has\u00b7Common\u00b7Parent\u00b7With\u00b7Entity ()"},{"location":"Entity/#hasentityflags","text":"","title":"Has\u00b7Entity\u00b7Flags ()"},{"location":"Entity/#hasfullhealth","text":"","title":"Has\u00b7Full\u00b7Health ()"},{"location":"Entity/#hasmortaldamage","text":"","title":"Has\u00b7Mortal\u00b7Damage ()"},{"location":"Entity/#isactiveenemy","text":"","title":"Is\u00b7Active\u00b7Enemy ()"},{"location":"Entity/#isboss","text":"","title":"Is\u00b7Boss ()"},{"location":"Entity/#isdead","text":"","title":"Is\u00b7Dead ()"},{"location":"Entity/#isenemy","text":"","title":"Is\u00b7Enemy ()"},{"location":"Entity/#isflying","text":"","title":"Is\u00b7Flying ()"},{"location":"Entity/#isframe","text":"","title":"Is\u00b7Frame ()"},{"location":"Entity/#isinvincible","text":"","title":"Is\u00b7Invincible ()"},{"location":"Entity/#isvisible","text":"","title":"Is\u00b7Visible ()"},{"location":"Entity/#isvulnerableenemy","text":"","title":"Is\u00b7Vulnerable\u00b7Enemy ()"},{"location":"Entity/#kill","text":"","title":"Kill ()"},{"location":"Entity/#multiplyfriction","text":"","title":"Multiply\u00b7Friction ()"},{"location":"Entity/#postrender","text":"","title":"Post\u00b7Render ()"},{"location":"Entity/#remove","text":"","title":"Remove ()"},{"location":"Entity/#removestatuseffects","text":"","title":"Remove\u00b7Status\u00b7Effects ()"},{"location":"Entity/#render","text":"","title":"Render ()"},{"location":"Entity/#rendershadowlayer","text":"","title":"Render\u00b7Shadow\u00b7Layer ()"},{"location":"Entity/#setcolor","text":"","title":"Set\u00b7Color ()"},{"location":"Entity/#setsize","text":"","title":"Set\u00b7Size ()"},{"location":"Entity/#setspriteframe","text":"","title":"Set\u00b7Sprite\u00b7Frame ()"},{"location":"Entity/#setspriteoverlayframe","text":"","title":"Set\u00b7Sprite\u00b7Overlay\u00b7Frame ()"},{"location":"Entity/#takedamage","text":"","title":"Take\u00b7Damage ()"},{"location":"Entity/#tobomb","text":"","title":"To\u00b7Bomb ()"},{"location":"Entity/#toeffect","text":"","title":"To\u00b7Effect ()"},{"location":"Entity/#tofamiliar","text":"","title":"To\u00b7Familiar ()"},{"location":"Entity/#toknife","text":"","title":"To\u00b7Knife ()"},{"location":"Entity/#tolaser","text":"","title":"To\u00b7Laser ()"},{"location":"Entity/#tonpc","text":"","title":"To\u00b7NPC ()"},{"location":"Entity/#topickup","text":"","title":"To\u00b7Pickup ()"},{"location":"Entity/#toplayer","text":"","title":"To\u00b7Player ()"},{"location":"Entity/#toprojectile","text":"","title":"To\u00b7Projectile ()"},{"location":"Entity/#totear","text":"","title":"To\u00b7Tear ()"},{"location":"Entity/#update","text":"","title":"Update ()"},{"location":"Entity/#variables","text":"","title":"Variables"},{"location":"Entity/#child","text":"","title":"Child"},{"location":"Entity/#collisiondamage","text":"","title":"Collision\u00b7Damage"},{"location":"Entity/#depthoffset","text":"","title":"Depth\u00b7Offset"},{"location":"Entity/#dropseed","text":"","title":"Drop\u00b7Seed"},{"location":"Entity/#entitycollisionclass","text":"","title":"Entity\u00b7Collision\u00b7Class"},{"location":"Entity/#flipx","text":"","title":"FlipX"},{"location":"Entity/#framecount","text":"","title":"Frame\u00b7Count"},{"location":"Entity/#friction","text":"","title":"Friction"},{"location":"Entity/#gridcollisionclass","text":"","title":"Grid\u00b7Collision\u00b7Class"},{"location":"Entity/#hitpoints","text":"","title":"Hit\u00b7Points"},{"location":"Entity/#index","text":"","title":"Index"},{"location":"Entity/#initseed","text":"","title":"Init\u00b7Seed"},{"location":"Entity/#mass","text":"","title":"Mass"},{"location":"Entity/#maxhitpoints","text":"","title":"Max\u00b7Hit\u00b7Points"},{"location":"Entity/#parent","text":"","title":"Parent"},{"location":"Entity/#position","text":"","title":"Position"},{"location":"Entity/#positionoffset","text":"","title":"Position\u00b7Offset"},{"location":"Entity/#renderzoffset","text":"","title":"Render\u00b7ZOffset"},{"location":"Entity/#sizemulti","text":"","title":"Size\u00b7Multi"},{"location":"Entity/#spawnerentity","text":"","title":"Spawner\u00b7Entity"},{"location":"Entity/#spawnertype","text":"","title":"Spawner\u00b7Type"},{"location":"Entity/#spawnervariant","text":"","title":"Spawner\u00b7Variant"},{"location":"Entity/#spawngridindex","text":"","title":"Spawn\u00b7Grid\u00b7Index"},{"location":"Entity/#splatcolor","text":"","title":"Splat\u00b7Color"},{"location":"Entity/#spriteoffset","text":"","title":"Sprite\u00b7Offset"},{"location":"Entity/#spriterotation","text":"","title":"Sprite\u00b7Rotation"},{"location":"Entity/#spritescale","text":"","title":"Sprite\u00b7Scale"},{"location":"Entity/#subtype","text":"","title":"Sub\u00b7Type"},{"location":"Entity/#target","text":"","title":"Target"},{"location":"Entity/#targetposition","text":"","title":"Target\u00b7Position"},{"location":"Entity/#type","text":"","title":"Type"},{"location":"Entity/#variant","text":"","title":"Variant"},{"location":"Entity/#velocity","text":"","title":"Velocity"},{"location":"Entity/#visible","text":"","title":"Visible"},{"location":"Entity/#size","text":"","title":"Size"},{"location":"EntityBomb/","text":"Class \"EntityBomb\" \u2693\ufe0e Inherits from Class: \u2693\ufe0e Entity Functions \u2693\ufe0e Set\u00b7Explosion\u00b7Countdown () \u2693\ufe0e void SetExplosionCountdown ( int Countdown ) \u2693\ufe0e Variables \u2693\ufe0e Explosion\u00b7Damage \u2693\ufe0e float ExplosionDamage \u2693\ufe0e Flags \u2693\ufe0e int Flags \u2693\ufe0e Uses TearFlags to alter the behavior of the bomb. Is\u00b7Fetus \u2693\ufe0e boolean IsFetus \u2693\ufe0e Radius\u00b7Multiplier \u2693\ufe0e float RadiusMultiplier \u2693\ufe0e","title":"EntityBomb"},{"location":"EntityBomb/#class-entitybomb","text":"","title":"Class \"EntityBomb\""},{"location":"EntityBomb/#inherits-from-class","text":"Entity","title":"Inherits from Class:"},{"location":"EntityBomb/#functions","text":"","title":"Functions"},{"location":"EntityBomb/#setexplosioncountdown","text":"","title":"Set\u00b7Explosion\u00b7Countdown ()"},{"location":"EntityBomb/#variables","text":"","title":"Variables"},{"location":"EntityBomb/#explosiondamage","text":"","title":"Explosion\u00b7Damage"},{"location":"EntityBomb/#flags","text":"","title":"Flags"},{"location":"EntityBomb/#isfetus","text":"","title":"Is\u00b7Fetus"},{"location":"EntityBomb/#radiusmultiplier","text":"","title":"Radius\u00b7Multiplier"},{"location":"EntityEffect/","text":"Class \"EntityEffect\" \u2693\ufe0e Inherits from Class: \u2693\ufe0e Entity Functions \u2693\ufe0e Follow\u00b7Parent () \u2693\ufe0e void FollowParent ( Entity Parent ) \u2693\ufe0e Is\u00b7Player\u00b7Creep () \u2693\ufe0e static boolean IsPlayerCreep ( int Variant ) \u2693\ufe0e Set\u00b7Damage\u00b7Source () \u2693\ufe0e void SetDamageSource ( EntityType DamageSource ) \u2693\ufe0e Set\u00b7Radii () \u2693\ufe0e void SetRadii ( float min, float max ) \u2693\ufe0e For shockwaves. Set\u00b7Timeout () \u2693\ufe0e void SetTimeout ( int Timeout ) \u2693\ufe0e Variables \u2693\ufe0e Damage\u00b7Source \u2693\ufe0e int DamageSource \u2693\ufe0e Falling\u00b7Acceleration \u2693\ufe0e float FallingAcceleration \u2693\ufe0e Falling\u00b7Speed \u2693\ufe0e float FallingSpeed \u2693\ufe0e Is\u00b7Following \u2693\ufe0e boolean IsFollowing \u2693\ufe0e Life\u00b7Span \u2693\ufe0e int LifeSpan \u2693\ufe0e m_Height \u2693\ufe0e float m_Height \u2693\ufe0e for particles .dy Max\u00b7Radius \u2693\ufe0e float MaxRadius \u2693\ufe0e Min\u00b7Radius \u2693\ufe0e float MinRadius \u2693\ufe0e For shockwaves. Parent\u00b7Offset \u2693\ufe0e Vector ParentOffset \u2693\ufe0e probably obsolete soon, in favor of m_SpriteOffset Rotation \u2693\ufe0e float Rotation \u2693\ufe0e Scale \u2693\ufe0e float Scale \u2693\ufe0e State \u2693\ufe0e int State \u2693\ufe0e state var, may be used ad lib initialized to 0 in Init() Timeout \u2693\ufe0e int Timeout \u2693\ufe0e","title":"EntityEffect"},{"location":"EntityEffect/#class-entityeffect","text":"","title":"Class \"EntityEffect\""},{"location":"EntityEffect/#inherits-from-class","text":"Entity","title":"Inherits from Class:"},{"location":"EntityEffect/#functions","text":"","title":"Functions"},{"location":"EntityEffect/#followparent","text":"","title":"Follow\u00b7Parent ()"},{"location":"EntityEffect/#isplayercreep","text":"","title":"Is\u00b7Player\u00b7Creep ()"},{"location":"EntityEffect/#setdamagesource","text":"","title":"Set\u00b7Damage\u00b7Source ()"},{"location":"EntityEffect/#setradii","text":"","title":"Set\u00b7Radii ()"},{"location":"EntityEffect/#settimeout","text":"","title":"Set\u00b7Timeout ()"},{"location":"EntityEffect/#variables","text":"","title":"Variables"},{"location":"EntityEffect/#damagesource","text":"","title":"Damage\u00b7Source"},{"location":"EntityEffect/#fallingacceleration","text":"","title":"Falling\u00b7Acceleration"},{"location":"EntityEffect/#fallingspeed","text":"","title":"Falling\u00b7Speed"},{"location":"EntityEffect/#isfollowing","text":"","title":"Is\u00b7Following"},{"location":"EntityEffect/#lifespan","text":"","title":"Life\u00b7Span"},{"location":"EntityEffect/#m_height","text":"","title":"m_Height"},{"location":"EntityEffect/#maxradius","text":"","title":"Max\u00b7Radius"},{"location":"EntityEffect/#minradius","text":"","title":"Min\u00b7Radius"},{"location":"EntityEffect/#parentoffset","text":"","title":"Parent\u00b7Offset"},{"location":"EntityEffect/#rotation","text":"","title":"Rotation"},{"location":"EntityEffect/#scale","text":"","title":"Scale"},{"location":"EntityEffect/#state","text":"","title":"State"},{"location":"EntityEffect/#timeout","text":"","title":"Timeout"},{"location":"EntityFamiliar/","text":"Class \"EntityFamiliar\" \u2693\ufe0e Inherits from Class: \u2693\ufe0e Entity Functions \u2693\ufe0e Add\u00b7Coins () \u2693\ufe0e void AddCoins ( int Value ) \u2693\ufe0e Add\u00b7Hearts () \u2693\ufe0e void AddHearts ( int Hearts ) \u2693\ufe0e Add\u00b7Keys () \u2693\ufe0e void AddKeys ( int Keys ) \u2693\ufe0e Add\u00b7To\u00b7Delayed () \u2693\ufe0e void AddToDelayed ( ) \u2693\ufe0e Adds to delayed. This doesn't remove other flags! Add\u00b7To\u00b7Followers () \u2693\ufe0e void AddToFollowers ( ) \u2693\ufe0e Adds to followers. This doesn't remove other flags! Add\u00b7To\u00b7Orbit () \u2693\ufe0e void AddToOrbit ( int Layer ) \u2693\ufe0e Adds to orbitals. This doesn't remove other flags! Fire\u00b7Projectile () \u2693\ufe0e EntityTear FireProjectile ( Vector Dir ) \u2693\ufe0e Shoots a projectile from the center of the familiar in the direction you defined. If used on a familiar that shoots multiple projectiles (example: harlequin baby), this function will only return the left most projectile based on the direction. If used on familiars with special tears (example: Lil Brimstone,...), this will just shoot a regular tear. This function will not play the shoot animation of the familiar. Follow\u00b7Parent () \u2693\ufe0e void FollowParent ( ) \u2693\ufe0e Follow\u00b7Position () \u2693\ufe0e void FollowPosition ( Vector Pos ) \u2693\ufe0e Get\u00b7Orbit\u00b7Distance () \u2693\ufe0e static Vector GetOrbitDistance ( int Layer ) \u2693\ufe0e Get\u00b7Orbit\u00b7Position () \u2693\ufe0e Vector GetOrbitPosition ( Vector Pos ) \u2693\ufe0e Returns the position of an orbiting familiar relative to the player's position. Returns Vector ( 0 , 0 ) if its a normal familiar . The \"pos\" argument is used as an offset. Move\u00b7Delayed () \u2693\ufe0e void MoveDelayed ( int NumFrames ) \u2693\ufe0e Move\u00b7Diagonally () \u2693\ufe0e void MoveDiagonally ( float Speed ) \u2693\ufe0e Pick\u00b7Enemy\u00b7Target () \u2693\ufe0e void PickEnemyTarget ( float MaxDistance, int FrameInterval ) \u2693\ufe0e Play\u00b7Charge\u00b7Anim () \u2693\ufe0e void PlayChargeAnim ( Direction Dir ) \u2693\ufe0e Play\u00b7Float\u00b7Anim () \u2693\ufe0e void PlayFloatAnim ( Direction Dir ) \u2693\ufe0e Play\u00b7Shoot\u00b7Anim () \u2693\ufe0e void PlayShootAnim ( Direction Dir ) \u2693\ufe0e Recalculate\u00b7Orbit\u00b7Offset () \u2693\ufe0e int RecalculateOrbitOffset ( int Layer, boolean Add ) \u2693\ufe0e Returns the number of familiars in that layer. Remove\u00b7From\u00b7Delayed () \u2693\ufe0e void RemoveFromDelayed ( ) \u2693\ufe0e Remove\u00b7From\u00b7Followers () \u2693\ufe0e void RemoveFromFollowers ( ) \u2693\ufe0e Remove\u00b7From\u00b7Orbit () \u2693\ufe0e void RemoveFromOrbit ( ) \u2693\ufe0e Shoot () \u2693\ufe0e void Shoot ( ) \u2693\ufe0e Bugs This function does not seem to work. Variables \u2693\ufe0e Coins \u2693\ufe0e int Coins \u2693\ufe0e Fire\u00b7Cooldown \u2693\ufe0e int FireCooldown \u2693\ufe0e Head\u00b7Frame\u00b7Delay \u2693\ufe0e int HeadFrameDelay \u2693\ufe0e Hearts \u2693\ufe0e int Hearts \u2693\ufe0e Keys \u2693\ufe0e int Keys \u2693\ufe0e Last\u00b7Direction \u2693\ufe0e Direction LastDirection \u2693\ufe0e Move\u00b7Direction \u2693\ufe0e Direction MoveDirection \u2693\ufe0e Orbit\u00b7Angle\u00b7Offset \u2693\ufe0e float OrbitAngleOffset \u2693\ufe0e Can be used to override the angular position of the familiar on its orbit based on the initial starting position of the orbit. Example Code This code will make all of your orbitals move as a tight wall around you. 1 2 3 4 5 for i , v in ipairs ( Isaac . GetRoomEntities ()) do if v . Type == 3 then v : ToFamiliar (). OrbitAngleOffset = 0.25 * i end end Result: Orbit\u00b7Distance \u2693\ufe0e Vector OrbitDistance \u2693\ufe0e Defines the orbit of the familiar, if its an orbital. The Vector is interpreted as the dimensions of the circle/oval orbit. Example: Vector ( 110 , 90 ) is the orbital of \"Forever alone\". Player \u2693\ufe0e EntityPlayer Player \u2693\ufe0e Room\u00b7Clear\u00b7Count \u2693\ufe0e int RoomClearCount \u2693\ufe0e Shoot\u00b7Direction \u2693\ufe0e Direction ShootDirection \u2693\ufe0e State \u2693\ufe0e int State \u2693\ufe0e","title":"EntityFamiliar"},{"location":"EntityFamiliar/#class-entityfamiliar","text":"","title":"Class \"EntityFamiliar\""},{"location":"EntityFamiliar/#inherits-from-class","text":"Entity","title":"Inherits from Class:"},{"location":"EntityFamiliar/#functions","text":"","title":"Functions"},{"location":"EntityFamiliar/#addcoins","text":"","title":"Add\u00b7Coins ()"},{"location":"EntityFamiliar/#addhearts","text":"","title":"Add\u00b7Hearts ()"},{"location":"EntityFamiliar/#addkeys","text":"","title":"Add\u00b7Keys ()"},{"location":"EntityFamiliar/#addtodelayed","text":"","title":"Add\u00b7To\u00b7Delayed ()"},{"location":"EntityFamiliar/#addtofollowers","text":"","title":"Add\u00b7To\u00b7Followers ()"},{"location":"EntityFamiliar/#addtoorbit","text":"","title":"Add\u00b7To\u00b7Orbit ()"},{"location":"EntityFamiliar/#fireprojectile","text":"","title":"Fire\u00b7Projectile ()"},{"location":"EntityFamiliar/#followparent","text":"","title":"Follow\u00b7Parent ()"},{"location":"EntityFamiliar/#followposition","text":"","title":"Follow\u00b7Position ()"},{"location":"EntityFamiliar/#getorbitdistance","text":"","title":"Get\u00b7Orbit\u00b7Distance ()"},{"location":"EntityFamiliar/#getorbitposition","text":"","title":"Get\u00b7Orbit\u00b7Position ()"},{"location":"EntityFamiliar/#movedelayed","text":"","title":"Move\u00b7Delayed ()"},{"location":"EntityFamiliar/#movediagonally","text":"","title":"Move\u00b7Diagonally ()"},{"location":"EntityFamiliar/#pickenemytarget","text":"","title":"Pick\u00b7Enemy\u00b7Target ()"},{"location":"EntityFamiliar/#playchargeanim","text":"","title":"Play\u00b7Charge\u00b7Anim ()"},{"location":"EntityFamiliar/#playfloatanim","text":"","title":"Play\u00b7Float\u00b7Anim ()"},{"location":"EntityFamiliar/#playshootanim","text":"","title":"Play\u00b7Shoot\u00b7Anim ()"},{"location":"EntityFamiliar/#recalculateorbitoffset","text":"","title":"Recalculate\u00b7Orbit\u00b7Offset ()"},{"location":"EntityFamiliar/#removefromdelayed","text":"","title":"Remove\u00b7From\u00b7Delayed ()"},{"location":"EntityFamiliar/#removefromfollowers","text":"","title":"Remove\u00b7From\u00b7Followers ()"},{"location":"EntityFamiliar/#removefromorbit","text":"","title":"Remove\u00b7From\u00b7Orbit ()"},{"location":"EntityFamiliar/#shoot","text":"","title":"Shoot ()"},{"location":"EntityFamiliar/#variables","text":"","title":"Variables"},{"location":"EntityFamiliar/#coins","text":"","title":"Coins"},{"location":"EntityFamiliar/#firecooldown","text":"","title":"Fire\u00b7Cooldown"},{"location":"EntityFamiliar/#headframedelay","text":"","title":"Head\u00b7Frame\u00b7Delay"},{"location":"EntityFamiliar/#hearts","text":"","title":"Hearts"},{"location":"EntityFamiliar/#keys","text":"","title":"Keys"},{"location":"EntityFamiliar/#lastdirection","text":"","title":"Last\u00b7Direction"},{"location":"EntityFamiliar/#movedirection","text":"","title":"Move\u00b7Direction"},{"location":"EntityFamiliar/#orbitangleoffset","text":"","title":"Orbit\u00b7Angle\u00b7Offset"},{"location":"EntityFamiliar/#orbitdistance","text":"","title":"Orbit\u00b7Distance"},{"location":"EntityFamiliar/#player","text":"","title":"Player"},{"location":"EntityFamiliar/#roomclearcount","text":"","title":"Room\u00b7Clear\u00b7Count"},{"location":"EntityFamiliar/#shootdirection","text":"","title":"Shoot\u00b7Direction"},{"location":"EntityFamiliar/#state","text":"","title":"State"},{"location":"EntityKnife/","text":"Class \"EntityKnife\" \u2693\ufe0e Inherits from Class: \u2693\ufe0e Entity Functions \u2693\ufe0e Get\u00b7Knife\u00b7Distance () \u2693\ufe0e float GetKnifeDistance ( ) \u2693\ufe0e Get\u00b7Knife\u00b7Velocity () \u2693\ufe0e float GetKnifeVelocity ( ) \u2693\ufe0e Get\u00b7RenderZ () \u2693\ufe0e int GetRenderZ ( ) \u2693\ufe0e Is\u00b7Flying () \u2693\ufe0e boolean IsFlying ( ) \u2693\ufe0e Reset () \u2693\ufe0e void Reset ( ) \u2693\ufe0e Used for master knifes, to get back to player. Set\u00b7Path\u00b7Follow\u00b7Speed () \u2693\ufe0e void SetPathFollowSpeed ( float Speed ) \u2693\ufe0e Shoot () \u2693\ufe0e void Shoot ( float Charge, float Range ) \u2693\ufe0e Variables \u2693\ufe0e Charge \u2693\ufe0e float Charge \u2693\ufe0e Is\u00b7Flying \u2693\ufe0e boolean IsFlying \u2693\ufe0e Max\u00b7Distance \u2693\ufe0e float MaxDistance \u2693\ufe0e Path\u00b7Follow\u00b7Speed \u2693\ufe0e float PathFollowSpeed \u2693\ufe0e Unit speed of path moving knifes. Path\u00b7Offset \u2693\ufe0e float PathOffset \u2693\ufe0e Rotation \u2693\ufe0e float Rotation \u2693\ufe0e Rotation\u00b7Offset \u2693\ufe0e float RotationOffset \u2693\ufe0e Scale \u2693\ufe0e float Scale \u2693\ufe0e Tear\u00b7Flags \u2693\ufe0e TearFlags TearFlags \u2693\ufe0e","title":"EntityKnife"},{"location":"EntityKnife/#class-entityknife","text":"","title":"Class \"EntityKnife\""},{"location":"EntityKnife/#inherits-from-class","text":"Entity","title":"Inherits from Class:"},{"location":"EntityKnife/#functions","text":"","title":"Functions"},{"location":"EntityKnife/#getknifedistance","text":"","title":"Get\u00b7Knife\u00b7Distance ()"},{"location":"EntityKnife/#getknifevelocity","text":"","title":"Get\u00b7Knife\u00b7Velocity ()"},{"location":"EntityKnife/#getrenderz","text":"","title":"Get\u00b7RenderZ ()"},{"location":"EntityKnife/#isflying","text":"","title":"Is\u00b7Flying ()"},{"location":"EntityKnife/#reset","text":"","title":"Reset ()"},{"location":"EntityKnife/#setpathfollowspeed","text":"","title":"Set\u00b7Path\u00b7Follow\u00b7Speed ()"},{"location":"EntityKnife/#shoot","text":"","title":"Shoot ()"},{"location":"EntityKnife/#variables","text":"","title":"Variables"},{"location":"EntityKnife/#charge","text":"","title":"Charge"},{"location":"EntityKnife/#isflying_1","text":"","title":"Is\u00b7Flying"},{"location":"EntityKnife/#maxdistance","text":"","title":"Max\u00b7Distance"},{"location":"EntityKnife/#pathfollowspeed","text":"","title":"Path\u00b7Follow\u00b7Speed"},{"location":"EntityKnife/#pathoffset","text":"","title":"Path\u00b7Offset"},{"location":"EntityKnife/#rotation","text":"","title":"Rotation"},{"location":"EntityKnife/#rotationoffset","text":"","title":"Rotation\u00b7Offset"},{"location":"EntityKnife/#scale","text":"","title":"Scale"},{"location":"EntityKnife/#tearflags","text":"","title":"Tear\u00b7Flags"},{"location":"EntityLaser/","text":"Class \"EntityLaser\" \u2693\ufe0e Inherits from Class: \u2693\ufe0e Entity Functions \u2693\ufe0e Calculate\u00b7End\u00b7Point () \u2693\ufe0e static Vector CalculateEndPoint ( Vector Start, Vector Dir, Vector PositionOffset, Entity Parent, float Margin ) \u2693\ufe0e Get\u00b7End\u00b7Point () \u2693\ufe0e Vector GetEndPoint ( ) \u2693\ufe0e Get\u00b7Non\u00b7Optimized\u00b7Samples () \u2693\ufe0e HomingLaser::SampleList GetNonOptimizedSamples ( ) \u2693\ufe0e Get\u00b7RenderZ () \u2693\ufe0e int GetRenderZ ( ) \u2693\ufe0e Get\u00b7Samples () \u2693\ufe0e HomingLaser::SampleList GetSamples ( ) \u2693\ufe0e Is\u00b7Circle\u00b7Laser () \u2693\ufe0e boolean IsCircleLaser ( ) \u2693\ufe0e Is\u00b7Sample\u00b7Laser () \u2693\ufe0e boolean IsSampleLaser ( ) \u2693\ufe0e Set\u00b7Active\u00b7Rotation () \u2693\ufe0e void SetActiveRotation ( int Delay, float AngleDegrees, float RotationSpd, boolean TimeoutComplete ) \u2693\ufe0e Set\u00b7Black\u00b7Hp\u00b7Drop\u00b7Chance () \u2693\ufe0e void SetBlackHpDropChance ( float Chance ) \u2693\ufe0e Set\u00b7Homing\u00b7Type () \u2693\ufe0e void SetHomingType ( LaserHomingType Type ) \u2693\ufe0e Set\u00b7Max\u00b7Distance () \u2693\ufe0e void SetMaxDistance ( float Distance ) \u2693\ufe0e Set\u00b7Multidimensional\u00b7Touched () \u2693\ufe0e void SetMultidimensionalTouched ( boolean Value ) \u2693\ufe0e Set\u00b7One\u00b7Hit () \u2693\ufe0e void SetOneHit ( boolean Value ) \u2693\ufe0e Set\u00b7Timeout () \u2693\ufe0e void SetTimeout ( int Value ) \u2693\ufe0e Shoot\u00b7Angle () \u2693\ufe0e static EntityLaser ShootAngle ( int Variant, Vector SourcePos, float AngleDegrees, int Timeout, Vector PosOffset, Entity Source ) \u2693\ufe0e static helper to simplify spawning lasers Variables \u2693\ufe0e Angle \u2693\ufe0e float Angle \u2693\ufe0e Angle\u00b7Degrees \u2693\ufe0e float AngleDegrees \u2693\ufe0e Black\u00b7Hp\u00b7Drop\u00b7Chance \u2693\ufe0e float BlackHpDropChance \u2693\ufe0e For maw of void. Bounce\u00b7Laser \u2693\ufe0e Entity BounceLaser \u2693\ufe0e Curve\u00b7Strength \u2693\ufe0e float CurveStrength \u2693\ufe0e My Reflection. Disable\u00b7Follow\u00b7Parent \u2693\ufe0e boolean DisableFollowParent \u2693\ufe0e Set on children of other lasers, for instance Rubber Cement reflections. Disables m_ParentOffset. End\u00b7Point \u2693\ufe0e Vector EndPoint \u2693\ufe0e Will hold the endpoint so it will not need to be recalculated when accessed from extern. First\u00b7Update \u2693\ufe0e boolean FirstUpdate \u2693\ufe0e Grid\u00b7Hit \u2693\ufe0e boolean GridHit \u2693\ufe0e true if laser can be clipped by grid entities and it was clipped at that frame. Homing\u00b7Laser \u2693\ufe0e HomingLaser HomingLaser \u2693\ufe0e Homing\u00b7Type \u2693\ufe0e LaserHomingType HomingType \u2693\ufe0e Is\u00b7Active\u00b7Rotating \u2693\ufe0e boolean IsActiveRotating \u2693\ufe0e Laser\u00b7Length \u2693\ufe0e float LaserLength \u2693\ufe0e Last\u00b7Angle\u00b7Degrees \u2693\ufe0e float LastAngleDegrees \u2693\ufe0e Max\u00b7Distance \u2693\ufe0e float MaxDistance \u2693\ufe0e Used to trim brimstone for Azazel (0 - off) One\u00b7Hit \u2693\ufe0e boolean OneHit \u2693\ufe0e Laser hits only once. Parent\u00b7Offset \u2693\ufe0e Vector ParentOffset \u2693\ufe0e Radius \u2693\ufe0e float Radius \u2693\ufe0e Rotation\u00b7Degrees \u2693\ufe0e float RotationDegrees \u2693\ufe0e Rotation\u00b7Delay \u2693\ufe0e int RotationDelay \u2693\ufe0e Rotation\u00b7Spd \u2693\ufe0e float RotationSpd \u2693\ufe0e Sample\u00b7Laser \u2693\ufe0e boolean SampleLaser \u2693\ufe0e Shrink \u2693\ufe0e boolean Shrink \u2693\ufe0e Start\u00b7Angle\u00b7Degrees \u2693\ufe0e float StartAngleDegrees \u2693\ufe0e Some lasers have a bit of random variation in rotation so they need to remember their starting point. Tear\u00b7Flags \u2693\ufe0e TearFlags TearFlags \u2693\ufe0e float m_DepthOffset; float GetDepthOffset(void) const { return m_DepthOffset; } void SetDepthOffset(float Value) { m_DepthOffset = Value; } Timeout \u2693\ufe0e int Timeout \u2693\ufe0e","title":"EntityLaser"},{"location":"EntityLaser/#class-entitylaser","text":"","title":"Class \"EntityLaser\""},{"location":"EntityLaser/#inherits-from-class","text":"Entity","title":"Inherits from Class:"},{"location":"EntityLaser/#functions","text":"","title":"Functions"},{"location":"EntityLaser/#calculateendpoint","text":"","title":"Calculate\u00b7End\u00b7Point ()"},{"location":"EntityLaser/#getendpoint","text":"","title":"Get\u00b7End\u00b7Point ()"},{"location":"EntityLaser/#getnonoptimizedsamples","text":"","title":"Get\u00b7Non\u00b7Optimized\u00b7Samples ()"},{"location":"EntityLaser/#getrenderz","text":"","title":"Get\u00b7RenderZ ()"},{"location":"EntityLaser/#getsamples","text":"","title":"Get\u00b7Samples ()"},{"location":"EntityLaser/#iscirclelaser","text":"","title":"Is\u00b7Circle\u00b7Laser ()"},{"location":"EntityLaser/#issamplelaser","text":"","title":"Is\u00b7Sample\u00b7Laser ()"},{"location":"EntityLaser/#setactiverotation","text":"","title":"Set\u00b7Active\u00b7Rotation ()"},{"location":"EntityLaser/#setblackhpdropchance","text":"","title":"Set\u00b7Black\u00b7Hp\u00b7Drop\u00b7Chance ()"},{"location":"EntityLaser/#sethomingtype","text":"","title":"Set\u00b7Homing\u00b7Type ()"},{"location":"EntityLaser/#setmaxdistance","text":"","title":"Set\u00b7Max\u00b7Distance ()"},{"location":"EntityLaser/#setmultidimensionaltouched","text":"","title":"Set\u00b7Multidimensional\u00b7Touched ()"},{"location":"EntityLaser/#setonehit","text":"","title":"Set\u00b7One\u00b7Hit ()"},{"location":"EntityLaser/#settimeout","text":"","title":"Set\u00b7Timeout ()"},{"location":"EntityLaser/#shootangle","text":"","title":"Shoot\u00b7Angle ()"},{"location":"EntityLaser/#variables","text":"","title":"Variables"},{"location":"EntityLaser/#angle","text":"","title":"Angle"},{"location":"EntityLaser/#angledegrees","text":"","title":"Angle\u00b7Degrees"},{"location":"EntityLaser/#blackhpdropchance","text":"","title":"Black\u00b7Hp\u00b7Drop\u00b7Chance"},{"location":"EntityLaser/#bouncelaser","text":"","title":"Bounce\u00b7Laser"},{"location":"EntityLaser/#curvestrength","text":"","title":"Curve\u00b7Strength"},{"location":"EntityLaser/#disablefollowparent","text":"","title":"Disable\u00b7Follow\u00b7Parent"},{"location":"EntityLaser/#endpoint","text":"","title":"End\u00b7Point"},{"location":"EntityLaser/#firstupdate","text":"","title":"First\u00b7Update"},{"location":"EntityLaser/#gridhit","text":"","title":"Grid\u00b7Hit"},{"location":"EntityLaser/#hominglaser","text":"","title":"Homing\u00b7Laser"},{"location":"EntityLaser/#homingtype","text":"","title":"Homing\u00b7Type"},{"location":"EntityLaser/#isactiverotating","text":"","title":"Is\u00b7Active\u00b7Rotating"},{"location":"EntityLaser/#laserlength","text":"","title":"Laser\u00b7Length"},{"location":"EntityLaser/#lastangledegrees","text":"","title":"Last\u00b7Angle\u00b7Degrees"},{"location":"EntityLaser/#maxdistance","text":"","title":"Max\u00b7Distance"},{"location":"EntityLaser/#onehit","text":"","title":"One\u00b7Hit"},{"location":"EntityLaser/#parentoffset","text":"","title":"Parent\u00b7Offset"},{"location":"EntityLaser/#radius","text":"","title":"Radius"},{"location":"EntityLaser/#rotationdegrees","text":"","title":"Rotation\u00b7Degrees"},{"location":"EntityLaser/#rotationdelay","text":"","title":"Rotation\u00b7Delay"},{"location":"EntityLaser/#rotationspd","text":"","title":"Rotation\u00b7Spd"},{"location":"EntityLaser/#samplelaser","text":"","title":"Sample\u00b7Laser"},{"location":"EntityLaser/#shrink","text":"","title":"Shrink"},{"location":"EntityLaser/#startangledegrees","text":"","title":"Start\u00b7Angle\u00b7Degrees"},{"location":"EntityLaser/#tearflags","text":"","title":"Tear\u00b7Flags"},{"location":"EntityLaser/#timeout","text":"","title":"Timeout"},{"location":"EntityNPC/","text":"Class \"EntityNPC\" \u2693\ufe0e Inherits from Class: \u2693\ufe0e Entity Functions \u2693\ufe0e Anim\u00b7Walk\u00b7Frame () \u2693\ufe0e void AnimWalkFrame ( string HorizontalAnim, string VerticalAnim, float SpeedThreshold ) \u2693\ufe0e Calc\u00b7Target\u00b7Position () \u2693\ufe0e Vector CalcTargetPosition ( float DistanceLimit ) \u2693\ufe0e Can\u00b7Be\u00b7Damaged\u00b7From\u00b7Velocity () \u2693\ufe0e boolean CanBeDamagedFromVelocity ( Vector Velocity ) \u2693\ufe0e Can\u00b7Reroll () \u2693\ufe0e boolean CanReroll ( ) \u2693\ufe0e Fire\u00b7Boss\u00b7Projectiles () \u2693\ufe0e EntityProjectile FireBossProjectiles ( int NumProjectiles, Vector TargetPos, float TrajectoryModifier, ProjectileParams Params ) \u2693\ufe0e fire a number of projectiles, optionally targeting the player direction is randomized, or slightly randomized when targeting the player FallingAccelModifier can be used to make projectiles fall faster to the ground returns a pointer to the projectile spawned last (useful e.g. when NumProjectiles=1) Fire\u00b7Projectiles () \u2693\ufe0e void FireProjectiles ( Vector Pos, Vector Velocity, ProjectilesMode Mode, ProjectileParams Params ) \u2693\ufe0e Get\u00b7Alive\u00b7Enemy\u00b7Count () \u2693\ufe0e int GetAliveEnemyCount ( ) \u2693\ufe0e Used to redirect close door enemies to any enemies for friendly npcs. Get\u00b7Boss\u00b7Color\u00b7Idx () \u2693\ufe0e int GetBossColorIdx ( ) \u2693\ufe0e Notes This will return the boss color idx reduced by 1. To get the actual color as set in bosscolors.xml, add +1 to the result. Get\u00b7Champion\u00b7Color\u00b7Idx () \u2693\ufe0e int GetChampionColorIdx ( ) \u2693\ufe0e Notes A list of Champion colors can be found here : ChampionColorIdx Get\u00b7Player\u00b7Target () \u2693\ufe0e Entity GetPlayerTarget ( ) \u2693\ufe0e if there are no modifiers (best friend) this will return the player Is\u00b7Boss () \u2693\ufe0e boolean IsBoss ( ) \u2693\ufe0e Is\u00b7Champion () \u2693\ufe0e boolean IsChampion ( ) \u2693\ufe0e Kill\u00b7Unique () \u2693\ufe0e void KillUnique ( ) \u2693\ufe0e For entities with unique death animation, like Flush! vs poop enemies. Make\u00b7Champion () \u2693\ufe0e void MakeChampion ( int Seed ) \u2693\ufe0e Forces a non champion to become a champion, resets hp to max hp. Notes Hard to use because there are millions of possible seeds to input here.Use Morph() to change the champion Color instead! Make\u00b7Splat () \u2693\ufe0e EntityEffect MakeSplat ( float Size ) \u2693\ufe0e Morph () \u2693\ufe0e boolean Morph ( EntityType , int Variant, int SubType, int ChampionColorIdx ) \u2693\ufe0e Morph the current entity into another one. ChampionColorIdx can be used to turn the entity into a champion. Use - 1 to turn it into a regular entity. A list of Champion colors can be found here : ChampionColorIdx Example Code This code turns an entity into a gaper. 1 entity : ToNPC (): Morph ( EntityType . ENTITY_GAPER , 0 , 0 , - 1 ) Play\u00b7Sound () \u2693\ufe0e void PlaySound ( SoundEffect ID, float Volume, int FrameDelay, boolean Loop, float Pitch ) \u2693\ufe0e Query\u00b7NPCs\u00b7Group () \u2693\ufe0e EntityList QueryNPCsGroup ( int GroupIdx ) \u2693\ufe0e Query\u00b7NPCs\u00b7Spawner\u00b7Type () \u2693\ufe0e EntityList QueryNPCsSpawnerType ( EntityType SpawnerType, EntityType Type, boolean OnlyEnemies ) \u2693\ufe0e Query\u00b7NPCs\u00b7Type () \u2693\ufe0e EntityList QueryNPCsType ( EntityType Type, int Variant ) \u2693\ufe0e Reset\u00b7Path\u00b7Finder\u00b7Target () \u2693\ufe0e void ResetPathFinderTarget ( ) \u2693\ufe0e Throw\u00b7Spider () \u2693\ufe0e static ThrowSpider ( Vector Position, Entity Spawner, Vector TargetPos, boolean Big, float YOffset ) \u2693\ufe0e Variables \u2693\ufe0e Can\u00b7Shut\u00b7Doors \u2693\ufe0e boolean CanShutDoors \u2693\ufe0e Child\u00b7NPC \u2693\ufe0e EntityNPC ChildNPC \u2693\ufe0e Entity\u00b7Ref \u2693\ufe0e Entity EntityRef \u2693\ufe0e Group\u00b7Idx \u2693\ufe0e int GroupIdx \u2693\ufe0e Used to identify multichunks groups. I1 \u2693\ufe0e int I1 \u2693\ufe0e general usage ints for ai_ I2 \u2693\ufe0e int I2 \u2693\ufe0e same as m_I1 Parent\u00b7NPC \u2693\ufe0e EntityNPC ParentNPC \u2693\ufe0e parent entity, for multi-entity NPCs like Larry Jr. Pathfinder \u2693\ufe0e PathFinder Pathfinder \u2693\ufe0e Projectile\u00b7Cooldown \u2693\ufe0e int ProjectileCooldown \u2693\ufe0e projectiles can fire again when it reaches 0 Projectile\u00b7Delay \u2693\ufe0e int ProjectileDelay \u2693\ufe0e >0: projectile will be fired in n frames Scale \u2693\ufe0e float Scale \u2693\ufe0e State \u2693\ufe0e int State \u2693\ufe0e State\u00b7Frame \u2693\ufe0e int StateFrame \u2693\ufe0e V1 \u2693\ufe0e Vector V1 \u2693\ufe0e general usage for ai_* functions, initialized to (0,0) V2 \u2693\ufe0e Vector V2 \u2693\ufe0e like m_V1, in case we need two of those","title":"EntityNPC"},{"location":"EntityNPC/#class-entitynpc","text":"","title":"Class \"EntityNPC\""},{"location":"EntityNPC/#inherits-from-class","text":"Entity","title":"Inherits from Class:"},{"location":"EntityNPC/#functions","text":"","title":"Functions"},{"location":"EntityNPC/#animwalkframe","text":"","title":"Anim\u00b7Walk\u00b7Frame ()"},{"location":"EntityNPC/#calctargetposition","text":"","title":"Calc\u00b7Target\u00b7Position ()"},{"location":"EntityNPC/#canbedamagedfromvelocity","text":"","title":"Can\u00b7Be\u00b7Damaged\u00b7From\u00b7Velocity ()"},{"location":"EntityNPC/#canreroll","text":"","title":"Can\u00b7Reroll ()"},{"location":"EntityNPC/#firebossprojectiles","text":"","title":"Fire\u00b7Boss\u00b7Projectiles ()"},{"location":"EntityNPC/#fireprojectiles","text":"","title":"Fire\u00b7Projectiles ()"},{"location":"EntityNPC/#getaliveenemycount","text":"","title":"Get\u00b7Alive\u00b7Enemy\u00b7Count ()"},{"location":"EntityNPC/#getbosscoloridx","text":"","title":"Get\u00b7Boss\u00b7Color\u00b7Idx ()"},{"location":"EntityNPC/#getchampioncoloridx","text":"","title":"Get\u00b7Champion\u00b7Color\u00b7Idx ()"},{"location":"EntityNPC/#getplayertarget","text":"","title":"Get\u00b7Player\u00b7Target ()"},{"location":"EntityNPC/#isboss","text":"","title":"Is\u00b7Boss ()"},{"location":"EntityNPC/#ischampion","text":"","title":"Is\u00b7Champion ()"},{"location":"EntityNPC/#killunique","text":"","title":"Kill\u00b7Unique ()"},{"location":"EntityNPC/#makechampion","text":"","title":"Make\u00b7Champion ()"},{"location":"EntityNPC/#makesplat","text":"","title":"Make\u00b7Splat ()"},{"location":"EntityNPC/#morph","text":"","title":"Morph ()"},{"location":"EntityNPC/#playsound","text":"","title":"Play\u00b7Sound ()"},{"location":"EntityNPC/#querynpcsgroup","text":"","title":"Query\u00b7NPCs\u00b7Group ()"},{"location":"EntityNPC/#querynpcsspawnertype","text":"","title":"Query\u00b7NPCs\u00b7Spawner\u00b7Type ()"},{"location":"EntityNPC/#querynpcstype","text":"","title":"Query\u00b7NPCs\u00b7Type ()"},{"location":"EntityNPC/#resetpathfindertarget","text":"","title":"Reset\u00b7Path\u00b7Finder\u00b7Target ()"},{"location":"EntityNPC/#throwspider","text":"","title":"Throw\u00b7Spider ()"},{"location":"EntityNPC/#variables","text":"","title":"Variables"},{"location":"EntityNPC/#canshutdoors","text":"","title":"Can\u00b7Shut\u00b7Doors"},{"location":"EntityNPC/#childnpc","text":"","title":"Child\u00b7NPC"},{"location":"EntityNPC/#entityref","text":"","title":"Entity\u00b7Ref"},{"location":"EntityNPC/#groupidx","text":"","title":"Group\u00b7Idx"},{"location":"EntityNPC/#i1","text":"","title":"I1"},{"location":"EntityNPC/#i2","text":"","title":"I2"},{"location":"EntityNPC/#parentnpc","text":"","title":"Parent\u00b7NPC"},{"location":"EntityNPC/#pathfinder","text":"","title":"Pathfinder"},{"location":"EntityNPC/#projectilecooldown","text":"","title":"Projectile\u00b7Cooldown"},{"location":"EntityNPC/#projectiledelay","text":"","title":"Projectile\u00b7Delay"},{"location":"EntityNPC/#scale","text":"","title":"Scale"},{"location":"EntityNPC/#state","text":"","title":"State"},{"location":"EntityNPC/#stateframe","text":"","title":"State\u00b7Frame"},{"location":"EntityNPC/#v1","text":"","title":"V1"},{"location":"EntityNPC/#v2","text":"","title":"V2"},{"location":"EntityPickup/","text":"Class \"EntityPickup\" \u2693\ufe0e Inherits from Class: \u2693\ufe0e Entity Functions \u2693\ufe0e Appear\u00b7Fast () \u2693\ufe0e void AppearFast ( ) \u2693\ufe0e Can\u00b7Reroll () \u2693\ufe0e boolean CanReroll ( ) \u2693\ufe0e Get\u00b7Coin\u00b7Value () \u2693\ufe0e int GetCoinValue ( ) \u2693\ufe0e If this is a coin, return its face value, else zero. Is\u00b7Shop\u00b7Item () \u2693\ufe0e boolean IsShopItem ( ) \u2693\ufe0e Morph () \u2693\ufe0e void Morph ( EntityType Type, int Variant, int SubType, boolean KeepPrice ) \u2693\ufe0e Play\u00b7Drop\u00b7Sound () \u2693\ufe0e void PlayDropSound ( ) \u2693\ufe0e Play\u00b7Pickup\u00b7Sound () \u2693\ufe0e void PlayPickupSound ( ) \u2693\ufe0e Try\u00b7Open\u00b7Chest () \u2693\ufe0e boolean TryOpenChest ( ) \u2693\ufe0e Variables \u2693\ufe0e Auto\u00b7Update\u00b7Price \u2693\ufe0e boolean AutoUpdatePrice \u2693\ufe0e Charge \u2693\ufe0e int Charge \u2693\ufe0e Price \u2693\ufe0e int Price \u2693\ufe0e Shop\u00b7Item\u00b7Id \u2693\ufe0e int ShopItemId \u2693\ufe0e State \u2693\ufe0e int State \u2693\ufe0e Theres\u00b7Options\u00b7Pickup \u2693\ufe0e boolean TheresOptionsPickup \u2693\ufe0e Timeout \u2693\ufe0e int Timeout \u2693\ufe0e Touched \u2693\ufe0e boolean Touched \u2693\ufe0e Wait \u2693\ufe0e int Wait \u2693\ufe0e","title":"EntityPickup"},{"location":"EntityPickup/#class-entitypickup","text":"","title":"Class \"EntityPickup\""},{"location":"EntityPickup/#inherits-from-class","text":"Entity","title":"Inherits from Class:"},{"location":"EntityPickup/#functions","text":"","title":"Functions"},{"location":"EntityPickup/#appearfast","text":"","title":"Appear\u00b7Fast ()"},{"location":"EntityPickup/#canreroll","text":"","title":"Can\u00b7Reroll ()"},{"location":"EntityPickup/#getcoinvalue","text":"","title":"Get\u00b7Coin\u00b7Value ()"},{"location":"EntityPickup/#isshopitem","text":"","title":"Is\u00b7Shop\u00b7Item ()"},{"location":"EntityPickup/#morph","text":"","title":"Morph ()"},{"location":"EntityPickup/#playdropsound","text":"","title":"Play\u00b7Drop\u00b7Sound ()"},{"location":"EntityPickup/#playpickupsound","text":"","title":"Play\u00b7Pickup\u00b7Sound ()"},{"location":"EntityPickup/#tryopenchest","text":"","title":"Try\u00b7Open\u00b7Chest ()"},{"location":"EntityPickup/#variables","text":"","title":"Variables"},{"location":"EntityPickup/#autoupdateprice","text":"","title":"Auto\u00b7Update\u00b7Price"},{"location":"EntityPickup/#charge","text":"","title":"Charge"},{"location":"EntityPickup/#price","text":"","title":"Price"},{"location":"EntityPickup/#shopitemid","text":"","title":"Shop\u00b7Item\u00b7Id"},{"location":"EntityPickup/#state","text":"","title":"State"},{"location":"EntityPickup/#theresoptionspickup","text":"","title":"Theres\u00b7Options\u00b7Pickup"},{"location":"EntityPickup/#timeout","text":"","title":"Timeout"},{"location":"EntityPickup/#touched","text":"","title":"Touched"},{"location":"EntityPickup/#wait","text":"","title":"Wait"},{"location":"EntityPlayer/","text":"Class \"EntityPlayer\" \u2693\ufe0e Inherits from Class: \u2693\ufe0e Entity Functions \u2693\ufe0e Add\u00b7Black\u00b7Hearts () \u2693\ufe0e void AddBlackHearts ( int BlackHearts ) \u2693\ufe0e Adds Black hearts to the player. 1 unit is half a heart. Remove them with negative numbers. Example Code This code adds 1 full black heart to the player. 1 Isaac . GetPlayer ( 0 ): AddBlackHearts ( 2 ) Add\u00b7Blue\u00b7Flies () \u2693\ufe0e Entity AddBlueFlies ( int Amount, Vector Position, Entity Target ) \u2693\ufe0e Add\u00b7Blue\u00b7Spider () \u2693\ufe0e Entity AddBlueSpider ( Vector Position ) \u2693\ufe0e Add\u00b7Bombs () \u2693\ufe0e void AddBombs ( int Amount ) \u2693\ufe0e Adds bombs to the player. Remove them with negative numbers. Example Code This code removes 1 bomb from the player. 1 Isaac . GetPlayer ( 0 ): AddBombs ( - 1 ) Add\u00b7Bone\u00b7Hearts () \u2693\ufe0e void AddBoneHearts ( int Hearts ) \u2693\ufe0e Adds bone hearts to the player. 1 unit is a single bone heart. Remove them with negative numbers. Example Code This code adds 1 bone heart to the player. 1 Isaac . GetPlayer ( 0 ): AddBoneHearts ( 1 ) Add\u00b7Cache\u00b7Flags () \u2693\ufe0e void AddCacheFlags ( CacheFlag CacheFlag ) \u2693\ufe0e Will reevaluate the cache flags provided in the next cache reevaluation. Example Code This code will add several cacheflags. 1 Isaac . GetPlayer ( 0 ): AddCacheFlags ( CacheFlag . CACHE_DAMAGE | CacheFlag . CACHE_FIREDELAY | CacheFlag . CACHE_LUCK ) Add\u00b7Card () \u2693\ufe0e void AddCard ( Card ID ) \u2693\ufe0e Add\u00b7Coins () \u2693\ufe0e void AddCoins ( int Amount ) \u2693\ufe0e Adds coins to the player. Remove them with negative numbers. Example Code This code adds 1 coin to the player. 1 Isaac . GetPlayer ( 0 ): AddCoins ( 1 ) Add\u00b7Collectible () \u2693\ufe0e void AddCollectible ( CollectibleType Type, int Charge, boolean AddConsumables ) \u2693\ufe0e Add\u00b7Controls\u00b7Cooldown () \u2693\ufe0e void AddControlsCooldown ( int Cooldown ) \u2693\ufe0e Add\u00b7Costume () \u2693\ufe0e void AddCostume ( Config::Item Item, boolean ItemStateOnly ) \u2693\ufe0e Add\u00b7Dead\u00b7Eye\u00b7Charge () \u2693\ufe0e void AddDeadEyeCharge ( ) \u2693\ufe0e Add\u00b7Dollar\u00b7Bill\u00b7Effect () \u2693\ufe0e void AddDollarBillEffect ( ) \u2693\ufe0e Add\u00b7Eternal\u00b7Hearts () \u2693\ufe0e void AddEternalHearts ( int EternalHearts ) \u2693\ufe0e Adds eternal hearts to the player. 1 unit is half a heart. Remove them with negative numbers. (Note that eternal hearts automatically turn to full hearts, when you have more than one.) Example Code This code adds 1 eternal heart to the player. 1 Isaac . GetPlayer ( 0 ): AddEternalHearts ( 1 ) Add\u00b7Golden\u00b7Bomb () \u2693\ufe0e void AddGoldenBomb ( ) \u2693\ufe0e Add\u00b7Golden\u00b7Hearts () \u2693\ufe0e void AddGoldenHearts ( int Hearts ) \u2693\ufe0e Adds golden hearts to the player. 1 unit is a single gold heart. Remove them with negative numbers. Example Code This code adds 1 golden heart to the player. 1 Isaac . GetPlayer ( 0 ): AddGoldenHearts ( 1 ) Add\u00b7Golden\u00b7Key () \u2693\ufe0e void AddGoldenKey ( ) \u2693\ufe0e Add\u00b7Hearts () \u2693\ufe0e void AddHearts ( int Hearts ) \u2693\ufe0e Adds red hearts to the player if there are any empty heart containers. 1 unit is half a heart. Remove health with negative numbers. Example Code This code adds 1 full red heart to the player. 1 Isaac . GetPlayer ( 0 ): AddHearts ( 2 ) Add\u00b7Jar\u00b7Flies () \u2693\ufe0e void AddJarFlies ( int Flies ) \u2693\ufe0e Add\u00b7Jar\u00b7Hearts () \u2693\ufe0e void AddJarHearts ( int Hearts ) \u2693\ufe0e Add\u00b7Keys () \u2693\ufe0e void AddKeys ( int Amount ) \u2693\ufe0e Adds keys to the player. Remove them with negative numbers. Example Code This code adds 1 key to the player. 1 Isaac . GetPlayer ( 0 ): AddKeys ( 1 ) Add\u00b7Max\u00b7Hearts () \u2693\ufe0e void AddMaxHearts ( int MaxHearts, boolean IgnoreKeeper ) \u2693\ufe0e Adds heart containers to the player. 2 units is a full heart container. Remove them with negative numbers. Notes It is possible to add a half heart container to the player. This will appear as a regular heart container but can only be filled half-way. Example Code This code adds 1 heart container to the player. 1 Isaac . GetPlayer ( 0 ): AddMaxHearts ( 2 , true ) Bugs IgnoreKeeper does not appear to work as intended. Max hearts can be added or removed from Keeper regardless of what this boolean is. If Keeper has Greed's Gullet and this boolean is set to false, max hearts cannot be added to Keeper, but can be removed normally. If Keeper has Greed's Gullet and this boolean is set to true, Max hearts can be added or removed from Keeper normally. Add\u00b7Null\u00b7Costume () \u2693\ufe0e void AddNullCostume ( Config::NullItemID NullId ) \u2693\ufe0e for Lua Add\u00b7Pill () \u2693\ufe0e void AddPill ( PillColor Pill ) \u2693\ufe0e Add\u00b7Player\u00b7Form\u00b7Costume () \u2693\ufe0e void AddPlayerFormCostume ( PlayerForm Form ) \u2693\ufe0e Add\u00b7Pretty\u00b7Fly () \u2693\ufe0e void AddPrettyFly ( ) \u2693\ufe0e Add\u00b7Soul\u00b7Hearts () \u2693\ufe0e void AddSoulHearts ( int SoulHearts ) \u2693\ufe0e Adds soul hearts to the player. 1 unit is half a heart. Remove them with negative numbers. Example Code This code adds 1 full soul heart to the player. 1 Isaac . GetPlayer ( 0 ): AddSoulHearts ( 2 ) Add\u00b7Trinket () \u2693\ufe0e void AddTrinket ( TrinketType Type ) \u2693\ufe0e Animate\u00b7Appear () \u2693\ufe0e void AnimateAppear ( ) \u2693\ufe0e Play the animation that is normally played at the beginning of a stage. Animate\u00b7Card () \u2693\ufe0e void AnimateCard ( Card ID, string AnimName ) \u2693\ufe0e Animate\u00b7Collectible () \u2693\ufe0e void AnimateCollectible ( CollectibleType Collectible, string AnimName, string SpriteAnimName ) \u2693\ufe0e Animate\u00b7Happy () \u2693\ufe0e void AnimateHappy ( ) \u2693\ufe0e thumbs up Animate\u00b7Light\u00b7Travel () \u2693\ufe0e void AnimateLightTravel ( ) \u2693\ufe0e end of a stage Animate\u00b7Pill () \u2693\ufe0e void AnimatePill ( PillColor Pill, string AnimName ) \u2693\ufe0e Animate\u00b7Pitfall\u00b7In () \u2693\ufe0e void AnimatePitfallIn ( ) \u2693\ufe0e Fall into pitfall. Animate\u00b7Pitfall\u00b7Out () \u2693\ufe0e void AnimatePitfallOut ( ) \u2693\ufe0e Jump out of pitfall. Animate\u00b7Sad () \u2693\ufe0e void AnimateSad ( ) \u2693\ufe0e oh no! Animate\u00b7Teleport () \u2693\ufe0e void AnimateTeleport ( boolean Up ) \u2693\ufe0e teleport to another room Animate\u00b7Trapdoor () \u2693\ufe0e void AnimateTrapdoor ( ) \u2693\ufe0e end of a stage Animate\u00b7Trinket () \u2693\ufe0e void AnimateTrinket ( TrinketType Trinket, string AnimName, string SpriteAnimName ) \u2693\ufe0e Are\u00b7Controls\u00b7Enabled () \u2693\ufe0e boolean AreControlsEnabled ( ) \u2693\ufe0e Are\u00b7Opposing\u00b7Shoot\u00b7Directions\u00b7Pressed () \u2693\ufe0e boolean AreOpposingShootDirectionsPressed ( ) \u2693\ufe0e Returns the non-zero joystick direction from the most recent movement input, but goes to zero after the player comes to a stop. Can\u00b7Add\u00b7Collectible () \u2693\ufe0e boolean CanAddCollectible ( ) \u2693\ufe0e Can\u00b7Pick\u00b7Black\u00b7Hearts () \u2693\ufe0e boolean CanPickBlackHearts ( ) \u2693\ufe0e returns true if player has room for more black hearts Can\u00b7Pick\u00b7Bone\u00b7Hearts () \u2693\ufe0e boolean CanPickBoneHearts ( ) \u2693\ufe0e returns true if player has room for more bone hearts Can\u00b7Pick\u00b7Golden\u00b7Hearts () \u2693\ufe0e boolean CanPickGoldenHearts ( ) \u2693\ufe0e returns true if player has room for more golden hearts Can\u00b7Pick\u00b7Red\u00b7Hearts () \u2693\ufe0e boolean CanPickRedHearts ( ) \u2693\ufe0e Can\u00b7Pick\u00b7Soul\u00b7Hearts () \u2693\ufe0e boolean CanPickSoulHearts ( ) \u2693\ufe0e returns true if player has room for more soul hearts Can\u00b7Pickup\u00b7Item () \u2693\ufe0e boolean CanPickupItem ( ) \u2693\ufe0e Can Player pick up an item right now? Can\u00b7Shoot () \u2693\ufe0e boolean CanShoot ( ) \u2693\ufe0e Can\u00b7Turn\u00b7Head () \u2693\ufe0e boolean CanTurnHead ( ) \u2693\ufe0e returns true if head should react to keys or false otherwise Check\u00b7Familiar () \u2693\ufe0e void CheckFamiliar ( int FamiliarVariant, int TargetCount, RNG rng ) \u2693\ufe0e Clear\u00b7Costumes () \u2693\ufe0e void ClearCostumes ( ) \u2693\ufe0e Clear\u00b7Dead\u00b7Eye\u00b7Charge () \u2693\ufe0e void ClearDeadEyeCharge ( ) \u2693\ufe0e Clear\u00b7Temporary\u00b7Effects () \u2693\ufe0e void ClearTemporaryEffects ( ) \u2693\ufe0e Will be called when player exits the room. Discharge\u00b7Active\u00b7Item () \u2693\ufe0e void DischargeActiveItem ( ) \u2693\ufe0e Sets the charge of your active item to 0 without triggering the active item effect. Donate\u00b7Luck () \u2693\ufe0e void DonateLuck ( int Luck ) \u2693\ufe0e Do\u00b7Zit\u00b7Effect () \u2693\ufe0e void DoZitEffect ( Vector Direction ) \u2693\ufe0e Drop\u00b7Poket\u00b7Item () \u2693\ufe0e void DropPoketItem ( int PocketNum, Vector Pos ) \u2693\ufe0e Drops a held pocketitem (Card, Pill, Rune...) from the given itemslot at the given position. Possible pocketnumbers are [0, 1] Bugs This function is spelled wrong. Removing the pocketitem in slot 0, while having a second item in slot 1 will not update the UI correctly. The second item will still be in the second slot, which will in turn prevent the player from using this card right away. The player needs to switch between cards to fix this. Drop\u00b7Trinket () \u2693\ufe0e void DropTrinket ( Vector DropPos, boolean ReplaceTick ) \u2693\ufe0e Evaluate\u00b7Items () \u2693\ufe0e void EvaluateItems ( ) \u2693\ufe0e Triggers a cache reevaluation. Will trigger the MC_EVALUATE_CACHE callback. Fire\u00b7Bomb () \u2693\ufe0e EntityBomb FireBomb ( Vector Position, Vector Velocity ) \u2693\ufe0e Fire\u00b7Brimstone () \u2693\ufe0e EntityLaser FireBrimstone ( Vector Direction ) \u2693\ufe0e Fire\u00b7Delayed\u00b7Brimstone () \u2693\ufe0e EntityLaser FireDelayedBrimstone ( float Angle, Entity Parent ) \u2693\ufe0e Fire\u00b7Knife () \u2693\ufe0e EntityKnife FireKnife ( Entity Parent, float RotationOffset, boolean CantOverwrite, int SubType ) \u2693\ufe0e Fire\u00b7Tear () \u2693\ufe0e EntityTear FireTear ( Vector Position, Vector Velocity, boolean CanBeEye, boolean NoTractorBeam, boolean CanTriggerStreakEnd ) \u2693\ufe0e This replaces the protected fire_tear() to allow other entities (Such as bombs) to easily shoot tears in the same manner and with all the effects the player does. (Ex. Sad Bombs) Fire\u00b7Tech\u00b7Laser () \u2693\ufe0e EntityLaser FireTechLaser ( Vector Position, LaserOffset OffsetID, Vector Direction, boolean LeftEye, boolean OneHit ) \u2693\ufe0e Fire\u00b7Tech\u00b7XLaser () \u2693\ufe0e EntityLaser FireTechXLaser ( Vector Position, Vector Direction, float Radius ) \u2693\ufe0e Flush\u00b7Queue\u00b7Item () \u2693\ufe0e boolean FlushQueueItem ( ) \u2693\ufe0e called after animation is finished, or on special occasions to prevent bugs Full\u00b7Charge () \u2693\ufe0e boolean FullCharge ( ) \u2693\ufe0e Fully charges the active item. Returns true if the item was fully charged, false otherwise. If player has battery it will first try to fill first charge slot, then the battery slot. Get\u00b7Active\u00b7Charge () \u2693\ufe0e int GetActiveCharge ( ) \u2693\ufe0e Get the current charge of your active item. Get\u00b7Active\u00b7Item () \u2693\ufe0e CollectibleType GetActiveItem ( ) \u2693\ufe0e Returns the currently held item. Get\u00b7Active\u00b7Sub\u00b7Charge () \u2693\ufe0e int GetActiveSubCharge ( ) \u2693\ufe0e Get the current items subcharge. (Useful for items that charge up over time.) Get\u00b7Active\u00b7Weapon\u00b7Entity () \u2693\ufe0e Entity GetActiveWeaponEntity ( ) \u2693\ufe0e Get\u00b7Aim\u00b7Direction () \u2693\ufe0e Vector GetAimDirection ( ) \u2693\ufe0e Get\u00b7Baby\u00b7Skin () \u2693\ufe0e BabySubType GetBabySkin ( ) \u2693\ufe0e Get\u00b7Battery\u00b7Charge () \u2693\ufe0e int GetBatteryCharge ( ) \u2693\ufe0e Get the current charge progress of the second charge of your current active item. This bar is only active, when you have the Collectible \"The Battery\" Get\u00b7Black\u00b7Hearts () \u2693\ufe0e int GetBlackHearts ( ) \u2693\ufe0e This does not return the # of black hearts, this returns the bit mask for which soul hearts are black hearts. Get\u00b7Bomb\u00b7Flags () \u2693\ufe0e int GetBombFlags ( ) \u2693\ufe0e Get\u00b7Bomb\u00b7Variant () \u2693\ufe0e EntityBomb::BombVariant GetBombVariant ( int TearFlags, boolean ForceSmallBomb ) \u2693\ufe0e Pass tear flags to add extra effects to the bomb visual like burn -> hot bombs, even if player doesn't have Hot Bombs collectible. ForceSmallBomb will override large bomb variants for TEAR_PERSISTENT. Get\u00b7Bone\u00b7Hearts () \u2693\ufe0e int GetBoneHearts ( ) \u2693\ufe0e Returns the number of bone hearts as an integer value. 1 Boneheart = 1. Example Code This code gets the total amount of red heart containers including bone hearts. The bonehearts need to be mulltiplied by 2, since in GetMaxHearts() 2 equals 1 full heart. 1 2 local player = Isaac . GetPlayer ( 0 ) local totalRedHearts = player : GetMaxHearts () + player : GetBoneHearts () * 2 Get\u00b7Card () \u2693\ufe0e Card GetCard ( int SlotId ) \u2693\ufe0e Gets the ID of the card the player is holding in the given itemslot (0 or 1). Get\u00b7Card\u00b7RNG () \u2693\ufe0e RNG GetCardRNG ( Card ID ) \u2693\ufe0e Get\u00b7Collectible\u00b7Count () \u2693\ufe0e int GetCollectibleCount ( ) \u2693\ufe0e Get\u00b7Collectible\u00b7Num () \u2693\ufe0e int GetCollectibleNum ( CollectibleType Type ) \u2693\ufe0e Get\u00b7Collectible\u00b7RNG () \u2693\ufe0e RNG GetCollectibleRNG ( CollectibleType ID ) \u2693\ufe0e Get\u00b7Costume\u00b7Null\u00b7Pos () \u2693\ufe0e Vector GetCostumeNullPos ( string NullFrameName, boolean HeadScale, Vector Direction ) \u2693\ufe0e Get\u00b7Damage\u00b7Cooldown () \u2693\ufe0e int GetDamageCooldown ( ) \u2693\ufe0e Get\u00b7Effective\u00b7Max\u00b7Hearts () \u2693\ufe0e int GetEffectiveMaxHearts ( ) \u2693\ufe0e Returns the amount of Red Hearts the player can contain in their Heart Containers and Bone Hearts. 1 unit is half a red heart. Example: you have 3 red heart container and one bone heart. 6(red) + 2(bone) = 8 Get\u00b7Effects () \u2693\ufe0e TemporaryEffects GetEffects ( ) \u2693\ufe0e Get\u00b7Eternal\u00b7Hearts () \u2693\ufe0e int GetEternalHearts ( ) \u2693\ufe0e Returns the amount of eternal hearts the player has. Get\u00b7Extra\u00b7Lives () \u2693\ufe0e int GetExtraLives ( ) \u2693\ufe0e Get\u00b7Fire\u00b7Direction () \u2693\ufe0e Direction GetFireDirection ( ) \u2693\ufe0e Get\u00b7Flying\u00b7Offset () \u2693\ufe0e Vector GetFlyingOffset ( ) \u2693\ufe0e Get\u00b7Golden\u00b7Hearts () \u2693\ufe0e int GetGoldenHearts ( ) \u2693\ufe0e Returns the amount of golden hearts the player has. Get\u00b7Greed\u00b7Donation\u00b7Break\u00b7Chance () \u2693\ufe0e float GetGreedDonationBreakChance ( ) \u2693\ufe0e Get\u00b7Head\u00b7Direction () \u2693\ufe0e Direction GetHeadDirection ( ) \u2693\ufe0e Get\u00b7Heart\u00b7Limit () \u2693\ufe0e int GetHeartLimit ( ) \u2693\ufe0e Get\u00b7Hearts () \u2693\ufe0e int GetHearts ( ) \u2693\ufe0e Returns the amount of red hearts the player has inside their heart containers and bone hearts. 1 unit is half a heart. Get\u00b7Item\u00b7State () \u2693\ufe0e CollectibleType GetItemState ( ) \u2693\ufe0e Get\u00b7Jar\u00b7Flies () \u2693\ufe0e int GetJarFlies ( ) \u2693\ufe0e Get\u00b7Jar\u00b7Hearts () \u2693\ufe0e int GetJarHearts ( ) \u2693\ufe0e Get\u00b7Laser\u00b7Offset () \u2693\ufe0e Vector GetLaserOffset ( LaserOffset ID, Vector Direction ) \u2693\ufe0e Get\u00b7Last\u00b7Action\u00b7Triggers () \u2693\ufe0e int GetLastActionTriggers ( ) \u2693\ufe0e Get\u00b7Last\u00b7Damage\u00b7Flags () \u2693\ufe0e int GetLastDamageFlags ( ) \u2693\ufe0e Get\u00b7Last\u00b7Damage\u00b7Source () \u2693\ufe0e EntityRef GetLastDamageSource ( ) \u2693\ufe0e Get\u00b7Last\u00b7Direction () \u2693\ufe0e Vector GetLastDirection ( ) \u2693\ufe0e Get\u00b7Max\u00b7Hearts () \u2693\ufe0e int GetMaxHearts ( ) \u2693\ufe0e Returns the amount of Heart Containers the player has. 1 unit is half a heart container. Get\u00b7Max\u00b7Poket\u00b7Items () \u2693\ufe0e int GetMaxPoketItems ( ) \u2693\ufe0e Get the number of Pickup items you can carry. (1 on default. 2 with belly button or similar) Bugs This function is spelled wrong. Get\u00b7Max\u00b7Trinkets () \u2693\ufe0e int GetMaxTrinkets ( ) \u2693\ufe0e Get the number of trinkets you can carry. (1 on default. 2 with moms purse or similar) Get\u00b7Movement\u00b7Direction () \u2693\ufe0e Direction GetMovementDirection ( ) \u2693\ufe0e Get\u00b7Movement\u00b7Input () \u2693\ufe0e Vector GetMovementInput ( ) \u2693\ufe0e Get\u00b7Movement\u00b7Joystick () \u2693\ufe0e Vector GetMovementJoystick ( ) \u2693\ufe0e Get\u00b7Movement\u00b7Vector () \u2693\ufe0e Vector GetMovementVector ( ) \u2693\ufe0e Get\u00b7Multi\u00b7Shot\u00b7Params () \u2693\ufe0e MultiShotParams GetMultiShotParams ( ) \u2693\ufe0e Get\u00b7Multi\u00b7Shot\u00b7Position\u00b7Velocity () \u2693\ufe0e PosVel GetMultiShotPositionVelocity ( int LoopIndex, WeaponType Weapon, Vector ShotDirection, float ShotSpeed, MultiShotParams params ) \u2693\ufe0e Call this function in a loop with values from 0 to MultiShotParams.NumProjectiles-1 (inclusive) Get\u00b7Name () \u2693\ufe0e string GetName ( ) \u2693\ufe0e Returns the name of the player. (Isaac, Cain, Azazel,...) Get\u00b7NPCTarget () \u2693\ufe0e Entity GetNPCTarget ( ) \u2693\ufe0e normally returns the player itself. Can redirect enemy attacks to a different entity such as Best Friend Get\u00b7Num\u00b7Blue\u00b7Flies () \u2693\ufe0e int GetNumBlueFlies ( ) \u2693\ufe0e Get\u00b7Num\u00b7Blue\u00b7Spiders () \u2693\ufe0e int GetNumBlueSpiders ( ) \u2693\ufe0e Get\u00b7Num\u00b7Bombs () \u2693\ufe0e int GetNumBombs ( ) \u2693\ufe0e Get\u00b7Num\u00b7Coins () \u2693\ufe0e int GetNumCoins ( ) \u2693\ufe0e Get\u00b7Num\u00b7Keys () \u2693\ufe0e int GetNumKeys ( ) \u2693\ufe0e Get\u00b7Pill () \u2693\ufe0e PillColor GetPill ( int SlotId ) \u2693\ufe0e Gets the ID of the pill the player is holding in the given itemslot (0 or 1). Get\u00b7Pill\u00b7RNG () \u2693\ufe0e RNG GetPillRNG ( PillEffect ID ) \u2693\ufe0e Get\u00b7Player\u00b7Type () \u2693\ufe0e PlayerType GetPlayerType ( ) \u2693\ufe0e Get\u00b7Pocket\u00b7Item () \u2693\ufe0e PlayerPocketItem GetPocketItem ( int SlotId ) \u2693\ufe0e Get the userdata of the pocketitem (Card,Pill,rune) in a said slot. Bugs This function returns userdata, which cant be processed. It is therefore broken and should not be used! Get\u00b7Recent\u00b7Movement\u00b7Vector () \u2693\ufe0e Vector GetRecentMovementVector ( ) \u2693\ufe0e Returns the joystick direction that drives player movement, taking into account certain modifiers like disabled controls and seed effects. Get\u00b7Shooting\u00b7Input () \u2693\ufe0e Vector GetShootingInput ( ) \u2693\ufe0e Get\u00b7Shooting\u00b7Joystick () \u2693\ufe0e Vector GetShootingJoystick ( ) \u2693\ufe0e Get\u00b7Smooth\u00b7Body\u00b7Rotation () \u2693\ufe0e float GetSmoothBodyRotation ( ) \u2693\ufe0e Get\u00b7Soul\u00b7Hearts () \u2693\ufe0e int GetSoulHearts ( ) \u2693\ufe0e Returns the amount of Soul Hearts the player has. 1 unit is half a heart. Notes Black Hearts count toward this total, as the game sees them as soul hearts. Get\u00b7Sub\u00b7Player () \u2693\ufe0e EntityPlayer GetSubPlayer ( ) \u2693\ufe0e Get\u00b7Tear\u00b7Hit\u00b7Params () \u2693\ufe0e TearParams GetTearHitParams ( WeaponType WeaponType, float DamageScale, int TearDisplacement ) \u2693\ufe0e Used for tear parameters that are calculated on hit (ex: Tough love, Common cold), DamageScale is used for scale calculation based on damage Get\u00b7Tear\u00b7Movement\u00b7Inheritance () \u2693\ufe0e Vector GetTearMovementInheritance ( Vector ShotDirection ) \u2693\ufe0e Get\u00b7Tear\u00b7Poison\u00b7Damage () \u2693\ufe0e float GetTearPoisonDamage ( ) \u2693\ufe0e Get\u00b7Tear\u00b7Range\u00b7Modifier () \u2693\ufe0e int GetTearRangeModifier ( ) \u2693\ufe0e Get\u00b7Total\u00b7Damage\u00b7Taken () \u2693\ufe0e int GetTotalDamageTaken ( ) \u2693\ufe0e Get\u00b7Tractor\u00b7Beam () \u2693\ufe0e Entity GetTractorBeam ( ) \u2693\ufe0e Get\u00b7Trinket () \u2693\ufe0e TrinketType GetTrinket ( int TrinketIndex ) \u2693\ufe0e Gets the ID of the trinket the player is holding in the given trinketslot (0 or 1). Get\u00b7Trinket\u00b7Multiplier () \u2693\ufe0e int GetTrinketMultiplier ( ) \u2693\ufe0e Get\u00b7Trinket\u00b7RNG () \u2693\ufe0e RNG GetTrinketRNG ( TrinketType ID ) \u2693\ufe0e Get\u00b7Velocity\u00b7Before\u00b7Update () \u2693\ufe0e Vector GetVelocityBeforeUpdate ( ) \u2693\ufe0e Get\u00b7Zodiac\u00b7Effect () \u2693\ufe0e CollectibleType GetZodiacEffect ( ) \u2693\ufe0e Has\u00b7Collectible () \u2693\ufe0e boolean HasCollectible ( CollectibleType Type ) \u2693\ufe0e Has\u00b7Full\u00b7Hearts () \u2693\ufe0e boolean HasFullHearts ( ) \u2693\ufe0e Has\u00b7Full\u00b7Hearts\u00b7And\u00b7Soul\u00b7Hearts () \u2693\ufe0e boolean HasFullHeartsAndSoulHearts ( ) \u2693\ufe0e Has\u00b7Golden\u00b7Bomb () \u2693\ufe0e boolean HasGoldenBomb ( ) \u2693\ufe0e Has\u00b7Golden\u00b7Key () \u2693\ufe0e boolean HasGoldenKey ( ) \u2693\ufe0e Has\u00b7Invincibility () \u2693\ufe0e boolean HasInvincibility ( ) \u2693\ufe0e returns true when player is in an invincibility state Has\u00b7Player\u00b7Form () \u2693\ufe0e boolean HasPlayerForm ( PlayerForm Form ) \u2693\ufe0e Has\u00b7Timed\u00b7Item () \u2693\ufe0e boolean HasTimedItem ( ) \u2693\ufe0e Kept for avoiding modding issues. Has\u00b7Trinket () \u2693\ufe0e boolean HasTrinket ( TrinketType Type ) \u2693\ufe0e Has\u00b7Weapon\u00b7Type () \u2693\ufe0e boolean HasWeaponType ( WeaponType WeaponType ) \u2693\ufe0e Init\u00b7Baby\u00b7Skin () \u2693\ufe0e void InitBabySkin ( ) \u2693\ufe0e Is\u00b7Black\u00b7Heart () \u2693\ufe0e boolean IsBlackHeart ( int Heart ) \u2693\ufe0e Is\u00b7Bone\u00b7Heart () \u2693\ufe0e boolean IsBoneHeart ( int heart ) \u2693\ufe0e Is\u00b7Extra\u00b7Animation\u00b7Finished () \u2693\ufe0e boolean IsExtraAnimationFinished ( ) \u2693\ufe0e Is\u00b7Full\u00b7Sprite\u00b7Rendering () \u2693\ufe0e boolean IsFullSpriteRendering ( ) \u2693\ufe0e Is\u00b7Held\u00b7Item\u00b7Visible () \u2693\ufe0e boolean IsHeldItemVisible ( ) \u2693\ufe0e Is\u00b7Holding\u00b7Item () \u2693\ufe0e boolean IsHoldingItem ( ) \u2693\ufe0e Is Player holding up an item (card/collectible/etc) Is\u00b7Item\u00b7Queue\u00b7Empty () \u2693\ufe0e boolean IsItemQueueEmpty ( ) \u2693\ufe0e Is\u00b7P2Appearing () \u2693\ufe0e boolean IsP2Appearing ( ) \u2693\ufe0e Is\u00b7Pos\u00b7In\u00b7Spot\u00b7Light () \u2693\ufe0e boolean IsPosInSpotLight ( Vector Position ) \u2693\ufe0e Is\u00b7Sub\u00b7Player () \u2693\ufe0e boolean IsSubPlayer ( ) \u2693\ufe0e This is for players that require multiple player entities, such as the Forgotten (this has nothing to do with co-players!) Needs\u00b7Charge () \u2693\ufe0e boolean NeedsCharge ( ) \u2693\ufe0e Play\u00b7Extra\u00b7Animation () \u2693\ufe0e void PlayExtraAnimation ( string Animation ) \u2693\ufe0e Queue\u00b7Extra\u00b7Animation () \u2693\ufe0e void QueueExtraAnimation ( string Animation ) \u2693\ufe0e Queue\u00b7Item () \u2693\ufe0e void QueueItem ( Config::Item Item, int Charge, boolean Touched ) \u2693\ufe0e Add Collectible/Trinket after animation is finished. Remove\u00b7Black\u00b7Heart () \u2693\ufe0e void RemoveBlackHeart ( int BlackHeart ) \u2693\ufe0e Remove\u00b7Blue\u00b7Fly () \u2693\ufe0e void RemoveBlueFly ( ) \u2693\ufe0e Remove\u00b7Blue\u00b7Spider () \u2693\ufe0e void RemoveBlueSpider ( ) \u2693\ufe0e Remove\u00b7Collectible () \u2693\ufe0e void RemoveCollectible ( CollectibleType Type ) \u2693\ufe0e Remove\u00b7Costume () \u2693\ufe0e void RemoveCostume ( Config::Item Item ) \u2693\ufe0e Remove\u00b7Golden\u00b7Bomb () \u2693\ufe0e void RemoveGoldenBomb ( ) \u2693\ufe0e Remove\u00b7Golden\u00b7Key () \u2693\ufe0e void RemoveGoldenKey ( ) \u2693\ufe0e Remove\u00b7Skin\u00b7Costume () \u2693\ufe0e void RemoveSkinCostume ( ) \u2693\ufe0e Render\u00b7Body () \u2693\ufe0e void RenderBody ( Vector position ) \u2693\ufe0e Render\u00b7Glow () \u2693\ufe0e void RenderGlow ( Vector position ) \u2693\ufe0e Render\u00b7Head () \u2693\ufe0e void RenderHead ( Vector position ) \u2693\ufe0e Render\u00b7Top () \u2693\ufe0e void RenderTop ( Vector position ) \u2693\ufe0e Replace\u00b7Costume\u00b7Sprite () \u2693\ufe0e void ReplaceCostumeSprite ( Config::Item Item, string SpritePath, int SpriteId ) \u2693\ufe0e Reset\u00b7Damage\u00b7Cooldown () \u2693\ufe0e void ResetDamageCooldown ( ) \u2693\ufe0e Reset\u00b7Item\u00b7State () \u2693\ufe0e void ResetItemState ( ) \u2693\ufe0e Room transitions call this to prevent lock ups. Respawn\u00b7Familiars () \u2693\ufe0e void RespawnFamiliars ( ) \u2693\ufe0e Revive () \u2693\ufe0e void Revive ( ) \u2693\ufe0e revive player Set\u00b7Active\u00b7Charge () \u2693\ufe0e void SetActiveCharge ( int Charge ) \u2693\ufe0e Set\u00b7Card () \u2693\ufe0e void SetCard ( int SlotId, Card ID ) \u2693\ufe0e Change the card/rune the player is holding in the given itemslot (0 or 1). Set\u00b7Full\u00b7Hearts () \u2693\ufe0e void SetFullHearts ( ) \u2693\ufe0e Set\u00b7Min\u00b7Damage\u00b7Cooldown () \u2693\ufe0e void SetMinDamageCooldown ( int DamageCooldown ) \u2693\ufe0e Set\u00b7Pill () \u2693\ufe0e void SetPill ( int SlotId, PillColor Pill ) \u2693\ufe0e Change the pill the player is holding in the given itemslot (0 or 1). Set\u00b7Shooting\u00b7Cooldown () \u2693\ufe0e void SetShootingCooldown ( int Cooldown ) \u2693\ufe0e Set\u00b7Target\u00b7Trap\u00b7Door () \u2693\ufe0e void SetTargetTrapDoor ( GridEntity TrapDoor ) \u2693\ufe0e Shoot\u00b7Red\u00b7Candle () \u2693\ufe0e void ShootRedCandle ( Vector Direction ) \u2693\ufe0e for ghost pepper item + poop and farts Spawn\u00b7Maw\u00b7Of\u00b7Void () \u2693\ufe0e EntityLaser SpawnMawOfVoid ( int Timeout ) \u2693\ufe0e Stop\u00b7Extra\u00b7Animation () \u2693\ufe0e void StopExtraAnimation ( ) \u2693\ufe0e Swap\u00b7Active\u00b7Items () \u2693\ufe0e void SwapActiveItems ( ) \u2693\ufe0e Throw\u00b7Blue\u00b7Spider () \u2693\ufe0e Entity ThrowBlueSpider ( Vector Position, Vector Target ) \u2693\ufe0e Try\u00b7Hold\u00b7Trinket () \u2693\ufe0e boolean TryHoldTrinket ( TrinketType Type ) \u2693\ufe0e Returns true if an active item pickup cooldown is over. returns true if trinket can be added, else false Try\u00b7Remove\u00b7Collectible\u00b7Costume () \u2693\ufe0e void TryRemoveCollectibleCostume ( CollectibleType Collectible, boolean KeepPersistent ) \u2693\ufe0e tries to remove a costume based on some filters Try\u00b7Remove\u00b7Null\u00b7Costume () \u2693\ufe0e void TryRemoveNullCostume ( Config::NullItemID NullId ) \u2693\ufe0e Try\u00b7Remove\u00b7Trinket () \u2693\ufe0e boolean TryRemoveTrinket ( TrinketType Type ) \u2693\ufe0e Try\u00b7Remove\u00b7Trinket\u00b7Costume () \u2693\ufe0e void TryRemoveTrinketCostume ( TrinketType Trinket ) \u2693\ufe0e tries to remove a costume based on some filters Try\u00b7Use\u00b7Key () \u2693\ufe0e boolean TryUseKey ( ) \u2693\ufe0e Update\u00b7Can\u00b7Shoot () \u2693\ufe0e void UpdateCanShoot ( ) \u2693\ufe0e Use\u00b7Active\u00b7Item () \u2693\ufe0e void UseActiveItem ( CollectibleType Item, boolean ShowAnim, boolean KeepActiveItem, boolean AllowNonMainPlayer, boolean ToAddCostume ) \u2693\ufe0e Use\u00b7Card () \u2693\ufe0e void UseCard ( Card ID ) \u2693\ufe0e Use\u00b7Pill () \u2693\ufe0e void UsePill ( PillEffect ID, PillColor PillColor ) \u2693\ufe0e Will\u00b7Player\u00b7Revive () \u2693\ufe0e boolean WillPlayerRevive ( ) \u2693\ufe0e Variables \u2693\ufe0e Baby\u00b7Skin \u2693\ufe0e BabySubType BabySkin \u2693\ufe0e P2 Skin section Used to hold the selected skin (in case of glitched baby it will pick a random one) Can\u00b7Fly \u2693\ufe0e boolean CanFly \u2693\ufe0e Player stat - Only change this in a callback to MC_EVALUATE_CACHE. Can the player fly over rocks and pits? Controller\u00b7Index \u2693\ufe0e int ControllerIndex \u2693\ufe0e s32 GetItemStateCooldown( void ) const { return m_ItemStateCooldown; } Controls\u00b7Cooldown \u2693\ufe0e int ControlsCooldown \u2693\ufe0e Controls\u00b7Enabled \u2693\ufe0e boolean ControlsEnabled \u2693\ufe0e Damage \u2693\ufe0e float Damage \u2693\ufe0e Player stat - Only change this in a callback to MC_EVALUATE_CACHE. This is equal to the Damage Stat. How much damage do the players tears or other main weapons do? Fire\u00b7Delay \u2693\ufe0e int FireDelay \u2693\ufe0e How long until the player can spawn their next tear? Friend\u00b7Ball\u00b7Enemy \u2693\ufe0e EntityDesc FriendBallEnemy \u2693\ufe0e Head\u00b7Frame\u00b7Delay \u2693\ufe0e int HeadFrameDelay \u2693\ufe0e Item\u00b7Hold\u00b7Cooldown \u2693\ufe0e int ItemHoldCooldown \u2693\ufe0e Used for avoiding player get stucked between rocks when switching a flying item with other active item. Laser\u00b7Color \u2693\ufe0e Color LaserColor \u2693\ufe0e Luck \u2693\ufe0e float Luck \u2693\ufe0e Player stat - Only change this in a callback to MC_EVALUATE_CACHE. This is equal to the Luck Stat. Better luck generally means better random events. Max\u00b7Fire\u00b7Delay \u2693\ufe0e int MaxFireDelay \u2693\ufe0e Player stat - Only change this in a callback to MC_EVALUATE_CACHE. This is equal to the Tears Stat. How long between each tear can spawn? Move\u00b7Speed \u2693\ufe0e float MoveSpeed \u2693\ufe0e Player stat - Only change this in a callback to MC_EVALUATE_CACHE. This is equal to the Speed Stat. How fast can the player move? Queued\u00b7Item \u2693\ufe0e QueueItemData QueuedItem \u2693\ufe0e item queue for when the player is picking up an item. the item is in effect as soon as the animation is finished and will be removed from the queue. Secondary\u00b7Active\u00b7Item \u2693\ufe0e ActiveItemDesc SecondaryActiveItem \u2693\ufe0e Shot\u00b7Speed \u2693\ufe0e float ShotSpeed \u2693\ufe0e Player stat - Only change this in a callback to MC_EVALUATE_CACHE. This is equal to the ShotSpeed Stat. How fast does the tear travel when spawned? Sprite\u00b7Scale \u2693\ufe0e Vector SpriteScale \u2693\ufe0e Tear\u00b7Color \u2693\ufe0e Color TearColor \u2693\ufe0e Tear\u00b7Falling\u00b7Acceleration \u2693\ufe0e float TearFallingAcceleration \u2693\ufe0e Tear\u00b7Falling\u00b7Speed \u2693\ufe0e float TearFallingSpeed \u2693\ufe0e Player stat - Only change this in a callback to MC_EVALUATE_CACHE. How fast is the tear moving up or down when it spawns? Affects range. Tear\u00b7Flags \u2693\ufe0e TearFlags TearFlags \u2693\ufe0e Player stat - Only change this in a callback to MC_EVALUATE_CACHE. Various TearFlags . Example Code This code makes Isaac's tears spectral. 1 2 3 4 5 local mod : OnEvaluateTearFlags ( player , flag ) player . TearFlags = player . TearFlags | TearFlags . TEAR_SPECTRAL end mod : AddCallback ( ModCallbacks . MC_EVALUATE_CACHE , mod . OnEvaluateTearFlags , CacheFlag . CACHE_TEARFLAG ) Tear\u00b7Height \u2693\ufe0e float TearHeight \u2693\ufe0e Player stat - Only change this in a callback to MC_EVALUATE_CACHE. This is equal to the Range Stat * -1. How high above the ground is the tear when it spawns? Example Code This code gives Isaac a +5 range up. 1 2 3 4 5 6 local mod : OnEvaluateRange ( player , flag ) -- we give -5 because the TearHeight stat is always negative; the lower the number - the further the tear travels player . TearHeight = player . TearHeight - 5 end mod : AddCallback ( ModCallbacks . MC_EVALUATE_CACHE , mod . OnEvaluateRange , CacheFlag . CACHE_RANGE ) Tears\u00b7Offset \u2693\ufe0e Vector TearsOffset \u2693\ufe0e","title":"EntityPlayer"},{"location":"EntityPlayer/#class-entityplayer","text":"","title":"Class \"EntityPlayer\""},{"location":"EntityPlayer/#inherits-from-class","text":"Entity","title":"Inherits from Class:"},{"location":"EntityPlayer/#functions","text":"","title":"Functions"},{"location":"EntityPlayer/#addblackhearts","text":"","title":"Add\u00b7Black\u00b7Hearts ()"},{"location":"EntityPlayer/#addblueflies","text":"","title":"Add\u00b7Blue\u00b7Flies ()"},{"location":"EntityPlayer/#addbluespider","text":"","title":"Add\u00b7Blue\u00b7Spider ()"},{"location":"EntityPlayer/#addbombs","text":"","title":"Add\u00b7Bombs ()"},{"location":"EntityPlayer/#addbonehearts","text":"","title":"Add\u00b7Bone\u00b7Hearts ()"},{"location":"EntityPlayer/#addcacheflags","text":"","title":"Add\u00b7Cache\u00b7Flags ()"},{"location":"EntityPlayer/#addcard","text":"","title":"Add\u00b7Card ()"},{"location":"EntityPlayer/#addcoins","text":"","title":"Add\u00b7Coins ()"},{"location":"EntityPlayer/#addcollectible","text":"","title":"Add\u00b7Collectible ()"},{"location":"EntityPlayer/#addcontrolscooldown","text":"","title":"Add\u00b7Controls\u00b7Cooldown ()"},{"location":"EntityPlayer/#addcostume","text":"","title":"Add\u00b7Costume ()"},{"location":"EntityPlayer/#adddeadeyecharge","text":"","title":"Add\u00b7Dead\u00b7Eye\u00b7Charge ()"},{"location":"EntityPlayer/#adddollarbilleffect","text":"","title":"Add\u00b7Dollar\u00b7Bill\u00b7Effect ()"},{"location":"EntityPlayer/#addeternalhearts","text":"","title":"Add\u00b7Eternal\u00b7Hearts ()"},{"location":"EntityPlayer/#addgoldenbomb","text":"","title":"Add\u00b7Golden\u00b7Bomb ()"},{"location":"EntityPlayer/#addgoldenhearts","text":"","title":"Add\u00b7Golden\u00b7Hearts ()"},{"location":"EntityPlayer/#addgoldenkey","text":"","title":"Add\u00b7Golden\u00b7Key ()"},{"location":"EntityPlayer/#addhearts","text":"","title":"Add\u00b7Hearts ()"},{"location":"EntityPlayer/#addjarflies","text":"","title":"Add\u00b7Jar\u00b7Flies ()"},{"location":"EntityPlayer/#addjarhearts","text":"","title":"Add\u00b7Jar\u00b7Hearts ()"},{"location":"EntityPlayer/#addkeys","text":"","title":"Add\u00b7Keys ()"},{"location":"EntityPlayer/#addmaxhearts","text":"","title":"Add\u00b7Max\u00b7Hearts ()"},{"location":"EntityPlayer/#addnullcostume","text":"","title":"Add\u00b7Null\u00b7Costume ()"},{"location":"EntityPlayer/#addpill","text":"","title":"Add\u00b7Pill ()"},{"location":"EntityPlayer/#addplayerformcostume","text":"","title":"Add\u00b7Player\u00b7Form\u00b7Costume ()"},{"location":"EntityPlayer/#addprettyfly","text":"","title":"Add\u00b7Pretty\u00b7Fly ()"},{"location":"EntityPlayer/#addsoulhearts","text":"","title":"Add\u00b7Soul\u00b7Hearts ()"},{"location":"EntityPlayer/#addtrinket","text":"","title":"Add\u00b7Trinket ()"},{"location":"EntityPlayer/#animateappear","text":"","title":"Animate\u00b7Appear ()"},{"location":"EntityPlayer/#animatecard","text":"","title":"Animate\u00b7Card ()"},{"location":"EntityPlayer/#animatecollectible","text":"","title":"Animate\u00b7Collectible ()"},{"location":"EntityPlayer/#animatehappy","text":"","title":"Animate\u00b7Happy ()"},{"location":"EntityPlayer/#animatelighttravel","text":"","title":"Animate\u00b7Light\u00b7Travel ()"},{"location":"EntityPlayer/#animatepill","text":"","title":"Animate\u00b7Pill ()"},{"location":"EntityPlayer/#animatepitfallin","text":"","title":"Animate\u00b7Pitfall\u00b7In ()"},{"location":"EntityPlayer/#animatepitfallout","text":"","title":"Animate\u00b7Pitfall\u00b7Out ()"},{"location":"EntityPlayer/#animatesad","text":"","title":"Animate\u00b7Sad ()"},{"location":"EntityPlayer/#animateteleport","text":"","title":"Animate\u00b7Teleport ()"},{"location":"EntityPlayer/#animatetrapdoor","text":"","title":"Animate\u00b7Trapdoor ()"},{"location":"EntityPlayer/#animatetrinket","text":"","title":"Animate\u00b7Trinket ()"},{"location":"EntityPlayer/#arecontrolsenabled","text":"","title":"Are\u00b7Controls\u00b7Enabled ()"},{"location":"EntityPlayer/#areopposingshootdirectionspressed","text":"","title":"Are\u00b7Opposing\u00b7Shoot\u00b7Directions\u00b7Pressed ()"},{"location":"EntityPlayer/#canaddcollectible","text":"","title":"Can\u00b7Add\u00b7Collectible ()"},{"location":"EntityPlayer/#canpickblackhearts","text":"","title":"Can\u00b7Pick\u00b7Black\u00b7Hearts ()"},{"location":"EntityPlayer/#canpickbonehearts","text":"","title":"Can\u00b7Pick\u00b7Bone\u00b7Hearts ()"},{"location":"EntityPlayer/#canpickgoldenhearts","text":"","title":"Can\u00b7Pick\u00b7Golden\u00b7Hearts ()"},{"location":"EntityPlayer/#canpickredhearts","text":"","title":"Can\u00b7Pick\u00b7Red\u00b7Hearts ()"},{"location":"EntityPlayer/#canpicksoulhearts","text":"","title":"Can\u00b7Pick\u00b7Soul\u00b7Hearts ()"},{"location":"EntityPlayer/#canpickupitem","text":"","title":"Can\u00b7Pickup\u00b7Item ()"},{"location":"EntityPlayer/#canshoot","text":"","title":"Can\u00b7Shoot ()"},{"location":"EntityPlayer/#canturnhead","text":"","title":"Can\u00b7Turn\u00b7Head ()"},{"location":"EntityPlayer/#checkfamiliar","text":"","title":"Check\u00b7Familiar ()"},{"location":"EntityPlayer/#clearcostumes","text":"","title":"Clear\u00b7Costumes ()"},{"location":"EntityPlayer/#cleardeadeyecharge","text":"","title":"Clear\u00b7Dead\u00b7Eye\u00b7Charge ()"},{"location":"EntityPlayer/#cleartemporaryeffects","text":"","title":"Clear\u00b7Temporary\u00b7Effects ()"},{"location":"EntityPlayer/#dischargeactiveitem","text":"","title":"Discharge\u00b7Active\u00b7Item ()"},{"location":"EntityPlayer/#donateluck","text":"","title":"Donate\u00b7Luck ()"},{"location":"EntityPlayer/#doziteffect","text":"","title":"Do\u00b7Zit\u00b7Effect ()"},{"location":"EntityPlayer/#droppoketitem","text":"","title":"Drop\u00b7Poket\u00b7Item ()"},{"location":"EntityPlayer/#droptrinket","text":"","title":"Drop\u00b7Trinket ()"},{"location":"EntityPlayer/#evaluateitems","text":"","title":"Evaluate\u00b7Items ()"},{"location":"EntityPlayer/#firebomb","text":"","title":"Fire\u00b7Bomb ()"},{"location":"EntityPlayer/#firebrimstone","text":"","title":"Fire\u00b7Brimstone ()"},{"location":"EntityPlayer/#firedelayedbrimstone","text":"","title":"Fire\u00b7Delayed\u00b7Brimstone ()"},{"location":"EntityPlayer/#fireknife","text":"","title":"Fire\u00b7Knife ()"},{"location":"EntityPlayer/#firetear","text":"","title":"Fire\u00b7Tear ()"},{"location":"EntityPlayer/#firetechlaser","text":"","title":"Fire\u00b7Tech\u00b7Laser ()"},{"location":"EntityPlayer/#firetechxlaser","text":"","title":"Fire\u00b7Tech\u00b7XLaser ()"},{"location":"EntityPlayer/#flushqueueitem","text":"","title":"Flush\u00b7Queue\u00b7Item ()"},{"location":"EntityPlayer/#fullcharge","text":"","title":"Full\u00b7Charge ()"},{"location":"EntityPlayer/#getactivecharge","text":"","title":"Get\u00b7Active\u00b7Charge ()"},{"location":"EntityPlayer/#getactiveitem","text":"","title":"Get\u00b7Active\u00b7Item ()"},{"location":"EntityPlayer/#getactivesubcharge","text":"","title":"Get\u00b7Active\u00b7Sub\u00b7Charge ()"},{"location":"EntityPlayer/#getactiveweaponentity","text":"","title":"Get\u00b7Active\u00b7Weapon\u00b7Entity ()"},{"location":"EntityPlayer/#getaimdirection","text":"","title":"Get\u00b7Aim\u00b7Direction ()"},{"location":"EntityPlayer/#getbabyskin","text":"","title":"Get\u00b7Baby\u00b7Skin ()"},{"location":"EntityPlayer/#getbatterycharge","text":"","title":"Get\u00b7Battery\u00b7Charge ()"},{"location":"EntityPlayer/#getblackhearts","text":"","title":"Get\u00b7Black\u00b7Hearts ()"},{"location":"EntityPlayer/#getbombflags","text":"","title":"Get\u00b7Bomb\u00b7Flags ()"},{"location":"EntityPlayer/#getbombvariant","text":"","title":"Get\u00b7Bomb\u00b7Variant ()"},{"location":"EntityPlayer/#getbonehearts","text":"","title":"Get\u00b7Bone\u00b7Hearts ()"},{"location":"EntityPlayer/#getcard","text":"","title":"Get\u00b7Card ()"},{"location":"EntityPlayer/#getcardrng","text":"","title":"Get\u00b7Card\u00b7RNG ()"},{"location":"EntityPlayer/#getcollectiblecount","text":"","title":"Get\u00b7Collectible\u00b7Count ()"},{"location":"EntityPlayer/#getcollectiblenum","text":"","title":"Get\u00b7Collectible\u00b7Num ()"},{"location":"EntityPlayer/#getcollectiblerng","text":"","title":"Get\u00b7Collectible\u00b7RNG ()"},{"location":"EntityPlayer/#getcostumenullpos","text":"","title":"Get\u00b7Costume\u00b7Null\u00b7Pos ()"},{"location":"EntityPlayer/#getdamagecooldown","text":"","title":"Get\u00b7Damage\u00b7Cooldown ()"},{"location":"EntityPlayer/#geteffectivemaxhearts","text":"","title":"Get\u00b7Effective\u00b7Max\u00b7Hearts ()"},{"location":"EntityPlayer/#geteffects","text":"","title":"Get\u00b7Effects ()"},{"location":"EntityPlayer/#geteternalhearts","text":"","title":"Get\u00b7Eternal\u00b7Hearts ()"},{"location":"EntityPlayer/#getextralives","text":"","title":"Get\u00b7Extra\u00b7Lives ()"},{"location":"EntityPlayer/#getfiredirection","text":"","title":"Get\u00b7Fire\u00b7Direction ()"},{"location":"EntityPlayer/#getflyingoffset","text":"","title":"Get\u00b7Flying\u00b7Offset ()"},{"location":"EntityPlayer/#getgoldenhearts","text":"","title":"Get\u00b7Golden\u00b7Hearts ()"},{"location":"EntityPlayer/#getgreeddonationbreakchance","text":"","title":"Get\u00b7Greed\u00b7Donation\u00b7Break\u00b7Chance ()"},{"location":"EntityPlayer/#getheaddirection","text":"","title":"Get\u00b7Head\u00b7Direction ()"},{"location":"EntityPlayer/#getheartlimit","text":"","title":"Get\u00b7Heart\u00b7Limit ()"},{"location":"EntityPlayer/#gethearts","text":"","title":"Get\u00b7Hearts ()"},{"location":"EntityPlayer/#getitemstate","text":"","title":"Get\u00b7Item\u00b7State ()"},{"location":"EntityPlayer/#getjarflies","text":"","title":"Get\u00b7Jar\u00b7Flies ()"},{"location":"EntityPlayer/#getjarhearts","text":"","title":"Get\u00b7Jar\u00b7Hearts ()"},{"location":"EntityPlayer/#getlaseroffset","text":"","title":"Get\u00b7Laser\u00b7Offset ()"},{"location":"EntityPlayer/#getlastactiontriggers","text":"","title":"Get\u00b7Last\u00b7Action\u00b7Triggers ()"},{"location":"EntityPlayer/#getlastdamageflags","text":"","title":"Get\u00b7Last\u00b7Damage\u00b7Flags ()"},{"location":"EntityPlayer/#getlastdamagesource","text":"","title":"Get\u00b7Last\u00b7Damage\u00b7Source ()"},{"location":"EntityPlayer/#getlastdirection","text":"","title":"Get\u00b7Last\u00b7Direction ()"},{"location":"EntityPlayer/#getmaxhearts","text":"","title":"Get\u00b7Max\u00b7Hearts ()"},{"location":"EntityPlayer/#getmaxpoketitems","text":"","title":"Get\u00b7Max\u00b7Poket\u00b7Items ()"},{"location":"EntityPlayer/#getmaxtrinkets","text":"","title":"Get\u00b7Max\u00b7Trinkets ()"},{"location":"EntityPlayer/#getmovementdirection","text":"","title":"Get\u00b7Movement\u00b7Direction ()"},{"location":"EntityPlayer/#getmovementinput","text":"","title":"Get\u00b7Movement\u00b7Input ()"},{"location":"EntityPlayer/#getmovementjoystick","text":"","title":"Get\u00b7Movement\u00b7Joystick ()"},{"location":"EntityPlayer/#getmovementvector","text":"","title":"Get\u00b7Movement\u00b7Vector ()"},{"location":"EntityPlayer/#getmultishotparams","text":"","title":"Get\u00b7Multi\u00b7Shot\u00b7Params ()"},{"location":"EntityPlayer/#getmultishotpositionvelocity","text":"","title":"Get\u00b7Multi\u00b7Shot\u00b7Position\u00b7Velocity ()"},{"location":"EntityPlayer/#getname","text":"","title":"Get\u00b7Name ()"},{"location":"EntityPlayer/#getnpctarget","text":"","title":"Get\u00b7NPCTarget ()"},{"location":"EntityPlayer/#getnumblueflies","text":"","title":"Get\u00b7Num\u00b7Blue\u00b7Flies ()"},{"location":"EntityPlayer/#getnumbluespiders","text":"","title":"Get\u00b7Num\u00b7Blue\u00b7Spiders ()"},{"location":"EntityPlayer/#getnumbombs","text":"","title":"Get\u00b7Num\u00b7Bombs ()"},{"location":"EntityPlayer/#getnumcoins","text":"","title":"Get\u00b7Num\u00b7Coins ()"},{"location":"EntityPlayer/#getnumkeys","text":"","title":"Get\u00b7Num\u00b7Keys ()"},{"location":"EntityPlayer/#getpill","text":"","title":"Get\u00b7Pill ()"},{"location":"EntityPlayer/#getpillrng","text":"","title":"Get\u00b7Pill\u00b7RNG ()"},{"location":"EntityPlayer/#getplayertype","text":"","title":"Get\u00b7Player\u00b7Type ()"},{"location":"EntityPlayer/#getpocketitem","text":"","title":"Get\u00b7Pocket\u00b7Item ()"},{"location":"EntityPlayer/#getrecentmovementvector","text":"","title":"Get\u00b7Recent\u00b7Movement\u00b7Vector ()"},{"location":"EntityPlayer/#getshootinginput","text":"","title":"Get\u00b7Shooting\u00b7Input ()"},{"location":"EntityPlayer/#getshootingjoystick","text":"","title":"Get\u00b7Shooting\u00b7Joystick ()"},{"location":"EntityPlayer/#getsmoothbodyrotation","text":"","title":"Get\u00b7Smooth\u00b7Body\u00b7Rotation ()"},{"location":"EntityPlayer/#getsoulhearts","text":"","title":"Get\u00b7Soul\u00b7Hearts ()"},{"location":"EntityPlayer/#getsubplayer","text":"","title":"Get\u00b7Sub\u00b7Player ()"},{"location":"EntityPlayer/#gettearhitparams","text":"","title":"Get\u00b7Tear\u00b7Hit\u00b7Params ()"},{"location":"EntityPlayer/#gettearmovementinheritance","text":"","title":"Get\u00b7Tear\u00b7Movement\u00b7Inheritance ()"},{"location":"EntityPlayer/#gettearpoisondamage","text":"","title":"Get\u00b7Tear\u00b7Poison\u00b7Damage ()"},{"location":"EntityPlayer/#gettearrangemodifier","text":"","title":"Get\u00b7Tear\u00b7Range\u00b7Modifier ()"},{"location":"EntityPlayer/#gettotaldamagetaken","text":"","title":"Get\u00b7Total\u00b7Damage\u00b7Taken ()"},{"location":"EntityPlayer/#gettractorbeam","text":"","title":"Get\u00b7Tractor\u00b7Beam ()"},{"location":"EntityPlayer/#gettrinket","text":"","title":"Get\u00b7Trinket ()"},{"location":"EntityPlayer/#gettrinketmultiplier","text":"","title":"Get\u00b7Trinket\u00b7Multiplier ()"},{"location":"EntityPlayer/#gettrinketrng","text":"","title":"Get\u00b7Trinket\u00b7RNG ()"},{"location":"EntityPlayer/#getvelocitybeforeupdate","text":"","title":"Get\u00b7Velocity\u00b7Before\u00b7Update ()"},{"location":"EntityPlayer/#getzodiaceffect","text":"","title":"Get\u00b7Zodiac\u00b7Effect ()"},{"location":"EntityPlayer/#hascollectible","text":"","title":"Has\u00b7Collectible ()"},{"location":"EntityPlayer/#hasfullhearts","text":"","title":"Has\u00b7Full\u00b7Hearts ()"},{"location":"EntityPlayer/#hasfullheartsandsoulhearts","text":"","title":"Has\u00b7Full\u00b7Hearts\u00b7And\u00b7Soul\u00b7Hearts ()"},{"location":"EntityPlayer/#hasgoldenbomb","text":"","title":"Has\u00b7Golden\u00b7Bomb ()"},{"location":"EntityPlayer/#hasgoldenkey","text":"","title":"Has\u00b7Golden\u00b7Key ()"},{"location":"EntityPlayer/#hasinvincibility","text":"","title":"Has\u00b7Invincibility ()"},{"location":"EntityPlayer/#hasplayerform","text":"","title":"Has\u00b7Player\u00b7Form ()"},{"location":"EntityPlayer/#hastimeditem","text":"","title":"Has\u00b7Timed\u00b7Item ()"},{"location":"EntityPlayer/#hastrinket","text":"","title":"Has\u00b7Trinket ()"},{"location":"EntityPlayer/#hasweapontype","text":"","title":"Has\u00b7Weapon\u00b7Type ()"},{"location":"EntityPlayer/#initbabyskin","text":"","title":"Init\u00b7Baby\u00b7Skin ()"},{"location":"EntityPlayer/#isblackheart","text":"","title":"Is\u00b7Black\u00b7Heart ()"},{"location":"EntityPlayer/#isboneheart","text":"","title":"Is\u00b7Bone\u00b7Heart ()"},{"location":"EntityPlayer/#isextraanimationfinished","text":"","title":"Is\u00b7Extra\u00b7Animation\u00b7Finished ()"},{"location":"EntityPlayer/#isfullspriterendering","text":"","title":"Is\u00b7Full\u00b7Sprite\u00b7Rendering ()"},{"location":"EntityPlayer/#ishelditemvisible","text":"","title":"Is\u00b7Held\u00b7Item\u00b7Visible ()"},{"location":"EntityPlayer/#isholdingitem","text":"","title":"Is\u00b7Holding\u00b7Item ()"},{"location":"EntityPlayer/#isitemqueueempty","text":"","title":"Is\u00b7Item\u00b7Queue\u00b7Empty ()"},{"location":"EntityPlayer/#isp2appearing","text":"","title":"Is\u00b7P2Appearing ()"},{"location":"EntityPlayer/#isposinspotlight","text":"","title":"Is\u00b7Pos\u00b7In\u00b7Spot\u00b7Light ()"},{"location":"EntityPlayer/#issubplayer","text":"","title":"Is\u00b7Sub\u00b7Player ()"},{"location":"EntityPlayer/#needscharge","text":"","title":"Needs\u00b7Charge ()"},{"location":"EntityPlayer/#playextraanimation","text":"","title":"Play\u00b7Extra\u00b7Animation ()"},{"location":"EntityPlayer/#queueextraanimation","text":"","title":"Queue\u00b7Extra\u00b7Animation ()"},{"location":"EntityPlayer/#queueitem","text":"","title":"Queue\u00b7Item ()"},{"location":"EntityPlayer/#removeblackheart","text":"","title":"Remove\u00b7Black\u00b7Heart ()"},{"location":"EntityPlayer/#removebluefly","text":"","title":"Remove\u00b7Blue\u00b7Fly ()"},{"location":"EntityPlayer/#removebluespider","text":"","title":"Remove\u00b7Blue\u00b7Spider ()"},{"location":"EntityPlayer/#removecollectible","text":"","title":"Remove\u00b7Collectible ()"},{"location":"EntityPlayer/#removecostume","text":"","title":"Remove\u00b7Costume ()"},{"location":"EntityPlayer/#removegoldenbomb","text":"","title":"Remove\u00b7Golden\u00b7Bomb ()"},{"location":"EntityPlayer/#removegoldenkey","text":"","title":"Remove\u00b7Golden\u00b7Key ()"},{"location":"EntityPlayer/#removeskincostume","text":"","title":"Remove\u00b7Skin\u00b7Costume ()"},{"location":"EntityPlayer/#renderbody","text":"","title":"Render\u00b7Body ()"},{"location":"EntityPlayer/#renderglow","text":"","title":"Render\u00b7Glow ()"},{"location":"EntityPlayer/#renderhead","text":"","title":"Render\u00b7Head ()"},{"location":"EntityPlayer/#rendertop","text":"","title":"Render\u00b7Top ()"},{"location":"EntityPlayer/#replacecostumesprite","text":"","title":"Replace\u00b7Costume\u00b7Sprite ()"},{"location":"EntityPlayer/#resetdamagecooldown","text":"","title":"Reset\u00b7Damage\u00b7Cooldown ()"},{"location":"EntityPlayer/#resetitemstate","text":"","title":"Reset\u00b7Item\u00b7State ()"},{"location":"EntityPlayer/#respawnfamiliars","text":"","title":"Respawn\u00b7Familiars ()"},{"location":"EntityPlayer/#revive","text":"","title":"Revive ()"},{"location":"EntityPlayer/#setactivecharge","text":"","title":"Set\u00b7Active\u00b7Charge ()"},{"location":"EntityPlayer/#setcard","text":"","title":"Set\u00b7Card ()"},{"location":"EntityPlayer/#setfullhearts","text":"","title":"Set\u00b7Full\u00b7Hearts ()"},{"location":"EntityPlayer/#setmindamagecooldown","text":"","title":"Set\u00b7Min\u00b7Damage\u00b7Cooldown ()"},{"location":"EntityPlayer/#setpill","text":"","title":"Set\u00b7Pill ()"},{"location":"EntityPlayer/#setshootingcooldown","text":"","title":"Set\u00b7Shooting\u00b7Cooldown ()"},{"location":"EntityPlayer/#settargettrapdoor","text":"","title":"Set\u00b7Target\u00b7Trap\u00b7Door ()"},{"location":"EntityPlayer/#shootredcandle","text":"","title":"Shoot\u00b7Red\u00b7Candle ()"},{"location":"EntityPlayer/#spawnmawofvoid","text":"","title":"Spawn\u00b7Maw\u00b7Of\u00b7Void ()"},{"location":"EntityPlayer/#stopextraanimation","text":"","title":"Stop\u00b7Extra\u00b7Animation ()"},{"location":"EntityPlayer/#swapactiveitems","text":"","title":"Swap\u00b7Active\u00b7Items ()"},{"location":"EntityPlayer/#throwbluespider","text":"","title":"Throw\u00b7Blue\u00b7Spider ()"},{"location":"EntityPlayer/#tryholdtrinket","text":"","title":"Try\u00b7Hold\u00b7Trinket ()"},{"location":"EntityPlayer/#tryremovecollectiblecostume","text":"","title":"Try\u00b7Remove\u00b7Collectible\u00b7Costume ()"},{"location":"EntityPlayer/#tryremovenullcostume","text":"","title":"Try\u00b7Remove\u00b7Null\u00b7Costume ()"},{"location":"EntityPlayer/#tryremovetrinket","text":"","title":"Try\u00b7Remove\u00b7Trinket ()"},{"location":"EntityPlayer/#tryremovetrinketcostume","text":"","title":"Try\u00b7Remove\u00b7Trinket\u00b7Costume ()"},{"location":"EntityPlayer/#tryusekey","text":"","title":"Try\u00b7Use\u00b7Key ()"},{"location":"EntityPlayer/#updatecanshoot","text":"","title":"Update\u00b7Can\u00b7Shoot ()"},{"location":"EntityPlayer/#useactiveitem","text":"","title":"Use\u00b7Active\u00b7Item ()"},{"location":"EntityPlayer/#usecard","text":"","title":"Use\u00b7Card ()"},{"location":"EntityPlayer/#usepill","text":"","title":"Use\u00b7Pill ()"},{"location":"EntityPlayer/#willplayerrevive","text":"","title":"Will\u00b7Player\u00b7Revive ()"},{"location":"EntityPlayer/#variables","text":"","title":"Variables"},{"location":"EntityPlayer/#babyskin","text":"","title":"Baby\u00b7Skin"},{"location":"EntityPlayer/#canfly","text":"","title":"Can\u00b7Fly"},{"location":"EntityPlayer/#controllerindex","text":"","title":"Controller\u00b7Index"},{"location":"EntityPlayer/#controlscooldown","text":"","title":"Controls\u00b7Cooldown"},{"location":"EntityPlayer/#controlsenabled","text":"","title":"Controls\u00b7Enabled"},{"location":"EntityPlayer/#damage","text":"","title":"Damage"},{"location":"EntityPlayer/#firedelay","text":"","title":"Fire\u00b7Delay"},{"location":"EntityPlayer/#friendballenemy","text":"","title":"Friend\u00b7Ball\u00b7Enemy"},{"location":"EntityPlayer/#headframedelay","text":"","title":"Head\u00b7Frame\u00b7Delay"},{"location":"EntityPlayer/#itemholdcooldown","text":"","title":"Item\u00b7Hold\u00b7Cooldown"},{"location":"EntityPlayer/#lasercolor","text":"","title":"Laser\u00b7Color"},{"location":"EntityPlayer/#luck","text":"","title":"Luck"},{"location":"EntityPlayer/#maxfiredelay","text":"","title":"Max\u00b7Fire\u00b7Delay"},{"location":"EntityPlayer/#movespeed","text":"","title":"Move\u00b7Speed"},{"location":"EntityPlayer/#queueditem","text":"","title":"Queued\u00b7Item"},{"location":"EntityPlayer/#secondaryactiveitem","text":"","title":"Secondary\u00b7Active\u00b7Item"},{"location":"EntityPlayer/#shotspeed","text":"","title":"Shot\u00b7Speed"},{"location":"EntityPlayer/#spritescale","text":"","title":"Sprite\u00b7Scale"},{"location":"EntityPlayer/#tearcolor","text":"","title":"Tear\u00b7Color"},{"location":"EntityPlayer/#tearfallingacceleration","text":"","title":"Tear\u00b7Falling\u00b7Acceleration"},{"location":"EntityPlayer/#tearfallingspeed","text":"","title":"Tear\u00b7Falling\u00b7Speed"},{"location":"EntityPlayer/#tearflags","text":"","title":"Tear\u00b7Flags"},{"location":"EntityPlayer/#tearheight","text":"","title":"Tear\u00b7Height"},{"location":"EntityPlayer/#tearsoffset","text":"","title":"Tears\u00b7Offset"},{"location":"EntityProjectile/","text":"Class \"EntityProjectile\" \u2693\ufe0e Inherits from Class: \u2693\ufe0e Entity Functions \u2693\ufe0e Add\u00b7Change\u00b7Flags () \u2693\ufe0e void AddChangeFlags ( int Flags ) \u2693\ufe0e See ChangeFlags . Add\u00b7Falling\u00b7Accel () \u2693\ufe0e void AddFallingAccel ( float Value ) \u2693\ufe0e Add\u00b7Falling\u00b7Speed () \u2693\ufe0e void AddFallingSpeed ( float Value ) \u2693\ufe0e Add\u00b7Height () \u2693\ufe0e void AddHeight ( float Value ) \u2693\ufe0e Add\u00b7Projectile\u00b7Flags () \u2693\ufe0e void AddProjectileFlags ( int Flags ) \u2693\ufe0e Uses ProjectileFlags to define the projectile attributes. Add\u00b7Scale () \u2693\ufe0e void AddScale ( float Value ) \u2693\ufe0e Variables \u2693\ufe0e Acceleration \u2693\ufe0e float Acceleration \u2693\ufe0e Change\u00b7Flags \u2693\ufe0e int ChangeFlags \u2693\ufe0e Uses ProjectileFlags to define the projectile attributes after the \"Changed\" state was activated. The ProjectileFlag .CHANGE_FLAGS_AFTER_TIMEOUT needs to be set to allow for this change to apply! Informations about \"Changed\" State: Projectiles can have two states: normal (default) and changed. Changed state activates when projectile's frame count reaches the value set in ChangeTimeout . After that its flags get changed to what was set in ChangeFlags and velocity will be resized to length set in ChangeVelocity . Also used in: ProjectileParams() Change\u00b7Timeout \u2693\ufe0e int ChangeTimeout \u2693\ufe0e Number of frames that need to elapse after spawn till the \"Changed\" state is activated. The ProjectileFlags .CHANGE_FLAGS_AFTER_TIMEOUT or CHANGE_VELOCITY_AFTER_TIMEOUT need to be set to allow for this change to apply! Informations about \"Changed\" State: Projectiles can have two states: normal (default) and changed. Changed state activates when projectile's frame count reaches the value set in ChangeTimeout . After that its flags get changed to what was set in ChangeFlags and velocity will be resized to length set in ChangeVelocity . Also used in: ProjectileParams() Change\u00b7Velocity \u2693\ufe0e float ChangeVelocity \u2693\ufe0e Velocity value that gets applied when the \"Changed\" state is activated. The ProjectileFlag .CHANGE_VELOCITY_AFTER_TIMEOUT need to be set to allow for this change to apply! Informations about \"Changed\" State: Projectiles can have two states: normal (default) and changed. Changed state activates when projectile's frame count reaches the value set in ChangeTimeout . After that its flags get changed to what was set in ChangeFlags and velocity will be resized to length set in ChangeVelocity . Also used in: ProjectileParams() Curving\u00b7Strength \u2693\ufe0e float CurvingStrength \u2693\ufe0e Damage \u2693\ufe0e float Damage \u2693\ufe0e Depth\u00b7Offset \u2693\ufe0e float DepthOffset \u2693\ufe0e Falling\u00b7Accel \u2693\ufe0e float FallingAccel \u2693\ufe0e Falling\u00b7Speed \u2693\ufe0e float FallingSpeed \u2693\ufe0e Height \u2693\ufe0e float Height \u2693\ufe0e Defines the height of a projectile. Height should be a negative value. Default is - 23 . Homing\u00b7Strength \u2693\ufe0e float HomingStrength \u2693\ufe0e Projectile\u00b7Flags \u2693\ufe0e ProjectileFlags ProjectileFlags \u2693\ufe0e Uses ProjectileFlags to define the projectile attributes. Scale \u2693\ufe0e float Scale \u2693\ufe0e Wiggle\u00b7Frame\u00b7Offset \u2693\ufe0e int WiggleFrameOffset \u2693\ufe0e","title":"EntityProjectile"},{"location":"EntityProjectile/#class-entityprojectile","text":"","title":"Class \"EntityProjectile\""},{"location":"EntityProjectile/#inherits-from-class","text":"Entity","title":"Inherits from Class:"},{"location":"EntityProjectile/#functions","text":"","title":"Functions"},{"location":"EntityProjectile/#addchangeflags","text":"","title":"Add\u00b7Change\u00b7Flags ()"},{"location":"EntityProjectile/#addfallingaccel","text":"","title":"Add\u00b7Falling\u00b7Accel ()"},{"location":"EntityProjectile/#addfallingspeed","text":"","title":"Add\u00b7Falling\u00b7Speed ()"},{"location":"EntityProjectile/#addheight","text":"","title":"Add\u00b7Height ()"},{"location":"EntityProjectile/#addprojectileflags","text":"","title":"Add\u00b7Projectile\u00b7Flags ()"},{"location":"EntityProjectile/#addscale","text":"","title":"Add\u00b7Scale ()"},{"location":"EntityProjectile/#variables","text":"","title":"Variables"},{"location":"EntityProjectile/#acceleration","text":"","title":"Acceleration"},{"location":"EntityProjectile/#changeflags","text":"","title":"Change\u00b7Flags"},{"location":"EntityProjectile/#changetimeout","text":"","title":"Change\u00b7Timeout"},{"location":"EntityProjectile/#changevelocity","text":"","title":"Change\u00b7Velocity"},{"location":"EntityProjectile/#curvingstrength","text":"","title":"Curving\u00b7Strength"},{"location":"EntityProjectile/#damage","text":"","title":"Damage"},{"location":"EntityProjectile/#depthoffset","text":"","title":"Depth\u00b7Offset"},{"location":"EntityProjectile/#fallingaccel","text":"","title":"Falling\u00b7Accel"},{"location":"EntityProjectile/#fallingspeed","text":"","title":"Falling\u00b7Speed"},{"location":"EntityProjectile/#height","text":"","title":"Height"},{"location":"EntityProjectile/#homingstrength","text":"","title":"Homing\u00b7Strength"},{"location":"EntityProjectile/#projectileflags","text":"","title":"Projectile\u00b7Flags"},{"location":"EntityProjectile/#scale","text":"","title":"Scale"},{"location":"EntityProjectile/#wiggleframeoffset","text":"","title":"Wiggle\u00b7Frame\u00b7Offset"},{"location":"EntityPtr/","text":"Class \"EntityPtr\" \u2693\ufe0e Constructors \u2693\ufe0e Entity\u00b7Ptr () \u2693\ufe0e EntityPtr EntityPtr ( Entity ) \u2693\ufe0e Functions \u2693\ufe0e Set\u00b7Reference () \u2693\ufe0e void SetReference ( Entity ref ) \u2693\ufe0e Variables \u2693\ufe0e Ref \u2693\ufe0e Entity Ref \u2693\ufe0e","title":"EntityPtr"},{"location":"EntityPtr/#class-entityptr","text":"","title":"Class \"EntityPtr\""},{"location":"EntityPtr/#constructors","text":"","title":"Constructors"},{"location":"EntityPtr/#entityptr","text":"","title":"Entity\u00b7Ptr ()"},{"location":"EntityPtr/#functions","text":"","title":"Functions"},{"location":"EntityPtr/#setreference","text":"","title":"Set\u00b7Reference ()"},{"location":"EntityPtr/#variables","text":"","title":"Variables"},{"location":"EntityPtr/#ref","text":"","title":"Ref"},{"location":"EntityRef/","text":"Class \"EntityRef\" \u2693\ufe0e Constructors \u2693\ufe0e Entity\u00b7Ref () \u2693\ufe0e EntityRef EntityRef ( Entity ) \u2693\ufe0e Variables \u2693\ufe0e Entity \u2693\ufe0e Entity Entity \u2693\ufe0e optional Is\u00b7Charmed \u2693\ufe0e boolean IsCharmed \u2693\ufe0e Is\u00b7Friendly \u2693\ufe0e boolean IsFriendly \u2693\ufe0e Position \u2693\ufe0e Vector Position \u2693\ufe0e Spawner\u00b7Type \u2693\ufe0e EntityType SpawnerType \u2693\ufe0e Spawner\u00b7Variant \u2693\ufe0e int SpawnerVariant \u2693\ufe0e Type \u2693\ufe0e EntityType Type \u2693\ufe0e Variant \u2693\ufe0e int Variant \u2693\ufe0e","title":"EntityRef"},{"location":"EntityRef/#class-entityref","text":"","title":"Class \"EntityRef\""},{"location":"EntityRef/#constructors","text":"","title":"Constructors"},{"location":"EntityRef/#entityref","text":"","title":"Entity\u00b7Ref ()"},{"location":"EntityRef/#variables","text":"","title":"Variables"},{"location":"EntityRef/#entity","text":"","title":"Entity"},{"location":"EntityRef/#ischarmed","text":"","title":"Is\u00b7Charmed"},{"location":"EntityRef/#isfriendly","text":"","title":"Is\u00b7Friendly"},{"location":"EntityRef/#position","text":"","title":"Position"},{"location":"EntityRef/#spawnertype","text":"","title":"Spawner\u00b7Type"},{"location":"EntityRef/#spawnervariant","text":"","title":"Spawner\u00b7Variant"},{"location":"EntityRef/#type","text":"","title":"Type"},{"location":"EntityRef/#variant","text":"","title":"Variant"},{"location":"EntityTear/","text":"Class \"EntityTear\" \u2693\ufe0e Inherits from Class: \u2693\ufe0e Entity Functions \u2693\ufe0e Change\u00b7Variant () \u2693\ufe0e void ChangeVariant ( int NewVariant ) \u2693\ufe0e Reset\u00b7Sprite\u00b7Scale () \u2693\ufe0e void ResetSpriteScale ( ) \u2693\ufe0e Resets the tear sprite animation depending on scale. Set\u00b7Dead\u00b7Eye\u00b7Intensity () \u2693\ufe0e void SetDeadEyeIntensity ( float Intensity ) \u2693\ufe0e Set\u00b7Knockback\u00b7Multiplier () \u2693\ufe0e void SetKnockbackMultiplier ( float Multiplier ) \u2693\ufe0e Set\u00b7Parent\u00b7Offset () \u2693\ufe0e void SetParentOffset ( Vector Offset ) \u2693\ufe0e Set\u00b7Wait\u00b7Frames () \u2693\ufe0e void SetWaitFrames ( int Value ) \u2693\ufe0e Variables \u2693\ufe0e Base\u00b7Damage \u2693\ufe0e float BaseDamage \u2693\ufe0e Base\u00b7Scale \u2693\ufe0e float BaseScale \u2693\ufe0e Bounced \u2693\ufe0e boolean Bounced \u2693\ufe0e true if tear bounced of something Can\u00b7Trigger\u00b7Streak\u00b7End \u2693\ufe0e boolean CanTriggerStreakEnd \u2693\ufe0e For Onan's strak and Dead Eye. Continue\u00b7Velocity \u2693\ufe0e Vector ContinueVelocity \u2693\ufe0e Falling\u00b7Acceleration \u2693\ufe0e float FallingAcceleration \u2693\ufe0e Falling\u00b7Speed \u2693\ufe0e float FallingSpeed \u2693\ufe0e Height \u2693\ufe0e float Height \u2693\ufe0e Homing\u00b7Friction \u2693\ufe0e float HomingFriction \u2693\ufe0e Knockback\u00b7Multiplier \u2693\ufe0e float KnockbackMultiplier \u2693\ufe0e Parent\u00b7Offset \u2693\ufe0e Vector ParentOffset \u2693\ufe0e Used for Position adjustment (vs PositionOffset which is a render offset) Pos\u00b7Displacement \u2693\ufe0e Vector PosDisplacement \u2693\ufe0e Rotation \u2693\ufe0e float Rotation \u2693\ufe0e Scale \u2693\ufe0e float Scale \u2693\ufe0e Stick\u00b7Diff \u2693\ufe0e Vector StickDiff \u2693\ufe0e Stick\u00b7Target \u2693\ufe0e Entity StickTarget \u2693\ufe0e Stick\u00b7Timer \u2693\ufe0e int StickTimer \u2693\ufe0e Tear\u00b7Flags \u2693\ufe0e TearFlags TearFlags \u2693\ufe0e Tear\u00b7Index \u2693\ufe0e int TearIndex \u2693\ufe0e Wait\u00b7Frames \u2693\ufe0e int WaitFrames \u2693\ufe0e","title":"EntityTear"},{"location":"EntityTear/#class-entitytear","text":"","title":"Class \"EntityTear\""},{"location":"EntityTear/#inherits-from-class","text":"Entity","title":"Inherits from Class:"},{"location":"EntityTear/#functions","text":"","title":"Functions"},{"location":"EntityTear/#changevariant","text":"","title":"Change\u00b7Variant ()"},{"location":"EntityTear/#resetspritescale","text":"","title":"Reset\u00b7Sprite\u00b7Scale ()"},{"location":"EntityTear/#setdeadeyeintensity","text":"","title":"Set\u00b7Dead\u00b7Eye\u00b7Intensity ()"},{"location":"EntityTear/#setknockbackmultiplier","text":"","title":"Set\u00b7Knockback\u00b7Multiplier ()"},{"location":"EntityTear/#setparentoffset","text":"","title":"Set\u00b7Parent\u00b7Offset ()"},{"location":"EntityTear/#setwaitframes","text":"","title":"Set\u00b7Wait\u00b7Frames ()"},{"location":"EntityTear/#variables","text":"","title":"Variables"},{"location":"EntityTear/#basedamage","text":"","title":"Base\u00b7Damage"},{"location":"EntityTear/#basescale","text":"","title":"Base\u00b7Scale"},{"location":"EntityTear/#bounced","text":"","title":"Bounced"},{"location":"EntityTear/#cantriggerstreakend","text":"","title":"Can\u00b7Trigger\u00b7Streak\u00b7End"},{"location":"EntityTear/#continuevelocity","text":"","title":"Continue\u00b7Velocity"},{"location":"EntityTear/#fallingacceleration","text":"","title":"Falling\u00b7Acceleration"},{"location":"EntityTear/#fallingspeed","text":"","title":"Falling\u00b7Speed"},{"location":"EntityTear/#height","text":"","title":"Height"},{"location":"EntityTear/#homingfriction","text":"","title":"Homing\u00b7Friction"},{"location":"EntityTear/#knockbackmultiplier","text":"","title":"Knockback\u00b7Multiplier"},{"location":"EntityTear/#parentoffset","text":"","title":"Parent\u00b7Offset"},{"location":"EntityTear/#posdisplacement","text":"","title":"Pos\u00b7Displacement"},{"location":"EntityTear/#rotation","text":"","title":"Rotation"},{"location":"EntityTear/#scale","text":"","title":"Scale"},{"location":"EntityTear/#stickdiff","text":"","title":"Stick\u00b7Diff"},{"location":"EntityTear/#sticktarget","text":"","title":"Stick\u00b7Target"},{"location":"EntityTear/#sticktimer","text":"","title":"Stick\u00b7Timer"},{"location":"EntityTear/#tearflags","text":"","title":"Tear\u00b7Flags"},{"location":"EntityTear/#tearindex","text":"","title":"Tear\u00b7Index"},{"location":"EntityTear/#waitframes","text":"","title":"Wait\u00b7Frames"},{"location":"Font/","text":"Class \"Font\" \u2693\ufe0e Constructors \u2693\ufe0e Font () \u2693\ufe0e Font Font ( ) \u2693\ufe0e Constructor for the \"Font\" class. Example Code Example usage. 1 2 3 local f = Font () -- init font object f : Load ( \"font/terminus.fnt\" ) -- load a font into the font object f : DrawString ( \"Hello World!\" , 60 , 50 , KColor ( 1 , 1 , 1 , 1 ), 0 , true ) -- render string with loaded font on position 60x50y Functions \u2693\ufe0e Draw\u00b7String () \u2693\ufe0e void DrawString ( string String, float PositionX, float PositionY, KColor RenderColor, u_int BoxWidth, boolean Center ) \u2693\ufe0e Draws a string of text to the screen Converts UTF8 to UTF16, then draws the string. Notes: The BoxWidth and Center parameters can be used for aligning the text: If BoxWidth is zero, the text will be left aligned and the center parameter will be ignored If BoxWidth is NOT zero, and the Center parameter is FALSE, then the text will be right aligned inside the BoxWidth size If BoxWidth is NOT zero, and the center parameter is TRUE, then the text will be centered inside the BoxWidth size Example Code Example usage. 1 2 3 local f = Font () -- init font object f : Load ( \"font/terminus.fnt\" ) -- load a font into the font object f : DrawString ( \"Hello World!\" , 60 , 50 , KColor ( 1 , 1 , 1 , 1 ), 0 , true ) -- render string with loaded font on position 60x50y Draw\u00b7String\u00b7Scaled () \u2693\ufe0e void DrawStringScaled ( string String, float PositionX, float PositionY, float ScaleX, float ScaleY, KColor RenderColor, u_int BoxWidth, boolean Center ) \u2693\ufe0e Draws a scaled string of text on the screen. Converts UTF8 to UTF16, then draws the string. Example Code Example usage. 1 2 3 local f = Font () -- init font object f : Load ( \"font/terminus.fnt\" ) -- load a font into the font object f : DrawStringScaled ( \"Hello World!\" , 60 , 50 , 0.5 , 0.5 , KColor ( 1 , 1 , 1 , 1 ), 0 , true ) -- render string with loaded font on position 60x50y Draw\u00b7String\u00b7Scaled\u00b7UTF8 () \u2693\ufe0e void DrawStringScaledUTF8 ( string String, float PositionX, float PositionY, float ScaleX, float ScaleY, KColor RenderColor, u_int BoxWidth, boolean Center ) \u2693\ufe0e Draws a scaled string of Unicode text on the screen. Example Code Example usage. 1 2 3 local f = Font () -- init font object f : Load ( \"font/terminus.fnt\" ) -- load a font into the font object f : DrawStringScaledUTF8 ( \"Hello World!\" , 60 , 50 , 0.5 , 0.5 , KColor ( 1 , 1 , 1 , 1 ), 0 , true ) -- render string with loaded font on position 60x50y Draw\u00b7String\u00b7UTF8 () \u2693\ufe0e void DrawStringUTF8 ( string String, float PositionX, float PositionY, KColor RenderColor, u_int BoxWidth, boolean Center ) \u2693\ufe0e Draws a string of Unicode text to the screen Notes: The BoxWidth and Center parameters can be used for aligning the text: If BoxWidth is zero, the text will be left aligned and the center parameter will be ignored If BoxWidth is NOT zero, and the Center parameter is FALSE, then the text will be right aligned inside the BoxWidth size If BoxWidth is NOT zero, and the center parameter is TRUE, then the text will be centered inside the BoxWidth size Example Code Example usage. 1 2 3 local f = Font () -- init font object f : Load ( \"font/terminus.fnt\" ) -- load a font into the font object f : DrawStringUTF8 ( \"Hello World!\" , 60 , 50 , KColor ( 1 , 1 , 1 , 1 ), 0 , true ) -- render string with loaded font on position 60x50y Get\u00b7Baseline\u00b7Height () \u2693\ufe0e u_int GetBaselineHeight ( ) \u2693\ufe0e Get the number of pixels from the absolute top of the line to the base of the characters Get\u00b7Character\u00b7Width () \u2693\ufe0e u_int GetCharacterWidth ( char Character ) \u2693\ufe0e Returns the width of a specific character Get\u00b7Line\u00b7Height () \u2693\ufe0e u_int GetLineHeight ( ) \u2693\ufe0e Get the distance in pixels between each line of text Get\u00b7String\u00b7Width () \u2693\ufe0e u_int GetStringWidth ( string String ) \u2693\ufe0e Converts UTF8 to UTF16 and returns string width Get\u00b7String\u00b7Width\u00b7UTF8 () \u2693\ufe0e u_int GetStringWidthUTF8 ( string String ) \u2693\ufe0e returns string width of a Unicode text. Is\u00b7Loaded () \u2693\ufe0e boolean IsLoaded ( ) \u2693\ufe0e Returns whether a font is loaded or not. Load () \u2693\ufe0e boolean Load ( string FilePath ) \u2693\ufe0e Loads a font. Example Code Example usage. 1 2 3 local f = Font () -- init font object f : Load ( \"font/terminus.fnt\" ) -- load a font into the font object f : DrawString ( \"Hello World!\" , 60 , 50 , KColor ( 1 , 1 , 1 , 1 ), 0 , true ) -- render string with loaded font on position 60x50y Set\u00b7Missing\u00b7Character () \u2693\ufe0e void SetMissingCharacter ( u16 MissingCharacter ) \u2693\ufe0e Converts UTF8 to UTF16, then draws Sets the missing character to be used by the font (the character used when missing characters are encountered) Unload () \u2693\ufe0e void Unload ( ) \u2693\ufe0e Unloads all our data from memory","title":"Font"},{"location":"Font/#class-font","text":"","title":"Class \"Font\""},{"location":"Font/#constructors","text":"","title":"Constructors"},{"location":"Font/#font","text":"","title":"Font ()"},{"location":"Font/#functions","text":"","title":"Functions"},{"location":"Font/#drawstring","text":"","title":"Draw\u00b7String ()"},{"location":"Font/#drawstringscaled","text":"","title":"Draw\u00b7String\u00b7Scaled ()"},{"location":"Font/#drawstringscaledutf8","text":"","title":"Draw\u00b7String\u00b7Scaled\u00b7UTF8 ()"},{"location":"Font/#drawstringutf8","text":"","title":"Draw\u00b7String\u00b7UTF8 ()"},{"location":"Font/#getbaselineheight","text":"","title":"Get\u00b7Baseline\u00b7Height ()"},{"location":"Font/#getcharacterwidth","text":"","title":"Get\u00b7Character\u00b7Width ()"},{"location":"Font/#getlineheight","text":"","title":"Get\u00b7Line\u00b7Height ()"},{"location":"Font/#getstringwidth","text":"","title":"Get\u00b7String\u00b7Width ()"},{"location":"Font/#getstringwidthutf8","text":"","title":"Get\u00b7String\u00b7Width\u00b7UTF8 ()"},{"location":"Font/#isloaded","text":"","title":"Is\u00b7Loaded ()"},{"location":"Font/#load","text":"","title":"Load ()"},{"location":"Font/#setmissingcharacter","text":"","title":"Set\u00b7Missing\u00b7Character ()"},{"location":"Font/#unload","text":"","title":"Unload ()"},{"location":"Game/","text":"Class \"Game\" \u2693\ufe0e Constructors \u2693\ufe0e Game () \u2693\ufe0e Game Game ( ) \u2693\ufe0e Returns a Game object. Example Code Example usage: 1 2 Game (): IsPaused () --returns true if the game is paused Functions \u2693\ufe0e Add\u00b7Devil\u00b7Room\u00b7Deal () \u2693\ufe0e void AddDevilRoomDeal ( ) \u2693\ufe0e Add\u00b7Encountered\u00b7Boss () \u2693\ufe0e void AddEncounteredBoss ( EntityType Boss, int Variant ) \u2693\ufe0e Add\u00b7Pixelation () \u2693\ufe0e void AddPixelation ( int Duration ) \u2693\ufe0e Triggers the effect of the \"retro vision\" pill. Add\u00b7Stage\u00b7Without\u00b7Damage () \u2693\ufe0e void AddStageWithoutDamage ( ) \u2693\ufe0e Increases the ingame counter, that keeps track of the stages you cleared without taking damage. (useful for Devil deal manipulations) Add\u00b7Stage\u00b7Without\u00b7Hearts\u00b7Picked () \u2693\ufe0e void AddStageWithoutHeartsPicked ( ) \u2693\ufe0e Increases the ingame counter, that keeps track of stages you cleared without picking up hearts. Add\u00b7Treasure\u00b7Rooms\u00b7Visited () \u2693\ufe0e void AddTreasureRoomsVisited ( ) \u2693\ufe0e Bomb\u00b7Damage () \u2693\ufe0e void BombDamage ( Vector Position, float Damage, float Radius, boolean LineCheck, Entity Source, int TearFlags, int DamageFlags, boolean DamageSource ) \u2693\ufe0e Bomb\u00b7Explosion\u00b7Effects () \u2693\ufe0e void BombExplosionEffects ( Vector Position, float Damage, int TearFlags, Color Color, Entity Source, float RadiusMult, boolean LineCheck, boolean DamageSource ) \u2693\ufe0e The complete bomb explosion package: Do damage, spawn boomgraphics, and apply tearflag-based effects. Bomb\u00b7Tearflag\u00b7Effects () \u2693\ufe0e void BombTearflagEffects ( Vector Position, float Radius, int TearFlags, Entity Source ) \u2693\ufe0e Does bomb-exclusive special effects. Butter\u00b7Bean\u00b7Fart () \u2693\ufe0e void ButterBeanFart ( Vector Position, float Radius, Entity Source, boolean ShowEffect ) \u2693\ufe0e Change\u00b7Room () \u2693\ufe0e void ChangeRoom ( int RoomIndex ) \u2693\ufe0e Charm\u00b7Fart () \u2693\ufe0e void CharmFart ( Vector Position, float Radius, Entity Source ) \u2693\ufe0e Clear\u00b7Donation\u00b7Mod\u00b7Angel () \u2693\ufe0e void ClearDonationModAngel ( ) \u2693\ufe0e Clear\u00b7Donation\u00b7Mod\u00b7Greed () \u2693\ufe0e void ClearDonationModGreed ( ) \u2693\ufe0e Clear\u00b7Stages\u00b7Without\u00b7Damage () \u2693\ufe0e void ClearStagesWithoutDamage ( ) \u2693\ufe0e Sets the counter for stages cleared without damage to 0. Clear\u00b7Stages\u00b7Without\u00b7Hearts\u00b7Picked () \u2693\ufe0e void ClearStagesWithoutHeartsPicked ( ) \u2693\ufe0e Sets the counter for stages cleared without picking up hearts to 0. Darken () \u2693\ufe0e void Darken ( float Darkness, int Timeout ) \u2693\ufe0e Donate\u00b7Angel () \u2693\ufe0e void DonateAngel ( int Donate ) \u2693\ufe0e Donate\u00b7Greed () \u2693\ufe0e void DonateGreed ( int Donate ) \u2693\ufe0e End () \u2693\ufe0e void End ( Ending Ending ) \u2693\ufe0e Fadein () \u2693\ufe0e void Fadein ( float Speed ) \u2693\ufe0e Fadeout () \u2693\ufe0e void Fadeout ( float Speed, FadeoutTarget Target ) \u2693\ufe0e Fart () \u2693\ufe0e void Fart ( Vector Position, float Radius, Entity Source, float FartScale, int FartSubType ) \u2693\ufe0e Finish\u00b7Challenge () \u2693\ufe0e void FinishChallenge ( ) \u2693\ufe0e Get\u00b7Ambush () \u2693\ufe0e Ambush GetAmbush ( ) \u2693\ufe0e Get\u00b7Darkness\u00b7Modifier () \u2693\ufe0e float GetDarknessModifier ( ) \u2693\ufe0e Get\u00b7Devil\u00b7Room\u00b7Deals () \u2693\ufe0e int GetDevilRoomDeals ( ) \u2693\ufe0e Get\u00b7Donation\u00b7Mod\u00b7Angel () \u2693\ufe0e int GetDonationModAngel ( ) \u2693\ufe0e Get the value that indicates the angel-counter of a shop-donation maschine. This Stat increases everytime you donate to a shop. A higher number grants a few advantages. Get\u00b7Donation\u00b7Mod\u00b7Greed () \u2693\ufe0e int GetDonationModGreed ( ) \u2693\ufe0e Get\u00b7Font () \u2693\ufe0e Font GetFont ( ) \u2693\ufe0e Get\u00b7Frame\u00b7Count () \u2693\ufe0e int GetFrameCount ( ) \u2693\ufe0e Returns the number of frames the gameplay is actively running. Pauses are therefore not included! 1 second equals 30 frames. This function therefore works drastically different than Isaac . GetFrameCount () Example Code This code returns hours, minutes, seconds, and milliseconds of the game running actively: 1 2 3 4 5 local curTime = Game (): GetFrameCount () local msecs = curTime % 30 * ( 10 / 3 ) -- turns the millisecond value range from [0 to 30] to [0 to 100] local secs = math.floor ( curTime / 30 ) % 60 local mins = math.floor ( curTime / 30 / 60 ) % 60 local hours = math.floor ( curTime / 30 / 60 / 60 ) % 60 Get\u00b7Greed\u00b7Boss\u00b7Wave\u00b7Num () \u2693\ufe0e int GetGreedBossWaveNum ( ) \u2693\ufe0e Get\u00b7Greed\u00b7Waves\u00b7Num () \u2693\ufe0e int GetGreedWavesNum ( ) \u2693\ufe0e Get\u00b7Item\u00b7History () \u2693\ufe0e History GetItemHistory ( ) \u2693\ufe0e Get\u00b7Item\u00b7Overlay () \u2693\ufe0e ItemOverlay GetItemOverlay ( ) \u2693\ufe0e Get\u00b7Item\u00b7Pool () \u2693\ufe0e ItemPool GetItemPool ( ) \u2693\ufe0e Level\u00b7Stage () \u2693\ufe0e LevelStage GetLastDevilRoomStage ( ) \u2693\ufe0e Notes Since it returns UserData, this function is unusable and therefore broken. Get\u00b7Last\u00b7Level\u00b7With\u00b7Damage () \u2693\ufe0e LevelStage GetLastLevelWithDamage ( ) \u2693\ufe0e Get\u00b7Last\u00b7Level\u00b7Without\u00b7Half\u00b7Hp () \u2693\ufe0e LevelStage GetLastLevelWithoutHalfHp ( ) \u2693\ufe0e Get\u00b7Level () \u2693\ufe0e Level GetLevel ( ) \u2693\ufe0e Get\u00b7Nearest\u00b7Player () \u2693\ufe0e EntityPlayer GetNearestPlayer ( Vector Pos ) \u2693\ufe0e Get\u00b7Num\u00b7Encountered\u00b7Bosses () \u2693\ufe0e int GetNumEncounteredBosses ( ) \u2693\ufe0e Get\u00b7Num\u00b7Players () \u2693\ufe0e int GetNumPlayers ( ) \u2693\ufe0e Get\u00b7Player () \u2693\ufe0e EntityPlayer GetPlayer ( int Index ) \u2693\ufe0e Get\u00b7Random\u00b7Player () \u2693\ufe0e EntityPlayer GetRandomPlayer ( Vector Pos, float Radius ) \u2693\ufe0e Get\u00b7Room () \u2693\ufe0e Room GetRoom ( ) \u2693\ufe0e Get\u00b7Screen\u00b7Shake\u00b7Countdown () \u2693\ufe0e int GetScreenShakeCountdown ( ) \u2693\ufe0e Get\u00b7Seeds () \u2693\ufe0e Seeds GetSeeds ( ) \u2693\ufe0e Get\u00b7Stages\u00b7Without\u00b7Damage () \u2693\ufe0e int GetStagesWithoutDamage ( ) \u2693\ufe0e Get\u00b7Stages\u00b7Without\u00b7Hearts\u00b7Picked () \u2693\ufe0e int GetStagesWithoutHeartsPicked ( ) \u2693\ufe0e Get\u00b7State\u00b7Flag () \u2693\ufe0e boolean GetStateFlag ( StateFlag StateFlag ) \u2693\ufe0e Get\u00b7Target\u00b7Darkness () \u2693\ufe0e float GetTargetDarkness ( ) \u2693\ufe0e Get\u00b7Treasure\u00b7Room\u00b7Visit\u00b7Count () \u2693\ufe0e int GetTreasureRoomVisitCount ( ) \u2693\ufe0e Get\u00b7Victory\u00b7Lap () \u2693\ufe0e int GetVictoryLap ( ) \u2693\ufe0e Has\u00b7Encountered\u00b7Boss () \u2693\ufe0e boolean HasEncounteredBoss ( EntityType Boss, int Variant ) \u2693\ufe0e Has\u00b7Hallucination () \u2693\ufe0e int HasHallucination ( ) \u2693\ufe0e Is\u00b7Greed\u00b7Mode () \u2693\ufe0e boolean IsGreedMode ( ) \u2693\ufe0e Is\u00b7Paused () \u2693\ufe0e boolean IsPaused ( ) \u2693\ufe0e Returns true, if the game is in a state, where the player is unable to input any thing or the game logic is paused. This includes hiving the pause menu opened, being in room transitions/cutscenes or while displaying a \"big book\" animation. Move\u00b7To\u00b7Random\u00b7Room () \u2693\ufe0e void MoveToRandomRoom ( boolean IAmErrorRoom, int Seed ) \u2693\ufe0e Next\u00b7Victory\u00b7Lap () \u2693\ufe0e void NextVictoryLap ( ) \u2693\ufe0e Render () \u2693\ufe0e void Render ( ) \u2693\ufe0e Reroll\u00b7Enemy () \u2693\ufe0e boolean RerollEnemy ( Entity e ) \u2693\ufe0e Reroll\u00b7Level\u00b7Collectibles () \u2693\ufe0e void RerollLevelCollectibles ( ) \u2693\ufe0e Reroll\u00b7Level\u00b7Pickups () \u2693\ufe0e void RerollLevelPickups ( int Seed ) \u2693\ufe0e Set\u00b7Last\u00b7Devil\u00b7Room\u00b7Stage () \u2693\ufe0e void SetLastDevilRoomStage ( LevelStage Stage ) \u2693\ufe0e Set\u00b7Last\u00b7Level\u00b7With\u00b7Damage () \u2693\ufe0e void SetLastLevelWithDamage ( LevelStage Stage ) \u2693\ufe0e Set\u00b7Last\u00b7Level\u00b7Without\u00b7Half\u00b7Hp () \u2693\ufe0e void SetLastLevelWithoutHalfHp ( LevelStage Stage ) \u2693\ufe0e Set\u00b7State\u00b7Flag () \u2693\ufe0e void SetStateFlag ( StateFlag StateFlag, boolean Val ) \u2693\ufe0e Shake\u00b7Screen () \u2693\ufe0e void ShakeScreen ( int Timeout ) \u2693\ufe0e Show\u00b7Fortune () \u2693\ufe0e void ShowFortune ( ) \u2693\ufe0e Show\u00b7Hallucination () \u2693\ufe0e void ShowHallucination ( int FrameCount, int HallucinationBackdrop ) \u2693\ufe0e Plays the Delirium animation (Static noise intersected with past gameplay fotage), which will also change the background of the current room. Example Code This code emulated the effect of this function by hijacking the Delirious item effect 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 local usagetime = - 1 -- stores the last time the effect was called. -- call this function to play the Hallucination effect function playHallucination () local player = Isaac . GetPlayer ( 0 ) usagetime = Game (). TimeCounter player : UseActiveItem ( 510 , false , false , false , false ) -- use the delirious item without applying the costume player : GetEffects (): RemoveCollectibleEffect ( 510 ) -- remove any unwanted side effects of the item usage end -- Removes all spawned NPC entities when activating the function function mod : onFriendlyInit ( npc ) if Game (). TimeCounter - usagetime == 0 then -- only remove enemies that spawned when the effect was called! npc : Remove () end end mod : AddCallback ( ModCallbacks . MC_POST_NPC_INIT , mod . onFriendlyInit ) Bugs This function does not work and will crash your game on use! Show\u00b7Rule () \u2693\ufe0e void ShowRule ( ) \u2693\ufe0e Spawn () \u2693\ufe0e Entity Spawn ( EntityType Type, int Variant, Vector Position, Vector Velocity, Entity Spawner, int SubType, int Seed ) \u2693\ufe0e The game has two spawn functions, Game():Spawn() (this one) and Isaac.Spawn() . If you need to spawn something with a specific seed, then you use Game():Spawn() . If you need to spawn something with a randomly generated seed, then use Isaac.Spawn() . Most of the time, you will probably want to use Isaac.Spawn() . Example Code This code spawns a Leech with specific seed. 1 2 3 4 5 6 7 8 9 Game (): Spawn ( EntityType . ENTITY_LEECH , -- Type 0 , -- Variant Game (): GetRoom (): GetCenterPos (), -- Position Vector ( 0 , 0 ), -- Velocity nil , -- Parent 0 , -- SubType Game (): GetRoom (): GetSpawnSeed () -- Seed (the \"GetSpawnSeed()\" function gets a reproducible seed based on the room, e.g. \"2496979501\") ) Spawn\u00b7Entity\u00b7Desc () \u2693\ufe0e EntityNPC SpawnEntityDesc ( Entity::EntityDesc desc, Vector Position, Entity Spawner ) \u2693\ufe0e Spawn\u00b7Particles () \u2693\ufe0e void SpawnParticles ( Vector Pos, EntityEffect::Variant ParticleType, int NumParticles, float Speed, Color Color, float Height ) \u2693\ufe0e Start\u00b7Room\u00b7Transition () \u2693\ufe0e void StartRoomTransition ( int RoomIndex, Direction Direction, RoomTransition::Animation Animation ) \u2693\ufe0e Notes Available Animation types (Discovered by \"ilise rose\" (@yatboim)): 0: (Default) Standard transition, sweeps the room in from a direction 1: (Fade) Fade to black transition, like its used for the \"goto\" - console command 2: (Stage) Pixel out transition, like used for crawlspaces and the trapdoor at the end of floors 3: (Teleport) teleport transition, isaac teleports out of the current room and into the next 5: (Ankh) Same as standard transition 6: (Dead Cat) Same as standard transition 7: (1Up) Same as standard transition 8: (Guppys Collar) Same as standard transition 9: (Judas Shadow) Same as standard transition 10: (Lazarus Rags) Same as standard transition 12: (Glowing Hourglass) Same as standard transition 13: (D7) Same as standard transition 14: (Missing Poster) Same as standard transition Bugs The Direction variable is completely ignored at all times, with the game instead calculating the direction between the two rooms itself for the animation. The two rooms are the current room and the room of the RoomIndex. It has no impact on the doors either. Start\u00b7Stage\u00b7Transition () \u2693\ufe0e void StartStageTransition ( boolean SameStage, StageTransition::Animation Animation ) \u2693\ufe0e Starts a transition animation like it`s playing when entering a trapdoor to switch between stages. Stage Transition types: 0: Standard transition. Removes the playermodel before the pixel fadeout. Then plays the Stage Nightmare animation. The player starts in fetal position after the transition. 1: Standard transition with pixel fadein/out, nightmare cutscene but the player model doesnt get removed and starts in the normal standing position after the transition. >2: Same as 0 Update () \u2693\ufe0e void Update ( ) \u2693\ufe0e Update\u00b7Strange\u00b7Attractor () \u2693\ufe0e void UpdateStrangeAttractor ( Vector Position ) \u2693\ufe0e Variables \u2693\ufe0e Blue\u00b7Womb\u00b7Par\u00b7Time \u2693\ufe0e int BlueWombParTime \u2693\ufe0e Boss\u00b7Rush\u00b7Par\u00b7Time \u2693\ufe0e int BossRushParTime \u2693\ufe0e Number of frames of game time. Challenge \u2693\ufe0e Challenge Challenge \u2693\ufe0e Difficulty \u2693\ufe0e Difficulty Difficulty \u2693\ufe0e Screen\u00b7Shake\u00b7Offset \u2693\ufe0e Vector ScreenShakeOffset \u2693\ufe0e Time\u00b7Counter \u2693\ufe0e int TimeCounter \u2693\ufe0e same as FrameCounter but can be modified, mostly used for timed events (bossrush, daily, ...) and not for timestepping","title":"Game"},{"location":"Game/#class-game","text":"","title":"Class \"Game\""},{"location":"Game/#constructors","text":"","title":"Constructors"},{"location":"Game/#game","text":"","title":"Game ()"},{"location":"Game/#functions","text":"","title":"Functions"},{"location":"Game/#adddevilroomdeal","text":"","title":"Add\u00b7Devil\u00b7Room\u00b7Deal ()"},{"location":"Game/#addencounteredboss","text":"","title":"Add\u00b7Encountered\u00b7Boss ()"},{"location":"Game/#addpixelation","text":"","title":"Add\u00b7Pixelation ()"},{"location":"Game/#addstagewithoutdamage","text":"","title":"Add\u00b7Stage\u00b7Without\u00b7Damage ()"},{"location":"Game/#addstagewithoutheartspicked","text":"","title":"Add\u00b7Stage\u00b7Without\u00b7Hearts\u00b7Picked ()"},{"location":"Game/#addtreasureroomsvisited","text":"","title":"Add\u00b7Treasure\u00b7Rooms\u00b7Visited ()"},{"location":"Game/#bombdamage","text":"","title":"Bomb\u00b7Damage ()"},{"location":"Game/#bombexplosioneffects","text":"","title":"Bomb\u00b7Explosion\u00b7Effects ()"},{"location":"Game/#bombtearflageffects","text":"","title":"Bomb\u00b7Tearflag\u00b7Effects ()"},{"location":"Game/#butterbeanfart","text":"","title":"Butter\u00b7Bean\u00b7Fart ()"},{"location":"Game/#changeroom","text":"","title":"Change\u00b7Room ()"},{"location":"Game/#charmfart","text":"","title":"Charm\u00b7Fart ()"},{"location":"Game/#cleardonationmodangel","text":"","title":"Clear\u00b7Donation\u00b7Mod\u00b7Angel ()"},{"location":"Game/#cleardonationmodgreed","text":"","title":"Clear\u00b7Donation\u00b7Mod\u00b7Greed ()"},{"location":"Game/#clearstageswithoutdamage","text":"","title":"Clear\u00b7Stages\u00b7Without\u00b7Damage ()"},{"location":"Game/#clearstageswithoutheartspicked","text":"","title":"Clear\u00b7Stages\u00b7Without\u00b7Hearts\u00b7Picked ()"},{"location":"Game/#darken","text":"","title":"Darken ()"},{"location":"Game/#donateangel","text":"","title":"Donate\u00b7Angel ()"},{"location":"Game/#donategreed","text":"","title":"Donate\u00b7Greed ()"},{"location":"Game/#end","text":"","title":"End ()"},{"location":"Game/#fadein","text":"","title":"Fadein ()"},{"location":"Game/#fadeout","text":"","title":"Fadeout ()"},{"location":"Game/#fart","text":"","title":"Fart ()"},{"location":"Game/#finishchallenge","text":"","title":"Finish\u00b7Challenge ()"},{"location":"Game/#getambush","text":"","title":"Get\u00b7Ambush ()"},{"location":"Game/#getdarknessmodifier","text":"","title":"Get\u00b7Darkness\u00b7Modifier ()"},{"location":"Game/#getdevilroomdeals","text":"","title":"Get\u00b7Devil\u00b7Room\u00b7Deals ()"},{"location":"Game/#getdonationmodangel","text":"","title":"Get\u00b7Donation\u00b7Mod\u00b7Angel ()"},{"location":"Game/#getdonationmodgreed","text":"","title":"Get\u00b7Donation\u00b7Mod\u00b7Greed ()"},{"location":"Game/#getfont","text":"","title":"Get\u00b7Font ()"},{"location":"Game/#getframecount","text":"","title":"Get\u00b7Frame\u00b7Count ()"},{"location":"Game/#getgreedbosswavenum","text":"","title":"Get\u00b7Greed\u00b7Boss\u00b7Wave\u00b7Num ()"},{"location":"Game/#getgreedwavesnum","text":"","title":"Get\u00b7Greed\u00b7Waves\u00b7Num ()"},{"location":"Game/#getitemhistory","text":"","title":"Get\u00b7Item\u00b7History ()"},{"location":"Game/#getitemoverlay","text":"","title":"Get\u00b7Item\u00b7Overlay ()"},{"location":"Game/#getitempool","text":"","title":"Get\u00b7Item\u00b7Pool ()"},{"location":"Game/#levelstage","text":"","title":"Level\u00b7Stage ()"},{"location":"Game/#getlastlevelwithdamage","text":"","title":"Get\u00b7Last\u00b7Level\u00b7With\u00b7Damage ()"},{"location":"Game/#getlastlevelwithouthalfhp","text":"","title":"Get\u00b7Last\u00b7Level\u00b7Without\u00b7Half\u00b7Hp ()"},{"location":"Game/#getlevel","text":"","title":"Get\u00b7Level ()"},{"location":"Game/#getnearestplayer","text":"","title":"Get\u00b7Nearest\u00b7Player ()"},{"location":"Game/#getnumencounteredbosses","text":"","title":"Get\u00b7Num\u00b7Encountered\u00b7Bosses ()"},{"location":"Game/#getnumplayers","text":"","title":"Get\u00b7Num\u00b7Players ()"},{"location":"Game/#getplayer","text":"","title":"Get\u00b7Player ()"},{"location":"Game/#getrandomplayer","text":"","title":"Get\u00b7Random\u00b7Player ()"},{"location":"Game/#getroom","text":"","title":"Get\u00b7Room ()"},{"location":"Game/#getscreenshakecountdown","text":"","title":"Get\u00b7Screen\u00b7Shake\u00b7Countdown ()"},{"location":"Game/#getseeds","text":"","title":"Get\u00b7Seeds ()"},{"location":"Game/#getstageswithoutdamage","text":"","title":"Get\u00b7Stages\u00b7Without\u00b7Damage ()"},{"location":"Game/#getstageswithoutheartspicked","text":"","title":"Get\u00b7Stages\u00b7Without\u00b7Hearts\u00b7Picked ()"},{"location":"Game/#getstateflag","text":"","title":"Get\u00b7State\u00b7Flag ()"},{"location":"Game/#gettargetdarkness","text":"","title":"Get\u00b7Target\u00b7Darkness ()"},{"location":"Game/#gettreasureroomvisitcount","text":"","title":"Get\u00b7Treasure\u00b7Room\u00b7Visit\u00b7Count ()"},{"location":"Game/#getvictorylap","text":"","title":"Get\u00b7Victory\u00b7Lap ()"},{"location":"Game/#hasencounteredboss","text":"","title":"Has\u00b7Encountered\u00b7Boss ()"},{"location":"Game/#hashallucination","text":"","title":"Has\u00b7Hallucination ()"},{"location":"Game/#isgreedmode","text":"","title":"Is\u00b7Greed\u00b7Mode ()"},{"location":"Game/#ispaused","text":"","title":"Is\u00b7Paused ()"},{"location":"Game/#movetorandomroom","text":"","title":"Move\u00b7To\u00b7Random\u00b7Room ()"},{"location":"Game/#nextvictorylap","text":"","title":"Next\u00b7Victory\u00b7Lap ()"},{"location":"Game/#render","text":"","title":"Render ()"},{"location":"Game/#rerollenemy","text":"","title":"Reroll\u00b7Enemy ()"},{"location":"Game/#rerolllevelcollectibles","text":"","title":"Reroll\u00b7Level\u00b7Collectibles ()"},{"location":"Game/#rerolllevelpickups","text":"","title":"Reroll\u00b7Level\u00b7Pickups ()"},{"location":"Game/#setlastdevilroomstage","text":"","title":"Set\u00b7Last\u00b7Devil\u00b7Room\u00b7Stage ()"},{"location":"Game/#setlastlevelwithdamage","text":"","title":"Set\u00b7Last\u00b7Level\u00b7With\u00b7Damage ()"},{"location":"Game/#setlastlevelwithouthalfhp","text":"","title":"Set\u00b7Last\u00b7Level\u00b7Without\u00b7Half\u00b7Hp ()"},{"location":"Game/#setstateflag","text":"","title":"Set\u00b7State\u00b7Flag ()"},{"location":"Game/#shakescreen","text":"","title":"Shake\u00b7Screen ()"},{"location":"Game/#showfortune","text":"","title":"Show\u00b7Fortune ()"},{"location":"Game/#showhallucination","text":"","title":"Show\u00b7Hallucination ()"},{"location":"Game/#showrule","text":"","title":"Show\u00b7Rule ()"},{"location":"Game/#spawn","text":"","title":"Spawn ()"},{"location":"Game/#spawnentitydesc","text":"","title":"Spawn\u00b7Entity\u00b7Desc ()"},{"location":"Game/#spawnparticles","text":"","title":"Spawn\u00b7Particles ()"},{"location":"Game/#startroomtransition","text":"","title":"Start\u00b7Room\u00b7Transition ()"},{"location":"Game/#startstagetransition","text":"","title":"Start\u00b7Stage\u00b7Transition ()"},{"location":"Game/#update","text":"","title":"Update ()"},{"location":"Game/#updatestrangeattractor","text":"","title":"Update\u00b7Strange\u00b7Attractor ()"},{"location":"Game/#variables","text":"","title":"Variables"},{"location":"Game/#bluewombpartime","text":"","title":"Blue\u00b7Womb\u00b7Par\u00b7Time"},{"location":"Game/#bossrushpartime","text":"","title":"Boss\u00b7Rush\u00b7Par\u00b7Time"},{"location":"Game/#challenge","text":"","title":"Challenge"},{"location":"Game/#difficulty","text":"","title":"Difficulty"},{"location":"Game/#screenshakeoffset","text":"","title":"Screen\u00b7Shake\u00b7Offset"},{"location":"Game/#timecounter","text":"","title":"Time\u00b7Counter"},{"location":"GlobalFunctions/","text":"Class \"Global Functions\" \u2693\ufe0e Constructors \u2693\ufe0e Color () \u2693\ufe0e Color Color ( float R, float G, float B, float A, int RO, int GO, int BO ) \u2693\ufe0e Constructor for the \" Color \" class. When using the Font class, use KColor() instead. Colors are made of three separate components, tint, colorize and offset. Tint acts like a color multiplicator. Offset is a color which is added after the tint is applied. Colorize is complicated. See the SetColorize () function for a detailed description. R, G, B and A accept numbers between 0 and 1. RO, GO and BO accept numbers between -255 and 255. Entity\u00b7Ptr () \u2693\ufe0e EntityPtr EntityPtr ( Entity ) \u2693\ufe0e Entity\u00b7Ref () \u2693\ufe0e EntityRef EntityRef ( Entity ) \u2693\ufe0e Font () \u2693\ufe0e Font Font ( ) \u2693\ufe0e Constructor for the \" Font \" class. Example Code Example usage. 1 2 3 local f = Font () -- init font object f : Load ( \"font/terminus.fnt\" ) -- load a font into the font object f : DrawString ( \"Hello World!\" , 60 , 50 , KColor ( 1 , 1 , 1 , 1 ), 0 , true ) -- render string with loaded font on position 60x50y Game () \u2693\ufe0e Game Game ( ) \u2693\ufe0e Returns a Game object. Example Code Example usage: 1 2 Game (): IsPaused () --returns true if the game is paused KColor () \u2693\ufe0e KColor KColor ( float red, float green, float blue, float alpha ) \u2693\ufe0e Constructor for the \" KColor \" class. Notes: \" KColor \" is only used in the Font class. For most other situations you will need to use the Color() constructor. Music\u00b7Manager () \u2693\ufe0e MusicManager MusicManager ( ) \u2693\ufe0e Returns a MusicManager object. Example Code Example usage: 1 MusicManager (): Disable () Projectile\u00b7Params () \u2693\ufe0e ProjectileParams ProjectileParams ( ) \u2693\ufe0e Register\u00b7Mod () \u2693\ufe0e Mod Reference RegisterMod ( string modName, int apiVersion ) \u2693\ufe0e Method to define a mod in the game. This needs to be defined to handle callbacks and save data in your mod. Returns a table which acts as the Mod Reference . Example Code 1 local yourMod = RegisterMod ( \"someMod\" , 1 ) RNG () \u2693\ufe0e RNG RNG ( ) \u2693\ufe0e Sprite () \u2693\ufe0e Sprite Sprite ( ) \u2693\ufe0e SFXManager () \u2693\ufe0e SFXManager SFXManager ( ) \u2693\ufe0e Returns a SFXManager object. Example Code Example usage: 1 SFXManager (): Stop ( SoundEffect . SOUND_1UP ) Vector () \u2693\ufe0e Vector Vector ( float , float ) \u2693\ufe0e Functions \u2693\ufe0e Random () \u2693\ufe0e int Random ( ) \u2693\ufe0e Returns a random integer. (0 to 2^32) Random\u00b7Vector () \u2693\ufe0e Vector RandomVector ( ) \u2693\ufe0e Returns a random vector with length 1. Multiply this vector by a number for larger random vectors. Get\u00b7Ptr\u00b7Hash () \u2693\ufe0e int GetPtrHash ( Objectobject ) \u2693\ufe0e Returns a hash-value of the pointer given as an input value. Valid inputs are any Isaac object, including Entity , Room , RNG , Sprite , Game etc. It can be used to easily compare two entities, making equality checks very easy. Example: If you spawn a certain entity, save it in a variable and then compare it to the entity parameter in MC_ENTITY_TAKE_DMG , this comparison will never be true even if both variables refer to the exact same entity in the game. GetPtrHash () turns pointer into a fixed number, which makes comparisons easier. Example Code Example on check if two entities saved in different variables are the same. 1 2 3 4 5 6 7 8 -- don't do it like this if entity1 == entity2 then -- this will always be false, because two different references on a pointer are not equal end -- use GetPtrHash() to compare them if GetPtrHash ( entity1 ) == GetPtrHash ( entity2 ) then -- this will be true, when the pointer of both variables point to the same object. end","title":"Global Functions"},{"location":"GlobalFunctions/#class-global-functions","text":"","title":"Class \"Global Functions\""},{"location":"GlobalFunctions/#constructors","text":"","title":"Constructors"},{"location":"GlobalFunctions/#color","text":"","title":"Color ()"},{"location":"GlobalFunctions/#entityptr","text":"","title":"Entity\u00b7Ptr ()"},{"location":"GlobalFunctions/#entityref","text":"","title":"Entity\u00b7Ref ()"},{"location":"GlobalFunctions/#font","text":"","title":"Font ()"},{"location":"GlobalFunctions/#game","text":"","title":"Game ()"},{"location":"GlobalFunctions/#kcolor","text":"","title":"KColor ()"},{"location":"GlobalFunctions/#musicmanager","text":"","title":"Music\u00b7Manager ()"},{"location":"GlobalFunctions/#projectileparams","text":"","title":"Projectile\u00b7Params ()"},{"location":"GlobalFunctions/#registermod","text":"","title":"Register\u00b7Mod ()"},{"location":"GlobalFunctions/#rng","text":"","title":"RNG ()"},{"location":"GlobalFunctions/#sprite","text":"","title":"Sprite ()"},{"location":"GlobalFunctions/#sfxmanager","text":"","title":"SFXManager ()"},{"location":"GlobalFunctions/#vector","text":"","title":"Vector ()"},{"location":"GlobalFunctions/#functions","text":"","title":"Functions"},{"location":"GlobalFunctions/#random","text":"","title":"Random ()"},{"location":"GlobalFunctions/#randomvector","text":"","title":"Random\u00b7Vector ()"},{"location":"GlobalFunctions/#getptrhash","text":"","title":"Get\u00b7Ptr\u00b7Hash ()"},{"location":"GridEntity/","text":"Class \"GridEntity\" \u2693\ufe0e Children Classes \u2693\ufe0e GridEntityDoor , GridEntityPit , GridEntityPoop , GridEntityPressurePlate , GridEntityRock , GridEntitySpikes , GridEntityTNT Functions \u2693\ufe0e Destroy () \u2693\ufe0e boolean Destroy ( boolean Immediate ) \u2693\ufe0e Get\u00b7Grid\u00b7Index () \u2693\ufe0e int GetGridIndex ( ) \u2693\ufe0e Get\u00b7Save\u00b7State () \u2693\ufe0e GridEntityDesc GetSaveState ( ) \u2693\ufe0e Get\u00b7Type () \u2693\ufe0e GridEntityType GetType ( ) \u2693\ufe0e Get\u00b7Variant () \u2693\ufe0e int GetVariant ( ) \u2693\ufe0e Hurt () \u2693\ufe0e boolean Hurt ( int Damage ) \u2693\ufe0e Init () \u2693\ufe0e void Init ( int Seed ) \u2693\ufe0e Post\u00b7Init () \u2693\ufe0e void PostInit ( ) \u2693\ufe0e Render () \u2693\ufe0e void Render ( Vector Offset ) \u2693\ufe0e Set\u00b7Type () \u2693\ufe0e void SetType ( GridEntityType Type ) \u2693\ufe0e Set\u00b7Variant () \u2693\ufe0e void SetVariant ( int Variant ) \u2693\ufe0e To\u00b7Door () \u2693\ufe0e GridEntityDoor ToDoor ( ) \u2693\ufe0e To\u00b7Pit () \u2693\ufe0e GridEntityPit ToPit ( ) \u2693\ufe0e To\u00b7Poop () \u2693\ufe0e GridEntityPoop ToPoop ( ) \u2693\ufe0e To\u00b7Pressure\u00b7Plate () \u2693\ufe0e GridEntityPressurePlate ToPressurePlate ( ) \u2693\ufe0e To\u00b7Rock () \u2693\ufe0e GridEntityRock ToRock ( ) \u2693\ufe0e To\u00b7Spikes () \u2693\ufe0e GridEntitySpikes ToSpikes ( ) \u2693\ufe0e To\u00b7TNT () \u2693\ufe0e GridEntityTNT ToTNT ( ) \u2693\ufe0e Update () \u2693\ufe0e void Update ( ) \u2693\ufe0e Variables \u2693\ufe0e Collision\u00b7Class \u2693\ufe0e CollisionClass CollisionClass \u2693\ufe0e Desc \u2693\ufe0e GridEntityDesc Desc \u2693\ufe0e Position \u2693\ufe0e Vector Position \u2693\ufe0e Returns the position of the grid cell's center point RNG \u2693\ufe0e RNG RNG \u2693\ufe0e Sprite \u2693\ufe0e Sprite Sprite \u2693\ufe0e State \u2693\ufe0e int State \u2693\ufe0e Var\u00b7Data \u2693\ufe0e int VarData \u2693\ufe0e A Variable that stores some entity-specific data. The content can have completely different effects for different GridEntities. Example Code This code spawns a functioning Void Portal into the center of the room. This will teleport you to the floor \"The Void\" and will have the same appearance as the vanilla portal: 1 2 3 4 5 6 7 8 9 10 11 12 -- get grid in center of room local spawnPos = Game (): GetRoom (): GetGridPosition ( 67 ) -- spawn Trapdoor local portalEntity = Isaac . GridSpawn ( GridEntityType . GRID_TRAPDOOR , 0 , spawnPos , true ) -- set VoidPortal behavior (Teleport to void and Pulse effect shader) portalEntity . VarData = 1 -- Replace spritesheet of trapdoor to look like a Void Portal local sprite = portalEntity . Sprite sprite : ReplaceSpritesheet ( 0 , \"gfx/grid/voidtrapdoor.png\" ) sprite : LoadGraphics () sprite : Load ( \"gfx/grid/voidtrapdoor.anm2\" , true ) portalEntity . Sprite = sprite","title":"GridEntity"},{"location":"GridEntity/#class-gridentity","text":"","title":"Class \"GridEntity\""},{"location":"GridEntity/#children-classes","text":"GridEntityDoor , GridEntityPit , GridEntityPoop , GridEntityPressurePlate , GridEntityRock , GridEntitySpikes , GridEntityTNT","title":"Children Classes"},{"location":"GridEntity/#functions","text":"","title":"Functions"},{"location":"GridEntity/#destroy","text":"","title":"Destroy ()"},{"location":"GridEntity/#getgridindex","text":"","title":"Get\u00b7Grid\u00b7Index ()"},{"location":"GridEntity/#getsavestate","text":"","title":"Get\u00b7Save\u00b7State ()"},{"location":"GridEntity/#gettype","text":"","title":"Get\u00b7Type ()"},{"location":"GridEntity/#getvariant","text":"","title":"Get\u00b7Variant ()"},{"location":"GridEntity/#hurt","text":"","title":"Hurt ()"},{"location":"GridEntity/#init","text":"","title":"Init ()"},{"location":"GridEntity/#postinit","text":"","title":"Post\u00b7Init ()"},{"location":"GridEntity/#render","text":"","title":"Render ()"},{"location":"GridEntity/#settype","text":"","title":"Set\u00b7Type ()"},{"location":"GridEntity/#setvariant","text":"","title":"Set\u00b7Variant ()"},{"location":"GridEntity/#todoor","text":"","title":"To\u00b7Door ()"},{"location":"GridEntity/#topit","text":"","title":"To\u00b7Pit ()"},{"location":"GridEntity/#topoop","text":"","title":"To\u00b7Poop ()"},{"location":"GridEntity/#topressureplate","text":"","title":"To\u00b7Pressure\u00b7Plate ()"},{"location":"GridEntity/#torock","text":"","title":"To\u00b7Rock ()"},{"location":"GridEntity/#tospikes","text":"","title":"To\u00b7Spikes ()"},{"location":"GridEntity/#totnt","text":"","title":"To\u00b7TNT ()"},{"location":"GridEntity/#update","text":"","title":"Update ()"},{"location":"GridEntity/#variables","text":"","title":"Variables"},{"location":"GridEntity/#collisionclass","text":"","title":"Collision\u00b7Class"},{"location":"GridEntity/#desc","text":"","title":"Desc"},{"location":"GridEntity/#position","text":"","title":"Position"},{"location":"GridEntity/#rng","text":"","title":"RNG"},{"location":"GridEntity/#sprite","text":"","title":"Sprite"},{"location":"GridEntity/#state","text":"","title":"State"},{"location":"GridEntity/#vardata","text":"","title":"Var\u00b7Data"},{"location":"GridEntityDesc/","text":"Class \"GridEntityDesc\" \u2693\ufe0e Variables \u2693\ufe0e Initialized \u2693\ufe0e boolean Initialized \u2693\ufe0e this is will be false when its first created Spawn\u00b7Count \u2693\ufe0e int SpawnCount \u2693\ufe0e how often this entity has been spawned Spawn\u00b7Seed \u2693\ufe0e int SpawnSeed \u2693\ufe0e State \u2693\ufe0e int State \u2693\ufe0e Type \u2693\ufe0e GridEntityType Type \u2693\ufe0e Var\u00b7Data \u2693\ufe0e int VarData \u2693\ufe0e Additional data to be stored, when State is not enought. Variable\u00b7Seed \u2693\ufe0e int VariableSeed \u2693\ufe0e this seed is will be changed based on some events Variant \u2693\ufe0e int Variant \u2693\ufe0e","title":"GridEntityDesc"},{"location":"GridEntityDesc/#class-gridentitydesc","text":"","title":"Class \"GridEntityDesc\""},{"location":"GridEntityDesc/#variables","text":"","title":"Variables"},{"location":"GridEntityDesc/#initialized","text":"","title":"Initialized"},{"location":"GridEntityDesc/#spawncount","text":"","title":"Spawn\u00b7Count"},{"location":"GridEntityDesc/#spawnseed","text":"","title":"Spawn\u00b7Seed"},{"location":"GridEntityDesc/#state","text":"","title":"State"},{"location":"GridEntityDesc/#type","text":"","title":"Type"},{"location":"GridEntityDesc/#vardata","text":"","title":"Var\u00b7Data"},{"location":"GridEntityDesc/#variableseed","text":"","title":"Variable\u00b7Seed"},{"location":"GridEntityDesc/#variant","text":"","title":"Variant"},{"location":"GridEntityDoor/","text":"Class \"GridEntityDoor\" \u2693\ufe0e Inherits from Class: \u2693\ufe0e GridEntity Functions \u2693\ufe0e Bar () \u2693\ufe0e void Bar ( ) \u2693\ufe0e Can\u00b7Blow\u00b7Open () \u2693\ufe0e boolean CanBlowOpen ( ) \u2693\ufe0e Close () \u2693\ufe0e void Close ( boolean Force ) \u2693\ufe0e Get\u00b7Sprite\u00b7Offset () \u2693\ufe0e Vector GetSpriteOffset ( ) \u2693\ufe0e Is\u00b7Busted () \u2693\ufe0e boolean IsBusted ( ) \u2693\ufe0e Is\u00b7Key\u00b7Familiar\u00b7Target () \u2693\ufe0e boolean IsKeyFamiliarTarget ( ) \u2693\ufe0e Is\u00b7Locked () \u2693\ufe0e boolean IsLocked ( ) \u2693\ufe0e Is\u00b7Open () \u2693\ufe0e boolean IsOpen ( ) \u2693\ufe0e Is\u00b7Room\u00b7Type () \u2693\ufe0e boolean IsRoomType ( RoomType Type ) \u2693\ufe0e Is\u00b7Target\u00b7Room\u00b7Arcade () \u2693\ufe0e boolean IsTargetRoomArcade ( ) \u2693\ufe0e Open () \u2693\ufe0e void Open ( ) \u2693\ufe0e Set\u00b7Locked () \u2693\ufe0e void SetLocked ( boolean Locked ) \u2693\ufe0e Set\u00b7Room\u00b7Types () \u2693\ufe0e void SetRoomTypes ( RoomType CurrentRoomType, RoomType TargetRoomType ) \u2693\ufe0e Spawn\u00b7Dust () \u2693\ufe0e void SpawnDust ( ) \u2693\ufe0e Try\u00b7Blow\u00b7Open () \u2693\ufe0e boolean TryBlowOpen ( boolean FromExplossion ) \u2693\ufe0e try to open the door by explosive force, true for success Try\u00b7Unlock () \u2693\ufe0e boolean TryUnlock ( boolean Force ) \u2693\ufe0e try to unlock the door using a key, true for success Variables \u2693\ufe0e Busted \u2693\ufe0e boolean Busted \u2693\ufe0e Close\u00b7Animation \u2693\ufe0e string CloseAnimation \u2693\ufe0e Current\u00b7Room\u00b7Type \u2693\ufe0e RoomType CurrentRoomType \u2693\ufe0e Direction \u2693\ufe0e Direction Direction \u2693\ufe0e Extra\u00b7Sprite \u2693\ufe0e Sprite ExtraSprite \u2693\ufe0e Extra\u00b7Visible \u2693\ufe0e boolean ExtraVisible \u2693\ufe0e Locked\u00b7Animation \u2693\ufe0e string LockedAnimation \u2693\ufe0e Open\u00b7Animation \u2693\ufe0e string OpenAnimation \u2693\ufe0e Open\u00b7Locked\u00b7Animation \u2693\ufe0e string OpenLockedAnimation \u2693\ufe0e Previous\u00b7State \u2693\ufe0e State PreviousState \u2693\ufe0e Previous\u00b7Variant \u2693\ufe0e Variant PreviousVariant \u2693\ufe0e Slot \u2693\ufe0e DoorSlot Slot \u2693\ufe0e Target\u00b7Room\u00b7Index \u2693\ufe0e int TargetRoomIndex \u2693\ufe0e Target\u00b7Room\u00b7Type \u2693\ufe0e RoomType TargetRoomType \u2693\ufe0e","title":"GridEntityDoor"},{"location":"GridEntityDoor/#class-gridentitydoor","text":"","title":"Class \"GridEntityDoor\""},{"location":"GridEntityDoor/#inherits-from-class","text":"GridEntity","title":"Inherits from Class:"},{"location":"GridEntityDoor/#functions","text":"","title":"Functions"},{"location":"GridEntityDoor/#bar","text":"","title":"Bar ()"},{"location":"GridEntityDoor/#canblowopen","text":"","title":"Can\u00b7Blow\u00b7Open ()"},{"location":"GridEntityDoor/#close","text":"","title":"Close ()"},{"location":"GridEntityDoor/#getspriteoffset","text":"","title":"Get\u00b7Sprite\u00b7Offset ()"},{"location":"GridEntityDoor/#isbusted","text":"","title":"Is\u00b7Busted ()"},{"location":"GridEntityDoor/#iskeyfamiliartarget","text":"","title":"Is\u00b7Key\u00b7Familiar\u00b7Target ()"},{"location":"GridEntityDoor/#islocked","text":"","title":"Is\u00b7Locked ()"},{"location":"GridEntityDoor/#isopen","text":"","title":"Is\u00b7Open ()"},{"location":"GridEntityDoor/#isroomtype","text":"","title":"Is\u00b7Room\u00b7Type ()"},{"location":"GridEntityDoor/#istargetroomarcade","text":"","title":"Is\u00b7Target\u00b7Room\u00b7Arcade ()"},{"location":"GridEntityDoor/#open","text":"","title":"Open ()"},{"location":"GridEntityDoor/#setlocked","text":"","title":"Set\u00b7Locked ()"},{"location":"GridEntityDoor/#setroomtypes","text":"","title":"Set\u00b7Room\u00b7Types ()"},{"location":"GridEntityDoor/#spawndust","text":"","title":"Spawn\u00b7Dust ()"},{"location":"GridEntityDoor/#tryblowopen","text":"","title":"Try\u00b7Blow\u00b7Open ()"},{"location":"GridEntityDoor/#tryunlock","text":"","title":"Try\u00b7Unlock ()"},{"location":"GridEntityDoor/#variables","text":"","title":"Variables"},{"location":"GridEntityDoor/#busted","text":"","title":"Busted"},{"location":"GridEntityDoor/#closeanimation","text":"","title":"Close\u00b7Animation"},{"location":"GridEntityDoor/#currentroomtype","text":"","title":"Current\u00b7Room\u00b7Type"},{"location":"GridEntityDoor/#direction","text":"","title":"Direction"},{"location":"GridEntityDoor/#extrasprite","text":"","title":"Extra\u00b7Sprite"},{"location":"GridEntityDoor/#extravisible","text":"","title":"Extra\u00b7Visible"},{"location":"GridEntityDoor/#lockedanimation","text":"","title":"Locked\u00b7Animation"},{"location":"GridEntityDoor/#openanimation","text":"","title":"Open\u00b7Animation"},{"location":"GridEntityDoor/#openlockedanimation","text":"","title":"Open\u00b7Locked\u00b7Animation"},{"location":"GridEntityDoor/#previousstate","text":"","title":"Previous\u00b7State"},{"location":"GridEntityDoor/#previousvariant","text":"","title":"Previous\u00b7Variant"},{"location":"GridEntityDoor/#slot","text":"","title":"Slot"},{"location":"GridEntityDoor/#targetroomindex","text":"","title":"Target\u00b7Room\u00b7Index"},{"location":"GridEntityDoor/#targetroomtype","text":"","title":"Target\u00b7Room\u00b7Type"},{"location":"GridEntityPit/","text":"Class \"GridEntityPit\" \u2693\ufe0e Inherits from Class: \u2693\ufe0e GridEntity Functions \u2693\ufe0e Make\u00b7Bridge () \u2693\ufe0e void MakeBridge ( ) \u2693\ufe0e Set\u00b7Ladder () \u2693\ufe0e void SetLadder ( boolean Value ) \u2693\ufe0e Update\u00b7Collision () \u2693\ufe0e void UpdateCollision ( ) \u2693\ufe0e void InitSubclass(void); Variables \u2693\ufe0e Has\u00b7Ladder \u2693\ufe0e boolean HasLadder \u2693\ufe0e","title":"GridEntityPit"},{"location":"GridEntityPit/#class-gridentitypit","text":"","title":"Class \"GridEntityPit\""},{"location":"GridEntityPit/#inherits-from-class","text":"GridEntity","title":"Inherits from Class:"},{"location":"GridEntityPit/#functions","text":"","title":"Functions"},{"location":"GridEntityPit/#makebridge","text":"","title":"Make\u00b7Bridge ()"},{"location":"GridEntityPit/#setladder","text":"","title":"Set\u00b7Ladder ()"},{"location":"GridEntityPit/#updatecollision","text":"","title":"Update\u00b7Collision ()"},{"location":"GridEntityPit/#variables","text":"","title":"Variables"},{"location":"GridEntityPit/#hasladder","text":"","title":"Has\u00b7Ladder"},{"location":"GridEntityPoop/","text":"Class \"GridEntityPoop\" \u2693\ufe0e Inherits from Class: \u2693\ufe0e GridEntity Functions \u2693\ufe0e Reduce\u00b7Spawn\u00b7Rate () \u2693\ufe0e void ReduceSpawnRate ( ) \u2693\ufe0e Respawn\u00b7Red\u00b7Poop () \u2693\ufe0e void RespawnRedPoop ( ) \u2693\ufe0e Variables \u2693\ufe0e Reduced\u00b7Spawn\u00b7Rate \u2693\ufe0e boolean ReducedSpawnRate \u2693\ufe0e Revive\u00b7Timer \u2693\ufe0e int ReviveTimer \u2693\ufe0e State\u00b7Animation \u2693\ufe0e string StateAnimation \u2693\ufe0e Under\u00b7Player \u2693\ufe0e boolean UnderPlayer \u2693\ufe0e Used to determine when player moves away from the poop.","title":"GridEntityPoop"},{"location":"GridEntityPoop/#class-gridentitypoop","text":"","title":"Class \"GridEntityPoop\""},{"location":"GridEntityPoop/#inherits-from-class","text":"GridEntity","title":"Inherits from Class:"},{"location":"GridEntityPoop/#functions","text":"","title":"Functions"},{"location":"GridEntityPoop/#reducespawnrate","text":"","title":"Reduce\u00b7Spawn\u00b7Rate ()"},{"location":"GridEntityPoop/#respawnredpoop","text":"","title":"Respawn\u00b7Red\u00b7Poop ()"},{"location":"GridEntityPoop/#variables","text":"","title":"Variables"},{"location":"GridEntityPoop/#reducedspawnrate","text":"","title":"Reduced\u00b7Spawn\u00b7Rate"},{"location":"GridEntityPoop/#revivetimer","text":"","title":"Revive\u00b7Timer"},{"location":"GridEntityPoop/#stateanimation","text":"","title":"State\u00b7Animation"},{"location":"GridEntityPoop/#underplayer","text":"","title":"Under\u00b7Player"},{"location":"GridEntityPressurePlate/","text":"Class \"GridEntityPressurePlate\" \u2693\ufe0e Inherits from Class: \u2693\ufe0e GridEntity Functions \u2693\ufe0e Reward () \u2693\ufe0e void Reward ( ) \u2693\ufe0e Variables \u2693\ufe0e Greed\u00b7Mode\u00b7RNG \u2693\ufe0e RNG GreedModeRNG \u2693\ufe0e Next\u00b7Greed\u00b7Animation \u2693\ufe0e string NextGreedAnimation \u2693\ufe0e Timer\u00b7Plate \u2693\ufe0e Sprite TimerPlate \u2693\ufe0e","title":"GridEntityPressurePlate"},{"location":"GridEntityPressurePlate/#class-gridentitypressureplate","text":"","title":"Class \"GridEntityPressurePlate\""},{"location":"GridEntityPressurePlate/#inherits-from-class","text":"GridEntity","title":"Inherits from Class:"},{"location":"GridEntityPressurePlate/#functions","text":"","title":"Functions"},{"location":"GridEntityPressurePlate/#reward","text":"","title":"Reward ()"},{"location":"GridEntityPressurePlate/#variables","text":"","title":"Variables"},{"location":"GridEntityPressurePlate/#greedmoderng","text":"","title":"Greed\u00b7Mode\u00b7RNG"},{"location":"GridEntityPressurePlate/#nextgreedanimation","text":"","title":"Next\u00b7Greed\u00b7Animation"},{"location":"GridEntityPressurePlate/#timerplate","text":"","title":"Timer\u00b7Plate"},{"location":"GridEntityRock/","text":"Class \"GridEntityRock\" \u2693\ufe0e Inherits from Class: \u2693\ufe0e GridEntity Functions \u2693\ufe0e Get\u00b7Big\u00b7Rock\u00b7Frame () \u2693\ufe0e int GetBigRockFrame ( ) \u2693\ufe0e Get\u00b7Rubble\u00b7Anim () \u2693\ufe0e string GetRubbleAnim ( ) \u2693\ufe0e Get\u00b7Sprite () \u2693\ufe0e Sprite GetSprite ( ) \u2693\ufe0e Set\u00b7Big\u00b7Rock\u00b7Frame () \u2693\ufe0e void SetBigRockFrame ( int Frame ) \u2693\ufe0e Update\u00b7Anim\u00b7Frame () \u2693\ufe0e void UpdateAnimFrame ( ) \u2693\ufe0e Variables \u2693\ufe0e Anim \u2693\ufe0e string Anim \u2693\ufe0e Frame\u00b7Cnt \u2693\ufe0e int FrameCnt \u2693\ufe0e Rubble\u00b7Anim \u2693\ufe0e string RubbleAnim \u2693\ufe0e","title":"GridEntityRock"},{"location":"GridEntityRock/#class-gridentityrock","text":"","title":"Class \"GridEntityRock\""},{"location":"GridEntityRock/#inherits-from-class","text":"GridEntity","title":"Inherits from Class:"},{"location":"GridEntityRock/#functions","text":"","title":"Functions"},{"location":"GridEntityRock/#getbigrockframe","text":"","title":"Get\u00b7Big\u00b7Rock\u00b7Frame ()"},{"location":"GridEntityRock/#getrubbleanim","text":"","title":"Get\u00b7Rubble\u00b7Anim ()"},{"location":"GridEntityRock/#getsprite","text":"","title":"Get\u00b7Sprite ()"},{"location":"GridEntityRock/#setbigrockframe","text":"","title":"Set\u00b7Big\u00b7Rock\u00b7Frame ()"},{"location":"GridEntityRock/#updateanimframe","text":"","title":"Update\u00b7Anim\u00b7Frame ()"},{"location":"GridEntityRock/#variables","text":"","title":"Variables"},{"location":"GridEntityRock/#anim","text":"","title":"Anim"},{"location":"GridEntityRock/#framecnt","text":"","title":"Frame\u00b7Cnt"},{"location":"GridEntityRock/#rubbleanim","text":"","title":"Rubble\u00b7Anim"},{"location":"GridEntitySpikes/","text":"Class \"GridEntitySpikes\" \u2693\ufe0e Inherits from Class: \u2693\ufe0e GridEntity Variables \u2693\ufe0e Timeout \u2693\ufe0e int Timeout \u2693\ufe0e","title":"GridEntitySpikes"},{"location":"GridEntitySpikes/#class-gridentityspikes","text":"","title":"Class \"GridEntitySpikes\""},{"location":"GridEntitySpikes/#inherits-from-class","text":"GridEntity","title":"Inherits from Class:"},{"location":"GridEntitySpikes/#variables","text":"","title":"Variables"},{"location":"GridEntitySpikes/#timeout","text":"","title":"Timeout"},{"location":"GridEntityTNT/","text":"Class \"GridEntityTNT\" \u2693\ufe0e Inherits from Class: \u2693\ufe0e GridEntity Variables \u2693\ufe0e Frame\u00b7Cnt \u2693\ufe0e int FrameCnt \u2693\ufe0e","title":"GridEntityTNT"},{"location":"GridEntityTNT/#class-gridentitytnt","text":"","title":"Class \"GridEntityTNT\""},{"location":"GridEntityTNT/#inherits-from-class","text":"GridEntity","title":"Inherits from Class:"},{"location":"GridEntityTNT/#variables","text":"","title":"Variables"},{"location":"GridEntityTNT/#framecnt","text":"","title":"Frame\u00b7Cnt"},{"location":"Input/","text":"Class \"Input\" \u2693\ufe0e Functions \u2693\ufe0e Get\u00b7Action\u00b7Value () \u2693\ufe0e float GetActionValue ( int action, int controllerId ) \u2693\ufe0e Returns the current strength in which a button was pressed. This is 0 OR 1 with a keyboard. With a controller, this can be used to get the strength in which you have moved the analog stick in a direction. Example Code This code prints the current \"strength\" in which the analog stick was moved to the left. 1 print ( Input . GetActionValue ( ButtonAction . ACTION_LEFT , 1 )) Get\u00b7Button\u00b7Value () \u2693\ufe0e float GetButtonValue ( int button, int controllerId ) \u2693\ufe0e Use \"GetActionValue\" instead of this function. Get\u00b7Mouse\u00b7Position () \u2693\ufe0e Vector GetMousePosition ( boolean gameCoords ) \u2693\ufe0e Returns the current mouse position in game coordinates (true) or render coordinates. Example Code This code renders \"Hello World!\" at the current mouse position. 1 2 local mousePos = Isaac . WorldToScreen ( Input . GetMousePosition ( true )) -- transfer game- in screen coordinates Isaac . RenderText ( \"Hello World!\" , mousePos . X , mousePos . Y , 1 , 1 , 1 , 1 ) Is\u00b7Action\u00b7Pressed () \u2693\ufe0e boolean IsActionPressed ( int action, int controllerId ) \u2693\ufe0e Returns, if an action-button is pressed or not. An Action-button is any button that got a default function assigned to it. This function will return true, as long the button is held down. List of all Action enums Example Code This code prints \"bomb Button pressed\", when any button was pressed that is assigned to the \"place bomb\" function. 1 2 3 if Input . IsActionPressed ( ButtonAction . ACTION_BOMB , 0 ) then print ( \"bomb Button pressed\" ) end Is\u00b7Action\u00b7Triggered () \u2693\ufe0e boolean IsActionTriggered ( int action, int controllerId ) \u2693\ufe0e Returns, if an action-button was pressed some time before or not. An Action-button is any button that got a default function assigned to it. This functions will only return true, if the button was pressed down. It will no longer return true, after you called this function and try to call it in the next update cycle (for example in the next render cycle). List of all Action enums Example Code This code prints \"bomb Button pressed\", when any button was pressed that is assigned to the \"place bomb\" function. 1 2 3 if Input . IsActionTriggered ( ButtonAction . ACTION_BOMB , 0 ) then print ( \"bomb Button pressed\" ) end Is\u00b7Button\u00b7Pressed () \u2693\ufe0e boolean IsButtonPressed ( int button, int controllerId ) \u2693\ufe0e Returns, if a button is pressed or not. This function will return true, as long the button is held down. List of all Action enums Example Code This code prints \"Enter Button pressed\", when the \"Enter\"-Button was pressed. 1 2 3 if Input . IsButtonPressed ( Keyboard . KEY_ENTER , 0 ) then print ( \"Enter Button pressed.\" ) end Is\u00b7Button\u00b7Triggered () \u2693\ufe0e boolean IsButtonTriggered ( int button, int controllerId ) \u2693\ufe0e Returns, if a button was pressed some time before or not. This functions will only return true, if the button was pressed down. It will no longer return true, after you called this function and try to call it in the next update cycle (for example in the next render cycle). List of all Action enums Example Code This code prints \"Enter Button was pressed\", when the \"Enter\"-Button was pressed. 1 2 3 if Input . IsButtonTriggered ( Keyboard . KEY_ENTER , 0 ) then print ( \"Enter Button was pressed.\" ) end Is\u00b7Mouse\u00b7Btn\u00b7Pressed () \u2693\ufe0e boolean IsMouseBtnPressed ( int button ) \u2693\ufe0e Returns, if a mousebutton is pressed or not. Left: 0, Right: 1, mousewheel: 2, back button: 3, forward button: 4 Example Code This code prints \"Right Click\", when the \"right\"-mousebutton was pressed. 1 2 3 if Input . IsMouseBtnPressed ( 1 ) then print ( \"Right Click\" ) end","title":"Input"},{"location":"Input/#class-input","text":"","title":"Class \"Input\""},{"location":"Input/#functions","text":"","title":"Functions"},{"location":"Input/#getactionvalue","text":"","title":"Get\u00b7Action\u00b7Value ()"},{"location":"Input/#getbuttonvalue","text":"","title":"Get\u00b7Button\u00b7Value ()"},{"location":"Input/#getmouseposition","text":"","title":"Get\u00b7Mouse\u00b7Position ()"},{"location":"Input/#isactionpressed","text":"","title":"Is\u00b7Action\u00b7Pressed ()"},{"location":"Input/#isactiontriggered","text":"","title":"Is\u00b7Action\u00b7Triggered ()"},{"location":"Input/#isbuttonpressed","text":"","title":"Is\u00b7Button\u00b7Pressed ()"},{"location":"Input/#isbuttontriggered","text":"","title":"Is\u00b7Button\u00b7Triggered ()"},{"location":"Input/#ismousebtnpressed","text":"","title":"Is\u00b7Mouse\u00b7Btn\u00b7Pressed ()"},{"location":"Isaac/","text":"Class \"Isaac\" \u2693\ufe0e Functions \u2693\ufe0e Add\u00b7Callback () \u2693\ufe0e void AddCallback ( table modRef, function callbackId, table callbackFn, int entityId ) \u2693\ufe0e It is recommended to use the AddCallback function on a Mod Reference instead. Add\u00b7Pill\u00b7Effect\u00b7To\u00b7Pool () \u2693\ufe0e int AddPillEffectToPool ( int pillEffect ) \u2693\ufe0e returns pill color Console\u00b7Output () \u2693\ufe0e void ConsoleOutput ( string text ) \u2693\ufe0e Prints a string into the Debug Console Example Code You can use this example as an alternative. 1 2 3 4 5 6 Isaac . ConsoleOutput ( \"This is a Test.\" ) -- Output: This is a Test. -- Alternatively: print ( \"This is a Test.\" ) -- Output: This is a Test. Count\u00b7Bosses () \u2693\ufe0e int CountBosses ( ) \u2693\ufe0e Returns the number of bosses in the current room. Count\u00b7Enemies () \u2693\ufe0e int CountEnemies ( ) \u2693\ufe0e Returns the number of enemies in the current room. Count\u00b7Entities () \u2693\ufe0e int CountEntities ( Entity Spawner, int Type, int Variant, int Subtype ) \u2693\ufe0e Returns the number of entities in the current room that fulfill the specified requirements. Spawner refers to an entity object (can be nil ) Type refers to the found entity's type (Can be EntityType . ENTITY_NULL ) Variant and Subtype refer to the found entitys Variant and Subtype (Can be - 1 ) Debug\u00b7String () \u2693\ufe0e void DebugString ( string str ) \u2693\ufe0e Prints a string into the log file. You can find this file here C : \\ Users \\ Jan \\ Documents \\ My Games \\ Binding of Isaac Afterbirth + \\ log . txt Example Code This code prints \"This is a Test.\" in the log.txt file. 1 2 Isaac . DebugString ( \"This is a Test.\" ) -- Output: Lua Debug: This is a Test. Execute\u00b7Command () \u2693\ufe0e string ExecuteCommand ( string command ) \u2693\ufe0e This function executes a debug console command. see the Debug Console Tutorial for informations on how to use commands. Explode () \u2693\ufe0e void Explode ( Vector pos, Entity source, float damage ) \u2693\ufe0e Spawn an explosion on a specified location. Find\u00b7By\u00b7Type () \u2693\ufe0e table FindByType ( int Type, int Variant, int Subtype, boolean Cache, boolean IgnoreFriendly ) \u2693\ufe0e Returns entities based on Type, Variant, Subtype. If Variant and/or Subtype is -1 then everything is includedUse Cache flag for multiple calls per frame. Find\u00b7In\u00b7Radius () \u2693\ufe0e table FindInRadius ( Vector Position, float Radius, int Partitions ) \u2693\ufe0e Returns entities in range of Radius from Position filtered by Partitions mask (see EntityPartition enum ) (include all = 0xffffffff) This function does not return the entities sorted by nearest first, but based on the order they were loaded. Get\u00b7Card\u00b7Id\u00b7By\u00b7Name () \u2693\ufe0e int GetCardIdByName ( string cardHudName ) \u2693\ufe0e Returns the CardID based on its hud value. (File: pocketitems.xml) Notes The name of this function is misleading, this function will only work with the hud value of a card and not the name of a card. Example Code This code gets the CardID of XVI - The Tower. 1 2 Isaac . GetCardIdByName ( \"16_TheTower\" ) --Returns: 17 Get\u00b7Challenge () \u2693\ufe0e int GetChallenge ( ) \u2693\ufe0e Returns the ID of a challenge the player is currently in. Returns 0 if the player is not playing any challenge. Get\u00b7Challenge\u00b7Id\u00b7By\u00b7Name () \u2693\ufe0e int GetChallengeIdByName ( string challengeName ) \u2693\ufe0e Returns the ChallengeID of a challenge based on its name. (File: challenges.xml) Example Code This code gets the ChallengeID of Aprils fool. 1 2 Isaac . GetChallengeIdByName ( \"Aprils fool\" ) --Returns: 32 Get\u00b7Costume\u00b7Id\u00b7By\u00b7Path () \u2693\ufe0e int GetCostumeIdByPath ( string path ) \u2693\ufe0e Returns the CostumeID of a costume based on its file path. (File: costumes2.xml) Example Code This code gets the CostumeID of the Poop transformation costume. 1 2 Isaac . GetCostumeIdByPath ( \"gfx/characters/n027_Transformation_Poop.anm2\" ) --Returns: 27 Get\u00b7Curse\u00b7Id\u00b7By\u00b7Name () \u2693\ufe0e int GetCurseIdByName ( string curseName ) \u2693\ufe0e Returns the CurseID of a curse based on its name. (File: curses.xml) Example Code This code gets the CurseID of Curse of the Unknown. 1 2 Isaac . GetCurseIdByName ( \"Curse of the Unknown\" ) --Returns: 4 Get\u00b7Entity\u00b7Type\u00b7By\u00b7Name () \u2693\ufe0e int GetEntityTypeByName ( string entityName ) \u2693\ufe0e Returns the EntityType of an entity based on its name. (File: entities2.xml) Notes There is no SubType version of this function. Example Code This code gets the EntityType of Flaming Gaper. 1 2 Isaac . GetEntityTypeByName ( \"Flaming Gaper\" ) --Returns: 10 Get\u00b7Entity\u00b7Variant\u00b7By\u00b7Name () \u2693\ufe0e int GetEntityVariantByName ( string entityName ) \u2693\ufe0e Returns the variant of an entity based on its name. (File: entities2.xml) Notes There is no SubType version of this function. Example Code This code gets the variant of Flaming Gaper. 1 2 Isaac . GetEntityVariantByName ( \"Flaming Gaper\" ) --Returns: 2 Get\u00b7Frame\u00b7Count () \u2693\ufe0e int GetFrameCount ( ) \u2693\ufe0e Returns the amount of frames the game as a whole is running. The counter increases even when the game is paused or when you are in the main menu! 1 second equals roughtly 60 frames. This function therefore works drastically different than Game (): GetFrameCount () Link Get\u00b7Free\u00b7Near\u00b7Position () \u2693\ufe0e Vector GetFreeNearPosition ( Vector pos, float step ) \u2693\ufe0e Get\u00b7Item\u00b7Config () \u2693\ufe0e Config GetItemConfig ( ) \u2693\ufe0e Returns the ItemConfig::Config object. Get\u00b7Item\u00b7Id\u00b7By\u00b7Name () \u2693\ufe0e int GetItemIdByName ( string itemName ) \u2693\ufe0e Returns the ItemID of a Collectible. (File: items.xml) Example Code This code gets the ItemID of Brimstone. 1 2 Isaac . GetItemIdByName ( \"Brimstone\" ) --Returns: 118 Get\u00b7Music\u00b7Id\u00b7By\u00b7Name () \u2693\ufe0e int GetMusicIdByName ( string musicName ) \u2693\ufe0e Returns the MusicID of a music track. (File: music.xml) Example Code This code gets the MusicID of the Title Screen. 1 2 Isaac . GetMusicIdByName ( \"Title Screen\" ) --Returns: 61 Get\u00b7Pill\u00b7Effect\u00b7By\u00b7Name () \u2693\ufe0e int GetPillEffectByName ( string pillEffect ) \u2693\ufe0e Returns the PillEffectID based on its name. (File: pocketitems.xml) Example Code This code gets the PillEffectID of I can see forever!. 1 2 Isaac . GetPillEffectByName ( \"I can see forever!\" ) --Returns: 23 Get\u00b7Player () \u2693\ufe0e EntityPlayer GetPlayer ( int playerId ) \u2693\ufe0e Returns the EntityPlayer which the user is controlling. 0 = Main player. Higher numbers refer to coop babies. Example Code 1 Isaac . GetPlayer ( 0 ) Get\u00b7Player\u00b7Type\u00b7By\u00b7Name () \u2693\ufe0e int GetPlayerTypeByName ( string playerName ) \u2693\ufe0e Returns the PlayerType of a character based on its name. (File: players.xml) Example Code This code gets the PlayerType of Azazel. 1 2 Isaac . GetPlayerTypeByName ( \"Azazel\" ) --Returns: 7 Get\u00b7Random\u00b7Position () \u2693\ufe0e Vector GetRandomPosition ( ) \u2693\ufe0e Returns a random position inside the current room. The Return value is a Vector containing the position in world coordinates. Get\u00b7Room\u00b7Entities () \u2693\ufe0e table GetRoomEntities ( ) \u2693\ufe0e Returns a table containing all entities in the room. Get\u00b7Sound\u00b7Id\u00b7By\u00b7Name () \u2693\ufe0e int GetSoundIdByName ( string soundName ) \u2693\ufe0e Returns the SoundEffectID of a sound based on its name. (File: sounds.xml) Example Code This code gets the SoundEffectID of a sound named \"Custom Sound Effect\" 1 Isaac . GetSoundIdByName ( \"Custom Sound Effect\" ) Get\u00b7Text\u00b7Width () \u2693\ufe0e int GetTextWidth ( string str ) \u2693\ufe0e Returns the width of the given string in pixels based on the \"terminus8\" font (same font as used in Isaac.RenderText()) Get\u00b7Time () \u2693\ufe0e int GetTime ( ) \u2693\ufe0e Returns the current game time in milliseconds. This includes pauses! Get\u00b7Trinket\u00b7Id\u00b7By\u00b7Name () \u2693\ufe0e int GetTrinketIdByName ( string trinketName ) \u2693\ufe0e Returns the TrinketType of a trinket based on its name. (File: items.xml) Example Code This code gets the TrinketType of Lucky Toe. 1 2 Isaac . GetTrinketIdByName ( \"Lucky Toe\" ) --Returns: 42 Grid\u00b7Spawn () \u2693\ufe0e GridEntity GridSpawn ( GridEntity gridEntityType, int Variant, Vector position, boolean forced ) \u2693\ufe0e Spawn a GridEntity at the given position (world coordinates). Bugs forced has no effect and will NOT override the grid entity at the given location. Remove a grid entity at the given location if nessesary before spawning something again. Has\u00b7Mod\u00b7Data () \u2693\ufe0e boolean HasModData ( table modRef ) \u2693\ufe0e Returns \"true\" if your mod has Data stored using the \"SaveModData()\" function. Aka. if there is a \"saveX.dat\" file in your mod folder.There are 3 \"saveX.dat\" files, one per Savegame. They are stored in the mod's folder next to the \"main.lua\" file. The number indicates the savegame it corresponds to. The number will be determined automatically by the game. It is recommended to use the HasData function on a Mod Reference instead. Load\u00b7Mod\u00b7Data () \u2693\ufe0e string LoadModData ( table modRef ) \u2693\ufe0e Returns a string that was stored in a \"saveX.dat\" file using the \"SaveModData()\" function. If there is no \"saveX.dat\" file in your mod, this function will return an empty string. There are 3 \"saveX.dat\" files, one per Savegame. They are stored in the mod's folder next to the \"main.lua\" file. The number indicates the savegame it corresponds to. The number will be determined automatically by the game. It is recommended to use the LoadData function on a Mod Reference instead. Register\u00b7Mod () \u2693\ufe0e void RegisterMod ( table modRef, string modName, int apiVersion ) \u2693\ufe0e Registers a table with the game to use as a Mod Reference . It is recommended to use the global RegisterMod function instead. Remove\u00b7Callback () \u2693\ufe0e void RemoveCallback ( table modRef, function callbackId, table callbackFn ) \u2693\ufe0e It is recommended to use the RemoveCallback function on a Mod Reference instead. Remove\u00b7Mod\u00b7Data () \u2693\ufe0e void RemoveModData ( table modRef ) \u2693\ufe0e Deletes the stored \"saveX.dat\" file if it exists. There are 3 \"saveX.dat\" files, one per Savegame. They are stored in the mod's folder next to the \"main.lua\" file. The number indicates the savegame it corresponds to. The number will be determined automatically by the game. It is recommended to use the RemoveData function on a Mod Reference instead. Render\u00b7Scaled\u00b7Text () \u2693\ufe0e void RenderScaledText ( string str, float X, float Y, float ScaleX, float ScaleY, float R, float G, float B, float A ) \u2693\ufe0e Renders a scaled text on the Screen. X and Y coordinates need to be in screen coordinates ( x[0,~500) y [0,~350) ). ScaleX, ScaleY, R ,G ,B and A need to be between [0,1]. Some scale values can cause the font to display deformed and pixelated. Example Code This code renders the player position on the screen. 1 2 3 local player = Isaac . GetPlayer ( 0 ) local pos = player . Position Isaac . RenderText ( \"X: \" .. pos . X .. \" Y: \" .. pos . Y , 50 , 50 , 0.5 , 0.5 , 1 , 1 , 1 , 1 ) Render\u00b7Text () \u2693\ufe0e void RenderText ( string str, float X, float Y, float R, float G, float B, float A ) \u2693\ufe0e Renders a text with the default size on the Screen. X and Y coordinates need to be in screen coordinates ( x[0,~500) y [0,~350) ). R,G,B and A need to be between [0,1]. Example Code This code renders the player position on the screen. 1 2 3 local player = Isaac . GetPlayer ( 0 ) local pos = player . Position Isaac . RenderText ( \"X: \" .. pos . X .. \" Y: \" .. pos . Y , 50 , 50 , 1 , 1 , 1 , 1 ) Save\u00b7Mod\u00b7Data () \u2693\ufe0e void SaveModData ( table modRef, string data ) \u2693\ufe0e Stores a string in a \"saveX.dat\" file. The stored Data persists thruout resets and game restart, so its perfect to store persistent data. There are 3 \"saveX.dat\" files, one per Savegame. They are stored in the mod's folder next to the \"main.lua\" file. The number indicates the savegame it corresponds to. The number will be determined automatically by the game. It is recommended to use the SaveData function on a Mod Reference instead. Screen\u00b7To\u00b7World () \u2693\ufe0e Vector ScreenToWorld ( Vector pos ) \u2693\ufe0e Transfers Screen (aka. Window coordinates) into Worldcoordinates. This can be used to get a specific location in the room in World coordnates The World coordinate system is x[0,inf) y[0,inf). Screen\u00b7To\u00b7World\u00b7Distance () \u2693\ufe0e Vector ScreenToWorldDistance ( Vector pos ) \u2693\ufe0e Spawn () \u2693\ufe0e Entity Spawn ( int entityType, int entityVariant, int entitySubtype, Vector position, Vector velocity, Entity Spawner ) \u2693\ufe0e Spawns the defined entity at the given location. If the position is not free, it spawns it in the nearest free position. There are two spawn functions. Isaac.Spawn() and Game():Spawn() . If you need to spawn something with a specific seed, then you use Game():Spawn() . If you need to spawn something with a randomly generated seed, then use Isaac.Spawn() . Most of the time, you will probably want to use Isaac.Spawn() . Example Code This code spawns a random collectible at in center of the current room. 1 Isaac . Spawn ( EntityType . ENTITY_PICKUP , PickupVariant . PICKUP_COLLECTIBLE , 0 , Vector ( 320 , 280 ), Vector ( 0 , 0 ), nil ) World\u00b7To\u00b7Render\u00b7Position () \u2693\ufe0e Vector WorldToRenderPosition ( Vector pos ) \u2693\ufe0e Transfers world (aka. game coordinates) into Rendercoordinates. This can be used to render things at fixed positions in a room. The Render coordinate system is x[0,inf) y[0,inf). It defines the Position on the rendering-plane in the current room. World\u00b7To\u00b7Screen () \u2693\ufe0e Vector WorldToScreen ( Vector pos ) \u2693\ufe0e Transfers world (aka. game coordinates) into Screen (aka. Window) coordinates. This can be used to render things next to an entity. The Screen coordinate system is x[0,inf) y[0,inf). Normally, it goes till ~500x ~300y. The return vector contains integer values or numbers ending with .5 Example Code This code render \"test\" at the position of the player. The text will move with isaac. 1 2 3 local player = Isaac . GetPlayer ( 0 ) local screenpos = Isaac . WorldToScreen ( player . Position ) Isaac . RenderText ( \"test\" , screenpos . X , screenpos . Y , 1 , 1 , 1 , 1 ) World\u00b7To\u00b7Screen\u00b7Distance () \u2693\ufe0e Vector WorldToScreenDistance ( Vector pos ) \u2693\ufe0e","title":"Isaac"},{"location":"Isaac/#class-isaac","text":"","title":"Class \"Isaac\""},{"location":"Isaac/#functions","text":"","title":"Functions"},{"location":"Isaac/#addcallback","text":"","title":"Add\u00b7Callback ()"},{"location":"Isaac/#addpilleffecttopool","text":"","title":"Add\u00b7Pill\u00b7Effect\u00b7To\u00b7Pool ()"},{"location":"Isaac/#consoleoutput","text":"","title":"Console\u00b7Output ()"},{"location":"Isaac/#countbosses","text":"","title":"Count\u00b7Bosses ()"},{"location":"Isaac/#countenemies","text":"","title":"Count\u00b7Enemies ()"},{"location":"Isaac/#countentities","text":"","title":"Count\u00b7Entities ()"},{"location":"Isaac/#debugstring","text":"","title":"Debug\u00b7String ()"},{"location":"Isaac/#executecommand","text":"","title":"Execute\u00b7Command ()"},{"location":"Isaac/#explode","text":"","title":"Explode ()"},{"location":"Isaac/#findbytype","text":"","title":"Find\u00b7By\u00b7Type ()"},{"location":"Isaac/#findinradius","text":"","title":"Find\u00b7In\u00b7Radius ()"},{"location":"Isaac/#getcardidbyname","text":"","title":"Get\u00b7Card\u00b7Id\u00b7By\u00b7Name ()"},{"location":"Isaac/#getchallenge","text":"","title":"Get\u00b7Challenge ()"},{"location":"Isaac/#getchallengeidbyname","text":"","title":"Get\u00b7Challenge\u00b7Id\u00b7By\u00b7Name ()"},{"location":"Isaac/#getcostumeidbypath","text":"","title":"Get\u00b7Costume\u00b7Id\u00b7By\u00b7Path ()"},{"location":"Isaac/#getcurseidbyname","text":"","title":"Get\u00b7Curse\u00b7Id\u00b7By\u00b7Name ()"},{"location":"Isaac/#getentitytypebyname","text":"","title":"Get\u00b7Entity\u00b7Type\u00b7By\u00b7Name ()"},{"location":"Isaac/#getentityvariantbyname","text":"","title":"Get\u00b7Entity\u00b7Variant\u00b7By\u00b7Name ()"},{"location":"Isaac/#getframecount","text":"","title":"Get\u00b7Frame\u00b7Count ()"},{"location":"Isaac/#getfreenearposition","text":"","title":"Get\u00b7Free\u00b7Near\u00b7Position ()"},{"location":"Isaac/#getitemconfig","text":"","title":"Get\u00b7Item\u00b7Config ()"},{"location":"Isaac/#getitemidbyname","text":"","title":"Get\u00b7Item\u00b7Id\u00b7By\u00b7Name ()"},{"location":"Isaac/#getmusicidbyname","text":"","title":"Get\u00b7Music\u00b7Id\u00b7By\u00b7Name ()"},{"location":"Isaac/#getpilleffectbyname","text":"","title":"Get\u00b7Pill\u00b7Effect\u00b7By\u00b7Name ()"},{"location":"Isaac/#getplayer","text":"","title":"Get\u00b7Player ()"},{"location":"Isaac/#getplayertypebyname","text":"","title":"Get\u00b7Player\u00b7Type\u00b7By\u00b7Name ()"},{"location":"Isaac/#getrandomposition","text":"","title":"Get\u00b7Random\u00b7Position ()"},{"location":"Isaac/#getroomentities","text":"","title":"Get\u00b7Room\u00b7Entities ()"},{"location":"Isaac/#getsoundidbyname","text":"","title":"Get\u00b7Sound\u00b7Id\u00b7By\u00b7Name ()"},{"location":"Isaac/#gettextwidth","text":"","title":"Get\u00b7Text\u00b7Width ()"},{"location":"Isaac/#gettime","text":"","title":"Get\u00b7Time ()"},{"location":"Isaac/#gettrinketidbyname","text":"","title":"Get\u00b7Trinket\u00b7Id\u00b7By\u00b7Name ()"},{"location":"Isaac/#gridspawn","text":"","title":"Grid\u00b7Spawn ()"},{"location":"Isaac/#hasmoddata","text":"","title":"Has\u00b7Mod\u00b7Data ()"},{"location":"Isaac/#loadmoddata","text":"","title":"Load\u00b7Mod\u00b7Data ()"},{"location":"Isaac/#registermod","text":"","title":"Register\u00b7Mod ()"},{"location":"Isaac/#removecallback","text":"","title":"Remove\u00b7Callback ()"},{"location":"Isaac/#removemoddata","text":"","title":"Remove\u00b7Mod\u00b7Data ()"},{"location":"Isaac/#renderscaledtext","text":"","title":"Render\u00b7Scaled\u00b7Text ()"},{"location":"Isaac/#rendertext","text":"","title":"Render\u00b7Text ()"},{"location":"Isaac/#savemoddata","text":"","title":"Save\u00b7Mod\u00b7Data ()"},{"location":"Isaac/#screentoworld","text":"","title":"Screen\u00b7To\u00b7World ()"},{"location":"Isaac/#screentoworlddistance","text":"","title":"Screen\u00b7To\u00b7World\u00b7Distance ()"},{"location":"Isaac/#spawn","text":"","title":"Spawn ()"},{"location":"Isaac/#worldtorenderposition","text":"","title":"World\u00b7To\u00b7Render\u00b7Position ()"},{"location":"Isaac/#worldtoscreen","text":"","title":"World\u00b7To\u00b7Screen ()"},{"location":"Isaac/#worldtoscreendistance","text":"","title":"World\u00b7To\u00b7Screen\u00b7Distance ()"},{"location":"ItemConfig/","text":"Class \"ItemConfig\" \u2693\ufe0e Functions \u2693\ufe0e Get\u00b7Card () \u2693\ufe0e ItemConfig Card GetCard ( Card ID ) \u2693\ufe0e Get\u00b7Cards () \u2693\ufe0e CardList GetCards ( ) \u2693\ufe0e Bugs Calling Get() in this list does not return usable userdata, rendering it useless for that purpose. Get\u00b7Collectible () \u2693\ufe0e ItemConfig Item GetCollectible ( int ID ) \u2693\ufe0e Returns the Itemobject of a given CollectibleID. Example Code This Code gets the highest possible collectibleid including modded items. It uses the Binary Search algorithm to do it. Using GetCollectible(): ( recommended! ) 1 2 3 4 5 6 7 8 9 10 11 12 13 function GetMaxCollectibleID () local id = CollectibleType . NUM_COLLECTIBLES - 1 local step = 16 while step > 0 do if Isaac . GetItemConfig (): GetCollectible ( id + step ) ~= nil then id = id + step else step = step // 2 end end return id end Using GetCollectibles(): ( Crashes on Mac OS) 1 2 3 function GetMaxCollectibleID () return Isaac . GetItemConfig (): GetCollectibles (). Size - 1 end Get\u00b7Collectibles () \u2693\ufe0e ItemList GetCollectibles ( ) \u2693\ufe0e Returns the List of all Collectibles. Example Code This Code gets the highest possible collectibleid including modded items. 1 2 3 function GetMaxCollectibleID () return Isaac . GetItemConfig (): GetCollectibles (). Size - 1 end Bugs Calling Get() in this list does not return usable userdata, rendering it useless for that purpose. Get\u00b7Costumes () \u2693\ufe0e CostumeList GetCostumes ( ) \u2693\ufe0e Bugs The list returned by this function is always empty, rendering it useless. Get\u00b7Null\u00b7Item () \u2693\ufe0e ItemConfig Item GetNullItem ( int ID ) \u2693\ufe0e Get\u00b7Null\u00b7Items () \u2693\ufe0e ItemList GetNullItems ( ) \u2693\ufe0e Bugs Calling Get() in this list does not return usable userdata, rendering it useless for that purpose. Get\u00b7Pill\u00b7Effect () \u2693\ufe0e ItemConfig PillEffect GetPillEffect ( PillEffect ID ) \u2693\ufe0e Get\u00b7Pill\u00b7Effects () \u2693\ufe0e PillList GetPillEffects ( ) \u2693\ufe0e Bugs Calling Get() in this list does not return usable userdata, rendering it useless for that purpose. Get\u00b7Trinket () \u2693\ufe0e ItemConfig Item GetTrinket ( int ID ) \u2693\ufe0e Get\u00b7Trinkets () \u2693\ufe0e ItemList GetTrinkets ( ) \u2693\ufe0e Bugs Calling Get() in this list does not return usable userdata, rendering it useless for that purpose. Is\u00b7Valid\u00b7Collectible () \u2693\ufe0e static boolean IsValidCollectible ( CollectibleType ID ) \u2693\ufe0e Function to check if a given item id is a valid collectible id (aka. this item exists). Returns True when it exists and False when it doesnt. Example Code This Code checks, if the item \"Sad Onion\" (ID: 1) exists. 1 ItemConfig . Config . IsValidCollectible ( 1 ) Bugs This function returns false for modded items! Use itemConfig:GetCollectible() instead. Should\u00b7Add\u00b7Costume\u00b7On\u00b7Pickup () \u2693\ufe0e static boolean ShouldAddCostumeOnPickup ( ItemConfig Item Config ) \u2693\ufe0e","title":"ItemConfig Functions"},{"location":"ItemConfig/#class-itemconfig","text":"","title":"Class \"ItemConfig\""},{"location":"ItemConfig/#functions","text":"","title":"Functions"},{"location":"ItemConfig/#getcard","text":"","title":"Get\u00b7Card ()"},{"location":"ItemConfig/#getcards","text":"","title":"Get\u00b7Cards ()"},{"location":"ItemConfig/#getcollectible","text":"","title":"Get\u00b7Collectible ()"},{"location":"ItemConfig/#getcollectibles","text":"","title":"Get\u00b7Collectibles ()"},{"location":"ItemConfig/#getcostumes","text":"","title":"Get\u00b7Costumes ()"},{"location":"ItemConfig/#getnullitem","text":"","title":"Get\u00b7Null\u00b7Item ()"},{"location":"ItemConfig/#getnullitems","text":"","title":"Get\u00b7Null\u00b7Items ()"},{"location":"ItemConfig/#getpilleffect","text":"","title":"Get\u00b7Pill\u00b7Effect ()"},{"location":"ItemConfig/#getpilleffects","text":"","title":"Get\u00b7Pill\u00b7Effects ()"},{"location":"ItemConfig/#gettrinket","text":"","title":"Get\u00b7Trinket ()"},{"location":"ItemConfig/#gettrinkets","text":"","title":"Get\u00b7Trinkets ()"},{"location":"ItemConfig/#isvalidcollectible","text":"","title":"Is\u00b7Valid\u00b7Collectible ()"},{"location":"ItemConfig/#shouldaddcostumeonpickup","text":"","title":"Should\u00b7Add\u00b7Costume\u00b7On\u00b7Pickup ()"},{"location":"ItemConfig_Card/","text":"Class \"ItemConfig::Card\" \u2693\ufe0e Variables \u2693\ufe0e Achievement\u00b7ID \u2693\ufe0e int AchievementID \u2693\ufe0e Description \u2693\ufe0e string Description \u2693\ufe0e Greed\u00b7Mode\u00b7Allowed \u2693\ufe0e boolean GreedModeAllowed \u2693\ufe0e Hud\u00b7Anim \u2693\ufe0e string HudAnim \u2693\ufe0e ID \u2693\ufe0e int ID \u2693\ufe0e Name \u2693\ufe0e string Name \u2693\ufe0e","title":"ItemConfig - Card"},{"location":"ItemConfig_Card/#class-itemconfigcard","text":"","title":"Class \"ItemConfig::Card\""},{"location":"ItemConfig_Card/#variables","text":"","title":"Variables"},{"location":"ItemConfig_Card/#achievementid","text":"","title":"Achievement\u00b7ID"},{"location":"ItemConfig_Card/#description","text":"","title":"Description"},{"location":"ItemConfig_Card/#greedmodeallowed","text":"","title":"Greed\u00b7Mode\u00b7Allowed"},{"location":"ItemConfig_Card/#hudanim","text":"","title":"Hud\u00b7Anim"},{"location":"ItemConfig_Card/#id","text":"","title":"ID"},{"location":"ItemConfig_Card/#name","text":"","title":"Name"},{"location":"ItemConfig_Costume/","text":"Class \"ItemConfig::Costume\" \u2693\ufe0e Variables \u2693\ufe0e Anm2Path \u2693\ufe0e string Anm2Path \u2693\ufe0e Has\u00b7Overlay \u2693\ufe0e boolean HasOverlay \u2693\ufe0e Has\u00b7Skin\u00b7Alt \u2693\ufe0e boolean HasSkinAlt \u2693\ufe0e ID \u2693\ufe0e int ID \u2693\ufe0e Is\u00b7Flying \u2693\ufe0e boolean IsFlying \u2693\ufe0e Overwrite\u00b7Color \u2693\ufe0e boolean OverwriteColor \u2693\ufe0e Priority \u2693\ufe0e int Priority \u2693\ufe0e Skin\u00b7Color \u2693\ufe0e SkinColor SkinColor \u2693\ufe0e","title":"ItemConfig - Costume"},{"location":"ItemConfig_Costume/#class-itemconfigcostume","text":"","title":"Class \"ItemConfig::Costume\""},{"location":"ItemConfig_Costume/#variables","text":"","title":"Variables"},{"location":"ItemConfig_Costume/#anm2path","text":"","title":"Anm2Path"},{"location":"ItemConfig_Costume/#hasoverlay","text":"","title":"Has\u00b7Overlay"},{"location":"ItemConfig_Costume/#hasskinalt","text":"","title":"Has\u00b7Skin\u00b7Alt"},{"location":"ItemConfig_Costume/#id","text":"","title":"ID"},{"location":"ItemConfig_Costume/#isflying","text":"","title":"Is\u00b7Flying"},{"location":"ItemConfig_Costume/#overwritecolor","text":"","title":"Overwrite\u00b7Color"},{"location":"ItemConfig_Costume/#priority","text":"","title":"Priority"},{"location":"ItemConfig_Costume/#skincolor","text":"","title":"Skin\u00b7Color"},{"location":"ItemConfig_Item/","text":"Class \"ItemConfig::Item\" \u2693\ufe0e Functions \u2693\ufe0e Is\u00b7Collectible () \u2693\ufe0e boolean IsCollectible ( ) \u2693\ufe0e Is\u00b7Null () \u2693\ufe0e boolean IsNull ( ) \u2693\ufe0e Is\u00b7Trinket () \u2693\ufe0e boolean IsTrinket ( ) \u2693\ufe0e Variables \u2693\ufe0e Achievement\u00b7ID \u2693\ufe0e int AchievementID \u2693\ufe0e Add\u00b7Black\u00b7Hearts \u2693\ufe0e int AddBlackHearts \u2693\ufe0e Add\u00b7Bombs \u2693\ufe0e int AddBombs \u2693\ufe0e Add\u00b7Coins \u2693\ufe0e int AddCoins \u2693\ufe0e Add\u00b7Hearts \u2693\ufe0e int AddHearts \u2693\ufe0e Add\u00b7Keys \u2693\ufe0e int AddKeys \u2693\ufe0e Add\u00b7Max\u00b7Hearts \u2693\ufe0e int AddMaxHearts \u2693\ufe0e Add\u00b7Soul\u00b7Hearts \u2693\ufe0e int AddSoulHearts \u2693\ufe0e Cache\u00b7Flags \u2693\ufe0e int CacheFlags \u2693\ufe0e Costume \u2693\ufe0e Costume Costume \u2693\ufe0e Description \u2693\ufe0e string Description \u2693\ufe0e Devil\u00b7Price \u2693\ufe0e int DevilPrice \u2693\ufe0e Discharged \u2693\ufe0e boolean Discharged \u2693\ufe0e Gfx\u00b7File\u00b7Name \u2693\ufe0e string GfxFileName \u2693\ufe0e ID \u2693\ufe0e int ID \u2693\ufe0e Max\u00b7Charges \u2693\ufe0e int MaxCharges \u2693\ufe0e Max\u00b7Cooldown \u2693\ufe0e int MaxCooldown \u2693\ufe0e Name \u2693\ufe0e string Name \u2693\ufe0e Special \u2693\ufe0e boolean Special \u2693\ufe0e Type \u2693\ufe0e ItemType Type \u2693\ufe0e mostly for Lua so it will not make a copy","title":"ItemConfig - Item"},{"location":"ItemConfig_Item/#class-itemconfigitem","text":"","title":"Class \"ItemConfig::Item\""},{"location":"ItemConfig_Item/#functions","text":"","title":"Functions"},{"location":"ItemConfig_Item/#iscollectible","text":"","title":"Is\u00b7Collectible ()"},{"location":"ItemConfig_Item/#isnull","text":"","title":"Is\u00b7Null ()"},{"location":"ItemConfig_Item/#istrinket","text":"","title":"Is\u00b7Trinket ()"},{"location":"ItemConfig_Item/#variables","text":"","title":"Variables"},{"location":"ItemConfig_Item/#achievementid","text":"","title":"Achievement\u00b7ID"},{"location":"ItemConfig_Item/#addblackhearts","text":"","title":"Add\u00b7Black\u00b7Hearts"},{"location":"ItemConfig_Item/#addbombs","text":"","title":"Add\u00b7Bombs"},{"location":"ItemConfig_Item/#addcoins","text":"","title":"Add\u00b7Coins"},{"location":"ItemConfig_Item/#addhearts","text":"","title":"Add\u00b7Hearts"},{"location":"ItemConfig_Item/#addkeys","text":"","title":"Add\u00b7Keys"},{"location":"ItemConfig_Item/#addmaxhearts","text":"","title":"Add\u00b7Max\u00b7Hearts"},{"location":"ItemConfig_Item/#addsoulhearts","text":"","title":"Add\u00b7Soul\u00b7Hearts"},{"location":"ItemConfig_Item/#cacheflags","text":"","title":"Cache\u00b7Flags"},{"location":"ItemConfig_Item/#costume","text":"","title":"Costume"},{"location":"ItemConfig_Item/#description","text":"","title":"Description"},{"location":"ItemConfig_Item/#devilprice","text":"","title":"Devil\u00b7Price"},{"location":"ItemConfig_Item/#discharged","text":"","title":"Discharged"},{"location":"ItemConfig_Item/#gfxfilename","text":"","title":"Gfx\u00b7File\u00b7Name"},{"location":"ItemConfig_Item/#id","text":"","title":"ID"},{"location":"ItemConfig_Item/#maxcharges","text":"","title":"Max\u00b7Charges"},{"location":"ItemConfig_Item/#maxcooldown","text":"","title":"Max\u00b7Cooldown"},{"location":"ItemConfig_Item/#name","text":"","title":"Name"},{"location":"ItemConfig_Item/#special","text":"","title":"Special"},{"location":"ItemConfig_Item/#type","text":"","title":"Type"},{"location":"ItemConfig_PillEffect/","text":"Class \"ItemConfig::PillEffect\" \u2693\ufe0e Variables \u2693\ufe0e Achievement\u00b7ID \u2693\ufe0e int AchievementID \u2693\ufe0e Greed\u00b7Mode\u00b7Allowed \u2693\ufe0e boolean GreedModeAllowed \u2693\ufe0e ID \u2693\ufe0e int ID \u2693\ufe0e Name \u2693\ufe0e string Name \u2693\ufe0e","title":"ItemConfig - PillEffect"},{"location":"ItemConfig_PillEffect/#class-itemconfigpilleffect","text":"","title":"Class \"ItemConfig::PillEffect\""},{"location":"ItemConfig_PillEffect/#variables","text":"","title":"Variables"},{"location":"ItemConfig_PillEffect/#achievementid","text":"","title":"Achievement\u00b7ID"},{"location":"ItemConfig_PillEffect/#greedmodeallowed","text":"","title":"Greed\u00b7Mode\u00b7Allowed"},{"location":"ItemConfig_PillEffect/#id","text":"","title":"ID"},{"location":"ItemConfig_PillEffect/#name","text":"","title":"Name"},{"location":"ItemPool/","text":"Class \"ItemPool\" \u2693\ufe0e Functions \u2693\ufe0e Add\u00b7Bible\u00b7Upgrade () \u2693\ufe0e void AddBibleUpgrade ( int Add, ItemPoolType PoolType ) \u2693\ufe0e Add\u00b7Room\u00b7Blacklist () \u2693\ufe0e void AddRoomBlacklist ( CollectibleType Item ) \u2693\ufe0e Force\u00b7Add\u00b7Pill\u00b7Effect () \u2693\ufe0e PillColor ForceAddPillEffect ( PillEffect ID ) \u2693\ufe0e Forces a pill effect to be in the pool, usually for challenges, returns PillColor for that effect. Get\u00b7Card () \u2693\ufe0e Card GetCard ( int Seed, boolean Playing, boolean Rune, boolean OnlyRunes ) \u2693\ufe0e Get\u00b7Collectible () \u2693\ufe0e CollectibleType GetCollectible ( ItemPoolType PoolType, boolean Decrease, int Seed ) \u2693\ufe0e Get\u00b7Last\u00b7Pool () \u2693\ufe0e ItemPoolType GetLastPool ( ) \u2693\ufe0e Get\u00b7Pill () \u2693\ufe0e PillColor GetPill ( int Seed ) \u2693\ufe0e Get\u00b7Pill\u00b7Effect () \u2693\ufe0e ItemConfig PillEffect GetPillEffect ( PillColor PillColor ) \u2693\ufe0e Get\u00b7Pool\u00b7For\u00b7Room () \u2693\ufe0e ItemPoolType GetPoolForRoom ( RoomType RoomType, int Seed ) \u2693\ufe0e Get\u00b7Trinket () \u2693\ufe0e TrinketType GetTrinket ( ) \u2693\ufe0e Identify\u00b7Pill () \u2693\ufe0e void IdentifyPill ( PillColor PillColor ) \u2693\ufe0e Is\u00b7Pill\u00b7Identified () \u2693\ufe0e boolean IsPillIdentified ( PillColor PillColor ) \u2693\ufe0e Remove\u00b7Collectible () \u2693\ufe0e boolean RemoveCollectible ( CollectibleType Collectible ) \u2693\ufe0e Removes a collectible from the itempool. Bugs This function will always return true, even when the given id does not exist! Remove\u00b7Trinket () \u2693\ufe0e boolean RemoveTrinket ( TrinketType Trinket ) \u2693\ufe0e Reset\u00b7Room\u00b7Blacklist () \u2693\ufe0e void ResetRoomBlacklist ( ) \u2693\ufe0e Reset\u00b7Trinkets () \u2693\ufe0e void ResetTrinkets ( ) \u2693\ufe0e","title":"ItemPool"},{"location":"ItemPool/#class-itempool","text":"","title":"Class \"ItemPool\""},{"location":"ItemPool/#functions","text":"","title":"Functions"},{"location":"ItemPool/#addbibleupgrade","text":"","title":"Add\u00b7Bible\u00b7Upgrade ()"},{"location":"ItemPool/#addroomblacklist","text":"","title":"Add\u00b7Room\u00b7Blacklist ()"},{"location":"ItemPool/#forceaddpilleffect","text":"","title":"Force\u00b7Add\u00b7Pill\u00b7Effect ()"},{"location":"ItemPool/#getcard","text":"","title":"Get\u00b7Card ()"},{"location":"ItemPool/#getcollectible","text":"","title":"Get\u00b7Collectible ()"},{"location":"ItemPool/#getlastpool","text":"","title":"Get\u00b7Last\u00b7Pool ()"},{"location":"ItemPool/#getpill","text":"","title":"Get\u00b7Pill ()"},{"location":"ItemPool/#getpilleffect","text":"","title":"Get\u00b7Pill\u00b7Effect ()"},{"location":"ItemPool/#getpoolforroom","text":"","title":"Get\u00b7Pool\u00b7For\u00b7Room ()"},{"location":"ItemPool/#gettrinket","text":"","title":"Get\u00b7Trinket ()"},{"location":"ItemPool/#identifypill","text":"","title":"Identify\u00b7Pill ()"},{"location":"ItemPool/#ispillidentified","text":"","title":"Is\u00b7Pill\u00b7Identified ()"},{"location":"ItemPool/#removecollectible","text":"","title":"Remove\u00b7Collectible ()"},{"location":"ItemPool/#removetrinket","text":"","title":"Remove\u00b7Trinket ()"},{"location":"ItemPool/#resetroomblacklist","text":"","title":"Reset\u00b7Room\u00b7Blacklist ()"},{"location":"ItemPool/#resettrinkets","text":"","title":"Reset\u00b7Trinkets ()"},{"location":"KColor/","text":"Class \"KColor\" \u2693\ufe0e Constructors \u2693\ufe0e KColor () \u2693\ufe0e KColor KColor ( float red, float green, float blue, float alpha ) \u2693\ufe0e Constructor for the \"KColor\" class. Notes: \"KColor\" is only used in the Font class. For most other situations you will need to use the Color() constructor. Variables \u2693\ufe0e Alpha \u2693\ufe0e float Alpha \u2693\ufe0e Blue \u2693\ufe0e float Blue \u2693\ufe0e Green \u2693\ufe0e float Green \u2693\ufe0e Red \u2693\ufe0e float Red \u2693\ufe0e","title":"KColor"},{"location":"KColor/#class-kcolor","text":"","title":"Class \"KColor\""},{"location":"KColor/#constructors","text":"","title":"Constructors"},{"location":"KColor/#kcolor","text":"","title":"KColor ()"},{"location":"KColor/#variables","text":"","title":"Variables"},{"location":"KColor/#alpha","text":"","title":"Alpha"},{"location":"KColor/#blue","text":"","title":"Blue"},{"location":"KColor/#green","text":"","title":"Green"},{"location":"KColor/#red","text":"","title":"Red"},{"location":"Level/","text":"Class \"Level\" \u2693\ufe0e Functions \u2693\ufe0e Add\u00b7Angel\u00b7Room\u00b7Chance () \u2693\ufe0e void AddAngelRoomChance ( float Chance ) \u2693\ufe0e Add\u00b7Curse () \u2693\ufe0e void AddCurse ( LevelCurse Curse, boolean ShowName ) \u2693\ufe0e Apply\u00b7Blue\u00b7Map\u00b7Effect () \u2693\ufe0e void ApplyBlueMapEffect ( ) \u2693\ufe0e Apply\u00b7Compass\u00b7Effect () \u2693\ufe0e void ApplyCompassEffect ( boolean Persistent ) \u2693\ufe0e Apply\u00b7Map\u00b7Effect () \u2693\ufe0e void ApplyMapEffect ( ) \u2693\ufe0e Can\u00b7Open\u00b7Challenge\u00b7Room () \u2693\ufe0e boolean CanOpenChallengeRoom ( int RoomIndex ) \u2693\ufe0e Can\u00b7Spawn\u00b7Devil\u00b7Room () \u2693\ufe0e boolean CanSpawnDevilRoom ( ) \u2693\ufe0e Can\u00b7Stage\u00b7Have\u00b7Curse\u00b7Of\u00b7Labyrinth () \u2693\ufe0e boolean CanStageHaveCurseOfLabyrinth ( LevelStage Stage ) \u2693\ufe0e Change\u00b7Room () \u2693\ufe0e void ChangeRoom ( int RoomIndex ) \u2693\ufe0e Disable\u00b7Devil\u00b7Room () \u2693\ufe0e void DisableDevilRoom ( ) \u2693\ufe0e Force\u00b7Horseman\u00b7Boss () \u2693\ufe0e boolean ForceHorsemanBoss ( int Seed ) \u2693\ufe0e return true on success Get\u00b7Absolute\u00b7Stage () \u2693\ufe0e LevelStage GetAbsoluteStage ( ) \u2693\ufe0e Returns the absolute stage, if its greed mode its converted to equivalent one. Get\u00b7Angel\u00b7Room\u00b7Chance () \u2693\ufe0e float GetAngelRoomChance ( ) \u2693\ufe0e Get\u00b7Can\u00b7See\u00b7Everything () \u2693\ufe0e boolean GetCanSeeEverything ( ) \u2693\ufe0e Get\u00b7Current\u00b7Room () \u2693\ufe0e Room GetCurrentRoom ( ) \u2693\ufe0e Get\u00b7Current\u00b7Room\u00b7Desc () \u2693\ufe0e RoomDescriptor GetCurrentRoomDesc ( ) \u2693\ufe0e Get\u00b7Current\u00b7Room\u00b7Index () \u2693\ufe0e int GetCurrentRoomIndex ( ) \u2693\ufe0e Notes This will always return the roomindex on the levelgrid, on which you entered the current room from. (see black entries in graphic below) Get\u00b7Curse\u00b7Name () \u2693\ufe0e string GetCurseName ( ) \u2693\ufe0e Get\u00b7Curses () \u2693\ufe0e int GetCurses ( ) \u2693\ufe0e Get\u00b7Devil\u00b7Angel\u00b7Room\u00b7RNG () \u2693\ufe0e RNG GetDevilAngelRoomRNG ( ) \u2693\ufe0e Get\u00b7Dungeon\u00b7Placement\u00b7Seed () \u2693\ufe0e int GetDungeonPlacementSeed ( ) \u2693\ufe0e Get\u00b7Enter\u00b7Position () \u2693\ufe0e Vector GetEnterPosition ( ) \u2693\ufe0e Get\u00b7Heart\u00b7Picked () \u2693\ufe0e boolean GetHeartPicked ( ) \u2693\ufe0e Get\u00b7Last\u00b7Boss\u00b7Room\u00b7List\u00b7Index () \u2693\ufe0e int GetLastBossRoomListIndex ( ) \u2693\ufe0e Get\u00b7Last\u00b7Room\u00b7Desc () \u2693\ufe0e RoomDescriptor GetLastRoomDesc ( ) \u2693\ufe0e Get\u00b7Name () \u2693\ufe0e string GetName ( LevelStage Stage, StageType Type, int Curses, int InfiniteLevel, boolean Dyslexia ) \u2693\ufe0e Get\u00b7Non\u00b7Complete\u00b7Room\u00b7Index () \u2693\ufe0e int GetNonCompleteRoomIndex ( ) \u2693\ufe0e Get\u00b7Previous\u00b7Room\u00b7Index () \u2693\ufe0e int GetPreviousRoomIndex ( ) \u2693\ufe0e Get\u00b7Random\u00b7Room\u00b7Index () \u2693\ufe0e int GetRandomRoomIndex ( boolean IAmErrorRoom, int Seed ) \u2693\ufe0e Get\u00b7Room\u00b7By\u00b7Idx () \u2693\ufe0e RoomDescriptor GetRoomByIdx ( int RoomIdx ) \u2693\ufe0e Get\u00b7Room\u00b7Count () \u2693\ufe0e int GetRoomCount ( ) \u2693\ufe0e Get\u00b7Rooms () \u2693\ufe0e RoomDescriptor List GetRooms ( ) \u2693\ufe0e Get\u00b7Stage () \u2693\ufe0e LevelStage GetStage ( ) \u2693\ufe0e Get\u00b7Stage\u00b7Type () \u2693\ufe0e StageType GetStageType ( ) \u2693\ufe0e Get\u00b7Starting\u00b7Room\u00b7Index () \u2693\ufe0e int GetStartingRoomIndex ( ) \u2693\ufe0e Get\u00b7State\u00b7Flag () \u2693\ufe0e boolean GetStateFlag ( StateFlag StateFlag ) \u2693\ufe0e Has\u00b7Boss\u00b7Challenge () \u2693\ufe0e boolean HasBossChallenge ( ) \u2693\ufe0e Initialize\u00b7Devil\u00b7Angel\u00b7Room () \u2693\ufe0e void InitializeDevilAngelRoom ( boolean ForceAngel, boolean ForceDevil ) \u2693\ufe0e Is\u00b7Alt\u00b7Stage () \u2693\ufe0e boolean IsAltStage ( ) \u2693\ufe0e Is\u00b7Devil\u00b7Room\u00b7Disabled () \u2693\ufe0e boolean IsDevilRoomDisabled ( ) \u2693\ufe0e Is\u00b7Next\u00b7Stage\u00b7Available () \u2693\ufe0e boolean IsNextStageAvailable ( ) \u2693\ufe0e Query\u00b7Room\u00b7Type\u00b7Index () \u2693\ufe0e int QueryRoomTypeIndex ( RoomType RoomType, boolean Visited, RNG rng ) \u2693\ufe0e Remove\u00b7Compass\u00b7Effect () \u2693\ufe0e void RemoveCompassEffect ( ) \u2693\ufe0e Remove\u00b7Curse () \u2693\ufe0e void RemoveCurse ( LevelCurse Curse ) \u2693\ufe0e Remove\u00b7Curses () \u2693\ufe0e void RemoveCurses ( ) \u2693\ufe0e Set\u00b7Can\u00b7See\u00b7Everything () \u2693\ufe0e void SetCanSeeEverything ( boolean Value ) \u2693\ufe0e Set\u00b7Heart\u00b7Picked () \u2693\ufe0e void SetHeartPicked ( ) \u2693\ufe0e Set\u00b7Next\u00b7Stage () \u2693\ufe0e void SetNextStage ( ) \u2693\ufe0e This function teleports you directly to the next stage without playing the leveltransition or updating the floors backdrop. Use other functions to fix those issues. Set\u00b7Red\u00b7Heart\u00b7Damage () \u2693\ufe0e void SetRedHeartDamage ( ) \u2693\ufe0e Set\u00b7Stage () \u2693\ufe0e void SetStage ( LevelStage Stage, StageType StageType ) \u2693\ufe0e for SetStage/SetNextStage to have effect, call Init afterward Set\u00b7State\u00b7Flag () \u2693\ufe0e void SetStateFlag ( StateFlag StateFlag, boolean Val ) \u2693\ufe0e Show\u00b7Map () \u2693\ufe0e void ShowMap ( ) \u2693\ufe0e Show's all map (world/sun card effect) except the top secret room. Show\u00b7Name () \u2693\ufe0e void ShowName ( boolean Sticky ) \u2693\ufe0e Uncover\u00b7Hidden\u00b7Door () \u2693\ufe0e void UncoverHiddenDoor ( int CurrentRoomIdx, DoorSlot Slot ) \u2693\ufe0e Uncovers the door on both sides by modifying the saved grid entities for neighboring room. Update () \u2693\ufe0e void Update ( ) \u2693\ufe0e Update\u00b7Visibility () \u2693\ufe0e void UpdateVisibility ( ) \u2693\ufe0e Notes Whenever you update the visibility of a room on the minimap, it won't update the map automatically, since it is cached. You have to explicitly call UpdateVisibility() afterwards to apply any changes. Example Code This code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 -- Local variables local game = Game () local level = game : GetLevel () -- Give the player the Compass effect, which will display all of the floor's special rooms on the mini-map level : ApplyCompassEffect () -- Remove the icon for the Treasure Room specifically local treasureIndex = level : QueryRoomTypeIndex ( RoomType . ROOM_TREASURE , false , RNG ()) local treasureRoom = level : GetRoomByIdx ( treasureIndex ) treasureRoom . DisplayFlags = 0 -- Since the mini-map is cached, changing display flags won't update it unless we explicitly call this function level : UpdateVisibility () Variables \u2693\ufe0e Dungeon\u00b7Return\u00b7Position \u2693\ufe0e Vector DungeonReturnPosition \u2693\ufe0e Dungeon\u00b7Return\u00b7Room\u00b7Index \u2693\ufe0e int DungeonReturnRoomIndex \u2693\ufe0e Enter\u00b7Door \u2693\ufe0e int EnterDoor \u2693\ufe0e 1 This value defines on which doorslot you entered the room. Bugs Changing this value has no impact on anything. the EnterDoor value is always determined by the LeaveDoor Value and the game itself. Greed\u00b7Mode\u00b7Wave \u2693\ufe0e int GreedModeWave \u2693\ufe0e Leave\u00b7Door \u2693\ufe0e int LeaveDoor \u2693\ufe0e 1 This value defines on which doorslot you are positioned after the transition. You will always end up at the oposite side of the door specified. Example: LeaveDoor=1 (Up0) will position you at Doorslot Down0 (Logic: Doorslot+2) Notes if level.LeaveDoor is set to anything other than -1, the function will transition based on the room you are currently in.","title":"Level"},{"location":"Level/#class-level","text":"","title":"Class \"Level\""},{"location":"Level/#functions","text":"","title":"Functions"},{"location":"Level/#addangelroomchance","text":"","title":"Add\u00b7Angel\u00b7Room\u00b7Chance ()"},{"location":"Level/#addcurse","text":"","title":"Add\u00b7Curse ()"},{"location":"Level/#applybluemapeffect","text":"","title":"Apply\u00b7Blue\u00b7Map\u00b7Effect ()"},{"location":"Level/#applycompasseffect","text":"","title":"Apply\u00b7Compass\u00b7Effect ()"},{"location":"Level/#applymapeffect","text":"","title":"Apply\u00b7Map\u00b7Effect ()"},{"location":"Level/#canopenchallengeroom","text":"","title":"Can\u00b7Open\u00b7Challenge\u00b7Room ()"},{"location":"Level/#canspawndevilroom","text":"","title":"Can\u00b7Spawn\u00b7Devil\u00b7Room ()"},{"location":"Level/#canstagehavecurseoflabyrinth","text":"","title":"Can\u00b7Stage\u00b7Have\u00b7Curse\u00b7Of\u00b7Labyrinth ()"},{"location":"Level/#changeroom","text":"","title":"Change\u00b7Room ()"},{"location":"Level/#disabledevilroom","text":"","title":"Disable\u00b7Devil\u00b7Room ()"},{"location":"Level/#forcehorsemanboss","text":"","title":"Force\u00b7Horseman\u00b7Boss ()"},{"location":"Level/#getabsolutestage","text":"","title":"Get\u00b7Absolute\u00b7Stage ()"},{"location":"Level/#getangelroomchance","text":"","title":"Get\u00b7Angel\u00b7Room\u00b7Chance ()"},{"location":"Level/#getcanseeeverything","text":"","title":"Get\u00b7Can\u00b7See\u00b7Everything ()"},{"location":"Level/#getcurrentroom","text":"","title":"Get\u00b7Current\u00b7Room ()"},{"location":"Level/#getcurrentroomdesc","text":"","title":"Get\u00b7Current\u00b7Room\u00b7Desc ()"},{"location":"Level/#getcurrentroomindex","text":"","title":"Get\u00b7Current\u00b7Room\u00b7Index ()"},{"location":"Level/#getcursename","text":"","title":"Get\u00b7Curse\u00b7Name ()"},{"location":"Level/#getcurses","text":"","title":"Get\u00b7Curses ()"},{"location":"Level/#getdevilangelroomrng","text":"","title":"Get\u00b7Devil\u00b7Angel\u00b7Room\u00b7RNG ()"},{"location":"Level/#getdungeonplacementseed","text":"","title":"Get\u00b7Dungeon\u00b7Placement\u00b7Seed ()"},{"location":"Level/#getenterposition","text":"","title":"Get\u00b7Enter\u00b7Position ()"},{"location":"Level/#getheartpicked","text":"","title":"Get\u00b7Heart\u00b7Picked ()"},{"location":"Level/#getlastbossroomlistindex","text":"","title":"Get\u00b7Last\u00b7Boss\u00b7Room\u00b7List\u00b7Index ()"},{"location":"Level/#getlastroomdesc","text":"","title":"Get\u00b7Last\u00b7Room\u00b7Desc ()"},{"location":"Level/#getname","text":"","title":"Get\u00b7Name ()"},{"location":"Level/#getnoncompleteroomindex","text":"","title":"Get\u00b7Non\u00b7Complete\u00b7Room\u00b7Index ()"},{"location":"Level/#getpreviousroomindex","text":"","title":"Get\u00b7Previous\u00b7Room\u00b7Index ()"},{"location":"Level/#getrandomroomindex","text":"","title":"Get\u00b7Random\u00b7Room\u00b7Index ()"},{"location":"Level/#getroombyidx","text":"","title":"Get\u00b7Room\u00b7By\u00b7Idx ()"},{"location":"Level/#getroomcount","text":"","title":"Get\u00b7Room\u00b7Count ()"},{"location":"Level/#getrooms","text":"","title":"Get\u00b7Rooms ()"},{"location":"Level/#getstage","text":"","title":"Get\u00b7Stage ()"},{"location":"Level/#getstagetype","text":"","title":"Get\u00b7Stage\u00b7Type ()"},{"location":"Level/#getstartingroomindex","text":"","title":"Get\u00b7Starting\u00b7Room\u00b7Index ()"},{"location":"Level/#getstateflag","text":"","title":"Get\u00b7State\u00b7Flag ()"},{"location":"Level/#hasbosschallenge","text":"","title":"Has\u00b7Boss\u00b7Challenge ()"},{"location":"Level/#initializedevilangelroom","text":"","title":"Initialize\u00b7Devil\u00b7Angel\u00b7Room ()"},{"location":"Level/#isaltstage","text":"","title":"Is\u00b7Alt\u00b7Stage ()"},{"location":"Level/#isdevilroomdisabled","text":"","title":"Is\u00b7Devil\u00b7Room\u00b7Disabled ()"},{"location":"Level/#isnextstageavailable","text":"","title":"Is\u00b7Next\u00b7Stage\u00b7Available ()"},{"location":"Level/#queryroomtypeindex","text":"","title":"Query\u00b7Room\u00b7Type\u00b7Index ()"},{"location":"Level/#removecompasseffect","text":"","title":"Remove\u00b7Compass\u00b7Effect ()"},{"location":"Level/#removecurse","text":"","title":"Remove\u00b7Curse ()"},{"location":"Level/#removecurses","text":"","title":"Remove\u00b7Curses ()"},{"location":"Level/#setcanseeeverything","text":"","title":"Set\u00b7Can\u00b7See\u00b7Everything ()"},{"location":"Level/#setheartpicked","text":"","title":"Set\u00b7Heart\u00b7Picked ()"},{"location":"Level/#setnextstage","text":"","title":"Set\u00b7Next\u00b7Stage ()"},{"location":"Level/#setredheartdamage","text":"","title":"Set\u00b7Red\u00b7Heart\u00b7Damage ()"},{"location":"Level/#setstage","text":"","title":"Set\u00b7Stage ()"},{"location":"Level/#setstateflag","text":"","title":"Set\u00b7State\u00b7Flag ()"},{"location":"Level/#showmap","text":"","title":"Show\u00b7Map ()"},{"location":"Level/#showname","text":"","title":"Show\u00b7Name ()"},{"location":"Level/#uncoverhiddendoor","text":"","title":"Uncover\u00b7Hidden\u00b7Door ()"},{"location":"Level/#update","text":"","title":"Update ()"},{"location":"Level/#updatevisibility","text":"","title":"Update\u00b7Visibility ()"},{"location":"Level/#variables","text":"","title":"Variables"},{"location":"Level/#dungeonreturnposition","text":"","title":"Dungeon\u00b7Return\u00b7Position"},{"location":"Level/#dungeonreturnroomindex","text":"","title":"Dungeon\u00b7Return\u00b7Room\u00b7Index"},{"location":"Level/#enterdoor","text":"","title":"Enter\u00b7Door"},{"location":"Level/#greedmodewave","text":"","title":"Greed\u00b7Mode\u00b7Wave"},{"location":"Level/#leavedoor","text":"","title":"Leave\u00b7Door"},{"location":"ModReference/","text":"Class \"Mod Reference\" \u2693\ufe0e Functions \u2693\ufe0e Add\u00b7Callback () \u2693\ufe0e void AddCallback ( int callbackId, function callbackFn, int entityId ) \u2693\ufe0e Has\u00b7Data () \u2693\ufe0e boolean HasData ( ) \u2693\ufe0e Returns \"true\" if your mod has Data stored using the \"SaveData()\" function. Aka. if there is a \"saveX.dat\" file in your mod folder. There are 3 \"saveX.dat\" files, one per Savegame. They are stored in the mod's folder next to the \"main.lua\" file. The number indicates the savegame it corresponds to. The number will be determined automatically by the game. Load\u00b7Data () \u2693\ufe0e string LoadData ( ) \u2693\ufe0e Returns a string that was stored in a \"saveX.dat\" file using the \"SaveData()\" function. If there is no \"saveX.dat\" file in your mod, this function will return an empty string. There are 3 \"saveX.dat\" files, one per Savegame. They are stored in the mod's folder next to the \"main.lua\" file. The number indicates the savegame it corresponds to. The number will be determined automatically by the game. Example Code This code loads a string that was stored in the \"saveX.dat\" file, if it exists, and converts it into a table using JSON. 1 2 3 4 5 6 7 8 9 10 local yourMod = RegisterMod ( \"someMod\" , 1 ) local json = require ( \"json\" ) -- ... function yourMod : OnGameStart ( isSave ) --Loading Moddata-- if yourMod : HasData () then local myTable = json . decode ( yourMod : LoadData ()) end end yourMod : AddCallback ( ModCallbacks . MC_POST_GAME_STARTED , yourMod . OnGameStart ) Remove\u00b7Callback () \u2693\ufe0e void RemoveCallback ( int callbackId, function callbackFn ) \u2693\ufe0e Remove\u00b7Data () \u2693\ufe0e void RemoveData ( ) \u2693\ufe0e Deletes the stored \"saveX.dat\" file if it exists. There are 3 \"saveX.dat\" files, one per Savegame. They are stored in the mod's folder next to the \"main.lua\" file. The number indicates the savegame it corresponds to. The number will be determined automatically by the game. Save\u00b7Data () \u2693\ufe0e void SaveData ( string data ) \u2693\ufe0e Stores a string in a \"saveX.dat\" file. The stored Data persists thruout resets and game restart, so its perfect to store persistent data. There are 3 \"saveX.dat\" files, one per Savegame. They are stored in the mod's folder next to the \"main.lua\" file. The number indicates the savegame it corresponds to. The number will be determined automatically by the game. Example Code This code uses JSON to convert a table into a string, and saves it in the \"saveX.dat\" file. 1 2 3 4 5 6 7 8 9 local yourMod = RegisterMod ( \"someMod\" , 1 ) local json = require ( \"json\" ) -- ... --Saving Moddata-- function yourMod : SaveGame () local table = { 1 , 2 , 3 } yourMod : SaveData ( json . encode ( table )) end yourMod : AddCallback ( ModCallbacks . MC_PRE_GAME_EXIT , yourMod . SaveGame ) Variables \u2693\ufe0e Name \u2693\ufe0e string Name \u2693\ufe0e","title":"Mod Reference"},{"location":"ModReference/#class-mod-reference","text":"","title":"Class \"Mod Reference\""},{"location":"ModReference/#functions","text":"","title":"Functions"},{"location":"ModReference/#addcallback","text":"","title":"Add\u00b7Callback ()"},{"location":"ModReference/#hasdata","text":"","title":"Has\u00b7Data ()"},{"location":"ModReference/#loaddata","text":"","title":"Load\u00b7Data ()"},{"location":"ModReference/#removecallback","text":"","title":"Remove\u00b7Callback ()"},{"location":"ModReference/#removedata","text":"","title":"Remove\u00b7Data ()"},{"location":"ModReference/#savedata","text":"","title":"Save\u00b7Data ()"},{"location":"ModReference/#variables","text":"","title":"Variables"},{"location":"ModReference/#name","text":"","title":"Name"},{"location":"MusicManager/","text":"Class \"MusicManager\" \u2693\ufe0e Constructors \u2693\ufe0e Music\u00b7Manager () \u2693\ufe0e MusicManager MusicManager ( ) \u2693\ufe0e Returns a MusicManager object. Example Code Example usage: 1 MusicManager (): Disable () Functions \u2693\ufe0e Crossfade () \u2693\ufe0e void Crossfade ( MusicManager ID ) \u2693\ufe0e Disable () \u2693\ufe0e void Disable ( ) \u2693\ufe0e Disable\u00b7Layer () \u2693\ufe0e void DisableLayer ( ) \u2693\ufe0e Enable () \u2693\ufe0e void Enable ( ) \u2693\ufe0e Enable\u00b7Layer () \u2693\ufe0e void EnableLayer ( ) \u2693\ufe0e Fadein () \u2693\ufe0e void Fadein ( MusicManager ID, float Volume ) \u2693\ufe0e Fadeout () \u2693\ufe0e void Fadeout ( ) \u2693\ufe0e Get\u00b7Current\u00b7Music\u00b7ID () \u2693\ufe0e MusicManager GetCurrentMusicID ( ) \u2693\ufe0e Get\u00b7Queued\u00b7Music\u00b7ID () \u2693\ufe0e MusicManager GetQueuedMusicID ( ) \u2693\ufe0e if nothing is queued, return the current music id Is\u00b7Enabled () \u2693\ufe0e boolean IsEnabled ( ) \u2693\ufe0e Is\u00b7Layer\u00b7Enabled () \u2693\ufe0e boolean IsLayerEnabled ( ) \u2693\ufe0e Pause () \u2693\ufe0e void Pause ( ) \u2693\ufe0e Pitch\u00b7Slide () \u2693\ufe0e void PitchSlide ( float TargetPitch ) \u2693\ufe0e Play () \u2693\ufe0e void Play ( MusicManager ID, float Volume ) \u2693\ufe0e Queue () \u2693\ufe0e void Queue ( MusicManager ID ) \u2693\ufe0e Reset\u00b7Pitch () \u2693\ufe0e void ResetPitch ( ) \u2693\ufe0e Resume () \u2693\ufe0e void Resume ( ) \u2693\ufe0e Update\u00b7Volume () \u2693\ufe0e void UpdateVolume ( ) \u2693\ufe0e This function sets the music volume to the volume defined in the options menu. Volume\u00b7Slide () \u2693\ufe0e void VolumeSlide ( float TargetVolume ) \u2693\ufe0e","title":"MusicManager"},{"location":"MusicManager/#class-musicmanager","text":"","title":"Class \"MusicManager\""},{"location":"MusicManager/#constructors","text":"","title":"Constructors"},{"location":"MusicManager/#musicmanager","text":"","title":"Music\u00b7Manager ()"},{"location":"MusicManager/#functions","text":"","title":"Functions"},{"location":"MusicManager/#crossfade","text":"","title":"Crossfade ()"},{"location":"MusicManager/#disable","text":"","title":"Disable ()"},{"location":"MusicManager/#disablelayer","text":"","title":"Disable\u00b7Layer ()"},{"location":"MusicManager/#enable","text":"","title":"Enable ()"},{"location":"MusicManager/#enablelayer","text":"","title":"Enable\u00b7Layer ()"},{"location":"MusicManager/#fadein","text":"","title":"Fadein ()"},{"location":"MusicManager/#fadeout","text":"","title":"Fadeout ()"},{"location":"MusicManager/#getcurrentmusicid","text":"","title":"Get\u00b7Current\u00b7Music\u00b7ID ()"},{"location":"MusicManager/#getqueuedmusicid","text":"","title":"Get\u00b7Queued\u00b7Music\u00b7ID ()"},{"location":"MusicManager/#isenabled","text":"","title":"Is\u00b7Enabled ()"},{"location":"MusicManager/#islayerenabled","text":"","title":"Is\u00b7Layer\u00b7Enabled ()"},{"location":"MusicManager/#pause","text":"","title":"Pause ()"},{"location":"MusicManager/#pitchslide","text":"","title":"Pitch\u00b7Slide ()"},{"location":"MusicManager/#play","text":"","title":"Play ()"},{"location":"MusicManager/#queue","text":"","title":"Queue ()"},{"location":"MusicManager/#resetpitch","text":"","title":"Reset\u00b7Pitch ()"},{"location":"MusicManager/#resume","text":"","title":"Resume ()"},{"location":"MusicManager/#updatevolume","text":"","title":"Update\u00b7Volume ()"},{"location":"MusicManager/#volumeslide","text":"","title":"Volume\u00b7Slide ()"},{"location":"PLACEHOLDER/","text":"","title":"10"},{"location":"PathFinder/","text":"Class \"PathFinder\" \u2693\ufe0e Functions \u2693\ufe0e Evade\u00b7Target () \u2693\ufe0e void EvadeTarget ( Vector TargetPos ) \u2693\ufe0e Find\u00b7Grid\u00b7Path () \u2693\ufe0e void FindGridPath ( Vector Pos, float Speed, int PathMarker, boolean UseDirectPath ) \u2693\ufe0e Get\u00b7Evade\u00b7Movement\u00b7Countdown () \u2693\ufe0e int GetEvadeMovementCountdown ( ) \u2693\ufe0e Get\u00b7Grid\u00b7Index () \u2693\ufe0e int GetGridIndex ( ) \u2693\ufe0e Has\u00b7Direct\u00b7Path () \u2693\ufe0e boolean HasDirectPath ( ) \u2693\ufe0e Has\u00b7Path\u00b7To\u00b7Pos () \u2693\ufe0e boolean HasPathToPos ( Vector Pos, boolean IgnorePoop ) \u2693\ufe0e Used for safe check if any NPC is behind rocks/pits, doesn't disturb class members. Move\u00b7Randomly () \u2693\ufe0e boolean MoveRandomly ( boolean IgnoreStatusEffects ) \u2693\ufe0e Move\u00b7Randomly\u00b7Axis\u00b7Aligned () \u2693\ufe0e void MoveRandomlyAxisAligned ( float Speed, boolean IgnoreStatusEffects ) \u2693\ufe0e Move\u00b7Randomly\u00b7Boss () \u2693\ufe0e void MoveRandomlyBoss ( boolean IgnoreStatusEffects ) \u2693\ufe0e Reset () \u2693\ufe0e void Reset ( ) \u2693\ufe0e Reset\u00b7Movement\u00b7Target () \u2693\ufe0e void ResetMovementTarget ( ) \u2693\ufe0e Set\u00b7Can\u00b7Crush\u00b7Rocks () \u2693\ufe0e void SetCanCrushRocks ( boolean value ) \u2693\ufe0e Update\u00b7Grid\u00b7Index () \u2693\ufe0e void UpdateGridIndex ( ) \u2693\ufe0e","title":"PathFinder"},{"location":"PathFinder/#class-pathfinder","text":"","title":"Class \"PathFinder\""},{"location":"PathFinder/#functions","text":"","title":"Functions"},{"location":"PathFinder/#evadetarget","text":"","title":"Evade\u00b7Target ()"},{"location":"PathFinder/#findgridpath","text":"","title":"Find\u00b7Grid\u00b7Path ()"},{"location":"PathFinder/#getevademovementcountdown","text":"","title":"Get\u00b7Evade\u00b7Movement\u00b7Countdown ()"},{"location":"PathFinder/#getgridindex","text":"","title":"Get\u00b7Grid\u00b7Index ()"},{"location":"PathFinder/#hasdirectpath","text":"","title":"Has\u00b7Direct\u00b7Path ()"},{"location":"PathFinder/#haspathtopos","text":"","title":"Has\u00b7Path\u00b7To\u00b7Pos ()"},{"location":"PathFinder/#moverandomly","text":"","title":"Move\u00b7Randomly ()"},{"location":"PathFinder/#moverandomlyaxisaligned","text":"","title":"Move\u00b7Randomly\u00b7Axis\u00b7Aligned ()"},{"location":"PathFinder/#moverandomlyboss","text":"","title":"Move\u00b7Randomly\u00b7Boss ()"},{"location":"PathFinder/#reset","text":"","title":"Reset ()"},{"location":"PathFinder/#resetmovementtarget","text":"","title":"Reset\u00b7Movement\u00b7Target ()"},{"location":"PathFinder/#setcancrushrocks","text":"","title":"Set\u00b7Can\u00b7Crush\u00b7Rocks ()"},{"location":"PathFinder/#updategridindex","text":"","title":"Update\u00b7Grid\u00b7Index ()"},{"location":"PlayerTypes_ActiveItemDesc/","text":"Class \"PlayerTypes::ActiveItemDesc\" \u2693\ufe0e Variables \u2693\ufe0e Battery\u00b7Charge \u2693\ufe0e int BatteryCharge \u2693\ufe0e Charge \u2693\ufe0e int Charge \u2693\ufe0e For items like Jars this holds the number of flies/hearts. Item \u2693\ufe0e CollectibleType Item \u2693\ufe0e Lock \u2693\ufe0e boolean Lock \u2693\ufe0e Helper, avoids double charge on full charge.","title":"PlayerTypes::ActiveItemDesc"},{"location":"PlayerTypes_ActiveItemDesc/#class-playertypesactiveitemdesc","text":"","title":"Class \"PlayerTypes::ActiveItemDesc\""},{"location":"PlayerTypes_ActiveItemDesc/#variables","text":"","title":"Variables"},{"location":"PlayerTypes_ActiveItemDesc/#batterycharge","text":"","title":"Battery\u00b7Charge"},{"location":"PlayerTypes_ActiveItemDesc/#charge","text":"","title":"Charge"},{"location":"PlayerTypes_ActiveItemDesc/#item","text":"","title":"Item"},{"location":"PlayerTypes_ActiveItemDesc/#lock","text":"","title":"Lock"},{"location":"PlayerTypes_PosVel/","text":"Class \"PlayerTypes::PosVel\" \u2693\ufe0e Variables \u2693\ufe0e Position \u2693\ufe0e Vector Position \u2693\ufe0e Velocity \u2693\ufe0e Vector Velocity \u2693\ufe0e","title":"PlayerTypes::PosVel"},{"location":"PlayerTypes_PosVel/#class-playertypesposvel","text":"","title":"Class \"PlayerTypes::PosVel\""},{"location":"PlayerTypes_PosVel/#variables","text":"","title":"Variables"},{"location":"PlayerTypes_PosVel/#position","text":"","title":"Position"},{"location":"PlayerTypes_PosVel/#velocity","text":"","title":"Velocity"},{"location":"ProjectileParams/","text":"Class \"ProjectileParams\" \u2693\ufe0e Constructors \u2693\ufe0e Projectile\u00b7Params () \u2693\ufe0e ProjectileParams ProjectileParams ( ) \u2693\ufe0e Variables \u2693\ufe0e Acceleration \u2693\ufe0e float Acceleration \u2693\ufe0e Bullet\u00b7Flags \u2693\ufe0e int BulletFlags \u2693\ufe0e Change\u00b7Flags \u2693\ufe0e int ChangeFlags \u2693\ufe0e Uses ProjectileFlags to define the projectile attributes after the \"Changed\" state was activated. The ProjectileFlag .CHANGE_FLAGS_AFTER_TIMEOUT needs to be set to allow for this change to apply! Informations about \"Changed\" State: Projectiles can have two states: normal (default) and changed. Changed state activates when projectile's frame count reaches the value set in ChangeTimeout . After that its flags get changed to what was set in ChangeFlags and velocity will be resized to length set in ChangeVelocity . Also used in: EntityProjectile Change\u00b7Timeout \u2693\ufe0e int ChangeTimeout \u2693\ufe0e Number of frames that need to elapse after spawn till the \"Changed\" state is activated. The ProjectileFlag .CHANGE_FLAGS_AFTER_TIMEOUT or CHANGE_VELOCITY_AFTER_TIMEOUT need to be set to allow for this change to apply! Informations about \"Changed\" State: Projectiles can have two states: normal (default) and changed. Changed state activates when projectile's frame count reaches the value set in ChangeTimeout . After that its flags get changed to what was set in ChangeFlags and velocity will be resized to length set in ChangeVelocity . Also used in: EntityProjectile Change\u00b7Velocity \u2693\ufe0e float ChangeVelocity \u2693\ufe0e Velocity value that gets applied when the \"Changed\" state is activated. The ProjectileFlag .CHANGE_VELOCITY_AFTER_TIMEOUT need to be set to allow for this change to apply! Informations about \"Changed\" State: Projectiles can have two states: normal (default) and changed. Changed state activates when projectile's frame count reaches the value set in ChangeTimeout . After that its flags get changed to what was set in ChangeFlags and velocity will be resized to length set in ChangeVelocity . Also used in: EntityProjectile Circle\u00b7Angle \u2693\ufe0e float CircleAngle \u2693\ufe0e Angle offset used by fire_projectiles PROJECTILES_CIRCLE type emitter. Random by default. Curving\u00b7Strength \u2693\ufe0e float CurvingStrength \u2693\ufe0e Use very small values for curving like 0.005. Depth\u00b7Offset \u2693\ufe0e float DepthOffset \u2693\ufe0e Dot\u00b7Product\u00b7Limit \u2693\ufe0e float DotProductLimit \u2693\ufe0e Direction bullets are being fired in Dot product of FireDirectionLimit, bullet direction must be >= this value Falling\u00b7Accel\u00b7Modifier \u2693\ufe0e float FallingAccelModifier \u2693\ufe0e Falling\u00b7Speed\u00b7Modifier \u2693\ufe0e float FallingSpeedModifier \u2693\ufe0e Fire\u00b7Direction\u00b7Limit \u2693\ufe0e Vector FireDirectionLimit \u2693\ufe0e Grid\u00b7Collision \u2693\ufe0e boolean GridCollision \u2693\ufe0e Height\u00b7Modifier \u2693\ufe0e float HeightModifier \u2693\ufe0e Homing\u00b7Strength \u2693\ufe0e float HomingStrength \u2693\ufe0e Multiplier on normal homing strength. Unused if SMART bullet flag is not set. Color \u2693\ufe0e Color Color \u2693\ufe0e Position\u00b7Offset \u2693\ufe0e Vector PositionOffset \u2693\ufe0e Scale \u2693\ufe0e float Scale \u2693\ufe0e Spread \u2693\ufe0e float Spread \u2693\ufe0e For quad/quint/etc spread shots. Target\u00b7Position \u2693\ufe0e Vector TargetPosition \u2693\ufe0e Variant \u2693\ufe0e int Variant \u2693\ufe0e Velocity\u00b7Multi \u2693\ufe0e float VelocityMulti \u2693\ufe0e Wiggle\u00b7Frame\u00b7Offset \u2693\ufe0e int WiggleFrameOffset \u2693\ufe0e Used to offset the wiggle wave.","title":"ProjectileParams"},{"location":"ProjectileParams/#class-projectileparams","text":"","title":"Class \"ProjectileParams\""},{"location":"ProjectileParams/#constructors","text":"","title":"Constructors"},{"location":"ProjectileParams/#projectileparams","text":"","title":"Projectile\u00b7Params ()"},{"location":"ProjectileParams/#variables","text":"","title":"Variables"},{"location":"ProjectileParams/#acceleration","text":"","title":"Acceleration"},{"location":"ProjectileParams/#bulletflags","text":"","title":"Bullet\u00b7Flags"},{"location":"ProjectileParams/#changeflags","text":"","title":"Change\u00b7Flags"},{"location":"ProjectileParams/#changetimeout","text":"","title":"Change\u00b7Timeout"},{"location":"ProjectileParams/#changevelocity","text":"","title":"Change\u00b7Velocity"},{"location":"ProjectileParams/#circleangle","text":"","title":"Circle\u00b7Angle"},{"location":"ProjectileParams/#curvingstrength","text":"","title":"Curving\u00b7Strength"},{"location":"ProjectileParams/#depthoffset","text":"","title":"Depth\u00b7Offset"},{"location":"ProjectileParams/#dotproductlimit","text":"","title":"Dot\u00b7Product\u00b7Limit"},{"location":"ProjectileParams/#fallingaccelmodifier","text":"","title":"Falling\u00b7Accel\u00b7Modifier"},{"location":"ProjectileParams/#fallingspeedmodifier","text":"","title":"Falling\u00b7Speed\u00b7Modifier"},{"location":"ProjectileParams/#firedirectionlimit","text":"","title":"Fire\u00b7Direction\u00b7Limit"},{"location":"ProjectileParams/#gridcollision","text":"","title":"Grid\u00b7Collision"},{"location":"ProjectileParams/#heightmodifier","text":"","title":"Height\u00b7Modifier"},{"location":"ProjectileParams/#homingstrength","text":"","title":"Homing\u00b7Strength"},{"location":"ProjectileParams/#color","text":"","title":"Color"},{"location":"ProjectileParams/#positionoffset","text":"","title":"Position\u00b7Offset"},{"location":"ProjectileParams/#scale","text":"","title":"Scale"},{"location":"ProjectileParams/#spread","text":"","title":"Spread"},{"location":"ProjectileParams/#targetposition","text":"","title":"Target\u00b7Position"},{"location":"ProjectileParams/#variant","text":"","title":"Variant"},{"location":"ProjectileParams/#velocitymulti","text":"","title":"Velocity\u00b7Multi"},{"location":"ProjectileParams/#wiggleframeoffset","text":"","title":"Wiggle\u00b7Frame\u00b7Offset"},{"location":"QueueItemData/","text":"Class \"QueueItemData\" \u2693\ufe0e Variables \u2693\ufe0e Charge \u2693\ufe0e int Charge \u2693\ufe0e Item \u2693\ufe0e ItemConfig Item \u2693\ufe0e Touched \u2693\ufe0e boolean Touched \u2693\ufe0e","title":"QueueItemData"},{"location":"QueueItemData/#class-queueitemdata","text":"","title":"Class \"QueueItemData\""},{"location":"QueueItemData/#variables","text":"","title":"Variables"},{"location":"QueueItemData/#charge","text":"","title":"Charge"},{"location":"QueueItemData/#item","text":"","title":"Item"},{"location":"QueueItemData/#touched","text":"","title":"Touched"},{"location":"RNG/","text":"Class \"RNG\" \u2693\ufe0e Constructors \u2693\ufe0e RNG () \u2693\ufe0e RNG RNG ( ) \u2693\ufe0e Functions \u2693\ufe0e Get\u00b7Seed () \u2693\ufe0e int GetSeed ( ) \u2693\ufe0e Next () \u2693\ufe0e int Next ( ) \u2693\ufe0e Random\u00b7Float () \u2693\ufe0e float RandomFloat ( ) \u2693\ufe0e Random\u00b7Int () \u2693\ufe0e int RandomInt ( int Max ) \u2693\ufe0e Set\u00b7Seed () \u2693\ufe0e void SetSeed ( int Seed, int ShiftIdx ) \u2693\ufe0e","title":"RNG"},{"location":"RNG/#class-rng","text":"","title":"Class \"RNG\""},{"location":"RNG/#constructors","text":"","title":"Constructors"},{"location":"RNG/#rng","text":"","title":"RNG ()"},{"location":"RNG/#functions","text":"","title":"Functions"},{"location":"RNG/#getseed","text":"","title":"Get\u00b7Seed ()"},{"location":"RNG/#next","text":"","title":"Next ()"},{"location":"RNG/#randomfloat","text":"","title":"Random\u00b7Float ()"},{"location":"RNG/#randomint","text":"","title":"Random\u00b7Int ()"},{"location":"RNG/#setseed","text":"","title":"Set\u00b7Seed ()"},{"location":"Room/","text":"Class \"Room\" \u2693\ufe0e Functions \u2693\ufe0e Check\u00b7Line () \u2693\ufe0e boolean CheckLine ( Vector Pos1, Vector Pos2, LinecheckMode Mode, int GridPathThreshold, boolean IgnoreWalls, boolean IgnoreCrushable ) \u2693\ufe0e returns true if there is a direct line of sight between Pos1 and Pos2 returns false if the line is obstructed Notes Linecheck Modes: 0 : makes the line check collide with anything that impedes ground movement 1 : is a cheaper version of 0, but is not as reliable 2 : is used for explosions, it only collides with walls and indestructible blocks 3 : is a line check that only collides with obstacles that can block projectiles Damage\u00b7Grid () \u2693\ufe0e boolean DamageGrid ( int Index, int Damage ) \u2693\ufe0e Damage Grid Entities currently this concerns GridEntityPoop and GridEntity_Fire returns true if damageable entity was found (and possibly damaged) return false if not used by tears, bombs, some NPCs, etc Destroy\u00b7Grid () \u2693\ufe0e boolean DestroyGrid ( int Index, boolean Immediate ) \u2693\ufe0e calls DamageGrid internally to damage Poop/Fire removes rocks and opens secret doors returns true if something was destroyed returns false if not used for explosions mostly Emit\u00b7Blood\u00b7From\u00b7Walls () \u2693\ufe0e void EmitBloodFromWalls ( int Duration, int Count ) \u2693\ufe0e Find\u00b7Free\u00b7Pickup\u00b7Spawn\u00b7Position () \u2693\ufe0e Vector FindFreePickupSpawnPosition ( Vector Pos, float InitialStep, boolean AvoidActiveEntities ) \u2693\ufe0e Starting from Pos, will try to find a free spawn position where a newly spawned pickup item will not collide with already spawned pickup items, or solid grid elements such as rocks, or pits The returned position will be aligned to the grid. If no free position is found, the original position (aligned to the grid) is returned. Find\u00b7Free\u00b7Tile\u00b7Position () \u2693\ufe0e Vector FindFreeTilePosition ( Vector Pos, float DistanceThreshold ) \u2693\ufe0e Finds the nearest free tile based on position Stops immediately if the tile sampled has a squared distance less than DistanceThresholdSQ Get\u00b7Alive\u00b7Bosses\u00b7Count () \u2693\ufe0e int GetAliveBossesCount ( ) \u2693\ufe0e Get\u00b7Alive\u00b7Enemies\u00b7Count () \u2693\ufe0e int GetAliveEnemiesCount ( ) \u2693\ufe0e Get\u00b7Award\u00b7Seed () \u2693\ufe0e int GetAwardSeed ( ) \u2693\ufe0e Get\u00b7Backdrop\u00b7Type () \u2693\ufe0e int GetBackdropType ( ) \u2693\ufe0e Returns the BackdropType (Background) of the current room. BackdropTypes (corresponds to ids in backdrops.xml) ID Backdrop 1 Basement 2 Cellar 3 Burning Basement 4 Caves 5 Catacombs 6 Drowned Caves 7 Depths 8 Necropolis 9 Dank Depths 10 Womb 11 Utero 12 Scarred Womb 13 Blue Womb (Hush) 14 Sheol 15 Cathedral 16 Dark Room 17 Chest 18 Mega Satan 19 Library 20 Shop 21 Isaacs Room 22 Barren Room 23 Secret Room 24 Dice Room 25 Arcade 26 Error Room 27 Blue Secret 28 Ultra Greed Shop Get\u00b7Boss\u00b7ID () \u2693\ufe0e BossId GetBossID ( ) \u2693\ufe0e This will return the subtype of the current room, since this value is used to determine the boss-portrait to display when entering. Get\u00b7Bottom\u00b7Right\u00b7Pos () \u2693\ufe0e Vector GetBottomRightPos ( ) \u2693\ufe0e returns bottom right position inside of walls Get\u00b7Broken\u00b7Watch\u00b7State () \u2693\ufe0e int GetBrokenWatchState ( ) \u2693\ufe0e Get\u00b7Center\u00b7Pos () \u2693\ufe0e Vector GetCenterPos ( ) \u2693\ufe0e returns the room center position Get\u00b7Clamped\u00b7Grid\u00b7Index () \u2693\ufe0e int GetClampedGridIndex ( Vector Position ) \u2693\ufe0e converts float position (x,y) to grid index (similar to ingrid) clamps the values if out of bounds Get\u00b7Clamped\u00b7Position () \u2693\ufe0e Vector GetClampedPosition ( Vector Pos, float Margin ) \u2693\ufe0e returns Pos clamped to room borders inside of walls Get\u00b7Decoration\u00b7Seed () \u2693\ufe0e int GetDecorationSeed ( ) \u2693\ufe0e Get\u00b7Delirium\u00b7Distance () \u2693\ufe0e int GetDeliriumDistance ( ) \u2693\ufe0e Get\u00b7Devil\u00b7Room\u00b7Chance () \u2693\ufe0e float GetDevilRoomChance ( ) \u2693\ufe0e Get\u00b7Door () \u2693\ufe0e GridEntityDoor GetDoor ( DoorSlot Slot ) \u2693\ufe0e Get\u00b7Door\u00b7Slot\u00b7Position () \u2693\ufe0e Vector GetDoorSlotPosition ( DoorSlot Slot ) \u2693\ufe0e Get\u00b7Dungeon\u00b7Rock\u00b7Idx () \u2693\ufe0e int GetDungeonRockIdx ( ) \u2693\ufe0e Get\u00b7Entities () \u2693\ufe0e EntityList GetEntities ( ) \u2693\ufe0e Get\u00b7Frame\u00b7Count () \u2693\ufe0e int GetFrameCount ( ) \u2693\ufe0e Get\u00b7Grid\u00b7Collision () \u2693\ufe0e GridCollisionClass GetGridCollision ( int GridIndex ) \u2693\ufe0e Returns the GridCollisionClass of the grid entity at this grid index. Get\u00b7Grid\u00b7Collision\u00b7At\u00b7Pos () \u2693\ufe0e GridCollisionClass GetGridCollisionAtPos ( Vector Pos ) \u2693\ufe0e Returns the GridCollisionClass of the grid entity at this position in the room. Get\u00b7Grid\u00b7Entity () \u2693\ufe0e GridEntity GetGridEntity ( int Index ) \u2693\ufe0e Returns the GridEntity at this grid index. Get\u00b7Grid\u00b7Entity\u00b7From\u00b7Pos () \u2693\ufe0e GridEntity GetGridEntityFromPos ( Vector Position ) \u2693\ufe0e Returns the GridEntity at this position in the room. Get\u00b7Grid\u00b7Height () \u2693\ufe0e int GetGridHeight ( ) \u2693\ufe0e Get\u00b7Grid\u00b7Index () \u2693\ufe0e int GetGridIndex ( Vector Position ) \u2693\ufe0e converts float position (x,y) to grid index returns -1 for invalid index Get\u00b7Grid\u00b7Path () \u2693\ufe0e int GetGridPath ( int Index ) \u2693\ufe0e Get\u00b7Grid\u00b7Path\u00b7From\u00b7Pos () \u2693\ufe0e int GetGridPathFromPos ( int Index ) \u2693\ufe0e Get\u00b7Grid\u00b7Position () \u2693\ufe0e Vector GetGridPosition ( int GridIndex ) \u2693\ufe0e converts grid index to float (x,y) position undefined behaviour for invalid index Get\u00b7Grid\u00b7Size () \u2693\ufe0e int GetGridSize ( ) \u2693\ufe0e Get\u00b7Grid\u00b7Width () \u2693\ufe0e int GetGridWidth ( ) \u2693\ufe0e Get\u00b7Laser\u00b7Target () \u2693\ufe0e Vector GetLaserTarget ( Vector Pos, Vector Dir ) \u2693\ufe0e returns the hit position for a laser beam (Technology, Robo-Baby) usually, the first poop, fire, rock, TNT, or wall encountered on a straight line Get\u00b7Lighting\u00b7Alpha () \u2693\ufe0e float GetLightingAlpha ( ) \u2693\ufe0e Get\u00b7LRoom\u00b7Area\u00b7Desc () \u2693\ufe0e LRoomAreaDesc GetLRoomAreaDesc ( ) \u2693\ufe0e Get\u00b7LRoom\u00b7Tile\u00b7Desc () \u2693\ufe0e LRoomTileDesc GetLRoomTileDesc ( ) \u2693\ufe0e Get\u00b7Next\u00b7Shockwave\u00b7Id () \u2693\ufe0e int GetNextShockwaveId ( ) \u2693\ufe0e Get\u00b7Random\u00b7Position () \u2693\ufe0e Vector GetRandomPosition ( float Margin ) \u2693\ufe0e returns random non tile aligned position Get\u00b7Random\u00b7Tile\u00b7Index () \u2693\ufe0e int GetRandomTileIndex ( int Seed ) \u2693\ufe0e Get\u00b7Red\u00b7Heart\u00b7Damage () \u2693\ufe0e boolean GetRedHeartDamage ( ) \u2693\ufe0e Get\u00b7Render\u00b7Scroll\u00b7Offset () \u2693\ufe0e Vector GetRenderScrollOffset ( ) \u2693\ufe0e The camera scroll offset and screen shake offsets are both represented here. Get\u00b7Render\u00b7Surface\u00b7Top\u00b7Left () \u2693\ufe0e Vector GetRenderSurfaceTopLeft ( ) \u2693\ufe0e The position the floor and wall textures will be rendered at. Get\u00b7Room\u00b7Config\u00b7Stage () \u2693\ufe0e int GetRoomConfigStage ( ) \u2693\ufe0e Returns the stage the room was designed for. Stage IDs (corresponds to ids in stages.xml) ID Backdrop Notes 0 Special Rooms 1 Basement 2 Cellar 3 Burning Basement 4 Caves 5 Catacombs 6 Drowned Caves 7 Depths 8 Necropolis 9 Dank Depths 10 Womb 11 Utero 12 Scarred Womb 13 Blue Womb (Hush) 14 Sheol 15 Cathedral 16 Dark Room 17 Chest 18 Special Rooms (Greed Mode) 19 Basement (Greed Mode) Normally inaccessible. In greed mode, the main room is based off of the Special Rooms (Greed Mode) file. 20 Caves (Greed Mode) Normally inaccessible unless in the first variant of unused stage 13. In greed mode, the main room is based off of the Special Rooms (Greed Mode) file. 21 Depths (Greed Mode) Normally inaccessible unless in the second variant of unused stage 13. In greed mode, the main room is based off of the Special Rooms (Greed Mode) file. 22 Womb (Greed Mode) Normally inaccessible unless in the third variant of unused stage 13. In greed mode, the main room is based off of the Special Rooms (Greed Mode) file. 23 Sheol (Greed Mode) Normally inaccessible. In greed mode, the main room is based off of the Special Rooms (Greed Mode) file. 24 The Shop (Greed Mode) Normally inaccessible. In greed mode, the main room is based off of the Special Rooms (Greed Mode) file. 25 Ultra Greed (Greed Mode) 26 The Void Normally inaccessible. This stage uses rooms from other stages, and will return their respective values. Get\u00b7Room\u00b7Shape () \u2693\ufe0e RoomShape GetRoomShape ( ) \u2693\ufe0e Get\u00b7Second\u00b7Boss\u00b7ID () \u2693\ufe0e BossId GetSecondBossID ( ) \u2693\ufe0e Get\u00b7Seeded\u00b7Collectible () \u2693\ufe0e CollectibleType GetSeededCollectible ( int Seed ) \u2693\ufe0e Get\u00b7Shop\u00b7Level () \u2693\ufe0e int GetShopLevel ( ) \u2693\ufe0e Get\u00b7Spawn\u00b7Seed () \u2693\ufe0e int GetSpawnSeed ( ) \u2693\ufe0e Get\u00b7Tinted\u00b7Rock\u00b7Idx () \u2693\ufe0e int GetTintedRockIdx ( ) \u2693\ufe0e Get\u00b7Top\u00b7Left\u00b7Pos () \u2693\ufe0e Vector GetTopLeftPos ( ) \u2693\ufe0e returns top left position inside of walls Get\u00b7Type () \u2693\ufe0e RoomType GetType ( ) \u2693\ufe0e Has\u00b7Slow\u00b7Down () \u2693\ufe0e boolean HasSlowDown ( ) \u2693\ufe0e Has\u00b7Trigger\u00b7Pressure\u00b7Plates () \u2693\ufe0e boolean HasTriggerPressurePlates ( ) \u2693\ufe0e Has\u00b7Water () \u2693\ufe0e boolean HasWater ( ) \u2693\ufe0e Has\u00b7Water\u00b7Pits () \u2693\ufe0e boolean HasWaterPits ( ) \u2693\ufe0e Is\u00b7Ambush\u00b7Active () \u2693\ufe0e boolean IsAmbushActive ( ) \u2693\ufe0e Is\u00b7Ambush\u00b7Done () \u2693\ufe0e boolean IsAmbushDone ( ) \u2693\ufe0e Is\u00b7Clear () \u2693\ufe0e boolean IsClear ( ) \u2693\ufe0e Is\u00b7Current\u00b7Room\u00b7Last\u00b7Boss () \u2693\ufe0e boolean IsCurrentRoomLastBoss ( ) \u2693\ufe0e Is\u00b7Door\u00b7Slot\u00b7Allowed () \u2693\ufe0e boolean IsDoorSlotAllowed ( DoorSlot Slot ) \u2693\ufe0e Returns whether this room design may have a door at a given position, disregarding whether those doors exist. Is\u00b7First\u00b7Enemy\u00b7Dead () \u2693\ufe0e boolean IsFirstEnemyDead ( ) \u2693\ufe0e Is\u00b7First\u00b7Visit () \u2693\ufe0e boolean IsFirstVisit ( ) \u2693\ufe0e Is\u00b7Initialized () \u2693\ufe0e boolean IsInitialized ( ) \u2693\ufe0e Is\u00b7LShaped\u00b7Room () \u2693\ufe0e boolean IsLShapedRoom ( ) \u2693\ufe0e Is\u00b7Position\u00b7In\u00b7Room () \u2693\ufe0e boolean IsPositionInRoom ( Vector Pos, float Margin ) \u2693\ufe0e Is\u00b7Sacrifice\u00b7Done () \u2693\ufe0e boolean IsSacrificeDone ( ) \u2693\ufe0e Keep\u00b7Doors\u00b7Closed () \u2693\ufe0e void KeepDoorsClosed ( ) \u2693\ufe0e Mama\u00b7Mega\u00b7Explossion () \u2693\ufe0e void MamaMegaExplossion ( ) \u2693\ufe0e Play\u00b7Music () \u2693\ufe0e void PlayMusic ( ) \u2693\ufe0e Remove\u00b7Door () \u2693\ufe0e void RemoveDoor ( DoorSlot Slot ) \u2693\ufe0e Remove\u00b7Grid\u00b7Entity () \u2693\ufe0e void RemoveGridEntity ( int GridIndex, int PathTrail, boolean KeepDecoration ) \u2693\ufe0e Render () \u2693\ufe0e void Render ( ) \u2693\ufe0e Respawn\u00b7Enemies () \u2693\ufe0e void RespawnEnemies ( ) \u2693\ufe0e for D7 collectible Screen\u00b7Wrap\u00b7Position () \u2693\ufe0e Vector ScreenWrapPosition ( Vector Pos, float Margin ) \u2693\ufe0e Returns Pos, screen-wrapped (if it is just outside the room on the right it will be moved to the left side of the room, etc) Notes This only wraps the point once, so if it has crossed multiple wrapping planes it will only wrap on the one it's closest to. For wrapping a position that has crossed two planes (outside a room in the top left for instance) call this function iteratively. Set\u00b7Ambush\u00b7Done () \u2693\ufe0e void SetAmbushDone ( boolean Value ) \u2693\ufe0e Set\u00b7Broken\u00b7Watch\u00b7State () \u2693\ufe0e void SetBrokenWatchState ( int State ) \u2693\ufe0e Set\u00b7Card\u00b7Against\u00b7Humanity () \u2693\ufe0e void SetCardAgainstHumanity ( ) \u2693\ufe0e Set\u00b7Clear () \u2693\ufe0e void SetClear ( boolean Clear ) \u2693\ufe0e Needed for angel room, so the clear flag can be set to false when the angel spawns void SetClear(bool Clear) {m_Desc->Clear = Clear;} Set\u00b7First\u00b7Enemy\u00b7Dead () \u2693\ufe0e void SetFirstEnemyDead ( boolean Value ) \u2693\ufe0e Set\u00b7Floor\u00b7Color () \u2693\ufe0e void SetFloorColor ( Color FloorColor ) \u2693\ufe0e Allows you to apply a color modifier to the floor texture of the current room. Example Code This code changes the floorcolor to red. 1 Game (): GetRoom (): SetFloorColor ( Color ( 1 , 1 , 1 , 1 , 255 , 0 , 0 )) Set\u00b7Grid\u00b7Path () \u2693\ufe0e boolean SetGridPath ( int Index, int Value ) \u2693\ufe0e Set\u00b7Red\u00b7Heart\u00b7Damage () \u2693\ufe0e void SetRedHeartDamage ( ) \u2693\ufe0e Set\u00b7Sacrifice\u00b7Done () \u2693\ufe0e void SetSacrificeDone ( boolean Done ) \u2693\ufe0e Set\u00b7Shockwave\u00b7Param () \u2693\ufe0e void SetShockwaveParam ( int ShockwaveId, ShockwaveParams Params ) \u2693\ufe0e Set\u00b7Slow\u00b7Down () \u2693\ufe0e void SetSlowDown ( int Duration ) \u2693\ufe0e Set\u00b7Wall\u00b7Color () \u2693\ufe0e void SetWallColor ( Color WallColor ) \u2693\ufe0e Allows you to apply a color modifier to the wall texture of the current room. Example Code This code changes the wallcolor to red. 1 Game (): GetRoom (): SetWallColor ( Color ( 1 , 1 , 1 , 1 , 255 , 0 , 0 )) Shop\u00b7Reshuffle () \u2693\ufe0e void ShopReshuffle ( boolean KeepCollectibleIdx, boolean ReselectSaleItem ) \u2693\ufe0e Shop\u00b7Restock\u00b7Full () \u2693\ufe0e void ShopRestockFull ( ) \u2693\ufe0e Shop\u00b7Restock\u00b7Partial () \u2693\ufe0e void ShopRestockPartial ( ) \u2693\ufe0e Spawn\u00b7Clear\u00b7Award () \u2693\ufe0e void SpawnClearAward ( ) \u2693\ufe0e Spawn\u00b7Grid\u00b7Entity () \u2693\ufe0e boolean SpawnGridEntity ( int GridIndex, GridEntityType Type, int Variant, int Seed, int VarData ) \u2693\ufe0e Try\u00b7Make\u00b7Bridge () \u2693\ufe0e boolean TryMakeBridge ( GridEntity pit ) \u2693\ufe0e Try\u00b7Place\u00b7Ladder () \u2693\ufe0e void TryPlaceLadder ( Vector PlayerPos, Vector PlayerVelocity, Entity Ladder ) \u2693\ufe0e Try\u00b7Spawn\u00b7Blue\u00b7Womb\u00b7Door () \u2693\ufe0e boolean TrySpawnBlueWombDoor ( boolean FirstTime, boolean IgnoreTime ) \u2693\ufe0e Try\u00b7Spawn\u00b7Boss\u00b7Rush\u00b7Door () \u2693\ufe0e boolean TrySpawnBossRushDoor ( boolean IgnoreTime ) \u2693\ufe0e Try\u00b7Spawn\u00b7Devil\u00b7Room\u00b7Door () \u2693\ufe0e boolean TrySpawnDevilRoomDoor ( boolean Animate ) \u2693\ufe0e Try\u00b7Spawn\u00b7Mega\u00b7Satan\u00b7Room\u00b7Door () \u2693\ufe0e boolean TrySpawnMegaSatanRoomDoor ( ) \u2693\ufe0e Try\u00b7Spawn\u00b7The\u00b7Void\u00b7Door () \u2693\ufe0e boolean TrySpawnTheVoidDoor ( ) \u2693\ufe0e Turn\u00b7Gold () \u2693\ufe0e void TurnGold ( ) \u2693\ufe0e Update () \u2693\ufe0e void Update ( ) \u2693\ufe0e Updates the current room. Notes Calling this function is NOT needed to apply changes! This function is pretty useless World\u00b7To\u00b7Screen\u00b7Position () \u2693\ufe0e Vector WorldToScreenPosition ( Vector WorldPos ) \u2693\ufe0e Converts an entity position to one that can be used to render to the screen.","title":"Room"},{"location":"Room/#class-room","text":"","title":"Class \"Room\""},{"location":"Room/#functions","text":"","title":"Functions"},{"location":"Room/#checkline","text":"","title":"Check\u00b7Line ()"},{"location":"Room/#damagegrid","text":"","title":"Damage\u00b7Grid ()"},{"location":"Room/#destroygrid","text":"","title":"Destroy\u00b7Grid ()"},{"location":"Room/#emitbloodfromwalls","text":"","title":"Emit\u00b7Blood\u00b7From\u00b7Walls ()"},{"location":"Room/#findfreepickupspawnposition","text":"","title":"Find\u00b7Free\u00b7Pickup\u00b7Spawn\u00b7Position ()"},{"location":"Room/#findfreetileposition","text":"","title":"Find\u00b7Free\u00b7Tile\u00b7Position ()"},{"location":"Room/#getalivebossescount","text":"","title":"Get\u00b7Alive\u00b7Bosses\u00b7Count ()"},{"location":"Room/#getaliveenemiescount","text":"","title":"Get\u00b7Alive\u00b7Enemies\u00b7Count ()"},{"location":"Room/#getawardseed","text":"","title":"Get\u00b7Award\u00b7Seed ()"},{"location":"Room/#getbackdroptype","text":"","title":"Get\u00b7Backdrop\u00b7Type ()"},{"location":"Room/#getbossid","text":"","title":"Get\u00b7Boss\u00b7ID ()"},{"location":"Room/#getbottomrightpos","text":"","title":"Get\u00b7Bottom\u00b7Right\u00b7Pos ()"},{"location":"Room/#getbrokenwatchstate","text":"","title":"Get\u00b7Broken\u00b7Watch\u00b7State ()"},{"location":"Room/#getcenterpos","text":"","title":"Get\u00b7Center\u00b7Pos ()"},{"location":"Room/#getclampedgridindex","text":"","title":"Get\u00b7Clamped\u00b7Grid\u00b7Index ()"},{"location":"Room/#getclampedposition","text":"","title":"Get\u00b7Clamped\u00b7Position ()"},{"location":"Room/#getdecorationseed","text":"","title":"Get\u00b7Decoration\u00b7Seed ()"},{"location":"Room/#getdeliriumdistance","text":"","title":"Get\u00b7Delirium\u00b7Distance ()"},{"location":"Room/#getdevilroomchance","text":"","title":"Get\u00b7Devil\u00b7Room\u00b7Chance ()"},{"location":"Room/#getdoor","text":"","title":"Get\u00b7Door ()"},{"location":"Room/#getdoorslotposition","text":"","title":"Get\u00b7Door\u00b7Slot\u00b7Position ()"},{"location":"Room/#getdungeonrockidx","text":"","title":"Get\u00b7Dungeon\u00b7Rock\u00b7Idx ()"},{"location":"Room/#getentities","text":"","title":"Get\u00b7Entities ()"},{"location":"Room/#getframecount","text":"","title":"Get\u00b7Frame\u00b7Count ()"},{"location":"Room/#getgridcollision","text":"","title":"Get\u00b7Grid\u00b7Collision ()"},{"location":"Room/#getgridcollisionatpos","text":"","title":"Get\u00b7Grid\u00b7Collision\u00b7At\u00b7Pos ()"},{"location":"Room/#getgridentity","text":"","title":"Get\u00b7Grid\u00b7Entity ()"},{"location":"Room/#getgridentityfrompos","text":"","title":"Get\u00b7Grid\u00b7Entity\u00b7From\u00b7Pos ()"},{"location":"Room/#getgridheight","text":"","title":"Get\u00b7Grid\u00b7Height ()"},{"location":"Room/#getgridindex","text":"","title":"Get\u00b7Grid\u00b7Index ()"},{"location":"Room/#getgridpath","text":"","title":"Get\u00b7Grid\u00b7Path ()"},{"location":"Room/#getgridpathfrompos","text":"","title":"Get\u00b7Grid\u00b7Path\u00b7From\u00b7Pos ()"},{"location":"Room/#getgridposition","text":"","title":"Get\u00b7Grid\u00b7Position ()"},{"location":"Room/#getgridsize","text":"","title":"Get\u00b7Grid\u00b7Size ()"},{"location":"Room/#getgridwidth","text":"","title":"Get\u00b7Grid\u00b7Width ()"},{"location":"Room/#getlasertarget","text":"","title":"Get\u00b7Laser\u00b7Target ()"},{"location":"Room/#getlightingalpha","text":"","title":"Get\u00b7Lighting\u00b7Alpha ()"},{"location":"Room/#getlroomareadesc","text":"","title":"Get\u00b7LRoom\u00b7Area\u00b7Desc ()"},{"location":"Room/#getlroomtiledesc","text":"","title":"Get\u00b7LRoom\u00b7Tile\u00b7Desc ()"},{"location":"Room/#getnextshockwaveid","text":"","title":"Get\u00b7Next\u00b7Shockwave\u00b7Id ()"},{"location":"Room/#getrandomposition","text":"","title":"Get\u00b7Random\u00b7Position ()"},{"location":"Room/#getrandomtileindex","text":"","title":"Get\u00b7Random\u00b7Tile\u00b7Index ()"},{"location":"Room/#getredheartdamage","text":"","title":"Get\u00b7Red\u00b7Heart\u00b7Damage ()"},{"location":"Room/#getrenderscrolloffset","text":"","title":"Get\u00b7Render\u00b7Scroll\u00b7Offset ()"},{"location":"Room/#getrendersurfacetopleft","text":"","title":"Get\u00b7Render\u00b7Surface\u00b7Top\u00b7Left ()"},{"location":"Room/#getroomconfigstage","text":"","title":"Get\u00b7Room\u00b7Config\u00b7Stage ()"},{"location":"Room/#getroomshape","text":"","title":"Get\u00b7Room\u00b7Shape ()"},{"location":"Room/#getsecondbossid","text":"","title":"Get\u00b7Second\u00b7Boss\u00b7ID ()"},{"location":"Room/#getseededcollectible","text":"","title":"Get\u00b7Seeded\u00b7Collectible ()"},{"location":"Room/#getshoplevel","text":"","title":"Get\u00b7Shop\u00b7Level ()"},{"location":"Room/#getspawnseed","text":"","title":"Get\u00b7Spawn\u00b7Seed ()"},{"location":"Room/#gettintedrockidx","text":"","title":"Get\u00b7Tinted\u00b7Rock\u00b7Idx ()"},{"location":"Room/#gettopleftpos","text":"","title":"Get\u00b7Top\u00b7Left\u00b7Pos ()"},{"location":"Room/#gettype","text":"","title":"Get\u00b7Type ()"},{"location":"Room/#hasslowdown","text":"","title":"Has\u00b7Slow\u00b7Down ()"},{"location":"Room/#hastriggerpressureplates","text":"","title":"Has\u00b7Trigger\u00b7Pressure\u00b7Plates ()"},{"location":"Room/#haswater","text":"","title":"Has\u00b7Water ()"},{"location":"Room/#haswaterpits","text":"","title":"Has\u00b7Water\u00b7Pits ()"},{"location":"Room/#isambushactive","text":"","title":"Is\u00b7Ambush\u00b7Active ()"},{"location":"Room/#isambushdone","text":"","title":"Is\u00b7Ambush\u00b7Done ()"},{"location":"Room/#isclear","text":"","title":"Is\u00b7Clear ()"},{"location":"Room/#iscurrentroomlastboss","text":"","title":"Is\u00b7Current\u00b7Room\u00b7Last\u00b7Boss ()"},{"location":"Room/#isdoorslotallowed","text":"","title":"Is\u00b7Door\u00b7Slot\u00b7Allowed ()"},{"location":"Room/#isfirstenemydead","text":"","title":"Is\u00b7First\u00b7Enemy\u00b7Dead ()"},{"location":"Room/#isfirstvisit","text":"","title":"Is\u00b7First\u00b7Visit ()"},{"location":"Room/#isinitialized","text":"","title":"Is\u00b7Initialized ()"},{"location":"Room/#islshapedroom","text":"","title":"Is\u00b7LShaped\u00b7Room ()"},{"location":"Room/#ispositioninroom","text":"","title":"Is\u00b7Position\u00b7In\u00b7Room ()"},{"location":"Room/#issacrificedone","text":"","title":"Is\u00b7Sacrifice\u00b7Done ()"},{"location":"Room/#keepdoorsclosed","text":"","title":"Keep\u00b7Doors\u00b7Closed ()"},{"location":"Room/#mamamegaexplossion","text":"","title":"Mama\u00b7Mega\u00b7Explossion ()"},{"location":"Room/#playmusic","text":"","title":"Play\u00b7Music ()"},{"location":"Room/#removedoor","text":"","title":"Remove\u00b7Door ()"},{"location":"Room/#removegridentity","text":"","title":"Remove\u00b7Grid\u00b7Entity ()"},{"location":"Room/#render","text":"","title":"Render ()"},{"location":"Room/#respawnenemies","text":"","title":"Respawn\u00b7Enemies ()"},{"location":"Room/#screenwrapposition","text":"","title":"Screen\u00b7Wrap\u00b7Position ()"},{"location":"Room/#setambushdone","text":"","title":"Set\u00b7Ambush\u00b7Done ()"},{"location":"Room/#setbrokenwatchstate","text":"","title":"Set\u00b7Broken\u00b7Watch\u00b7State ()"},{"location":"Room/#setcardagainsthumanity","text":"","title":"Set\u00b7Card\u00b7Against\u00b7Humanity ()"},{"location":"Room/#setclear","text":"","title":"Set\u00b7Clear ()"},{"location":"Room/#setfirstenemydead","text":"","title":"Set\u00b7First\u00b7Enemy\u00b7Dead ()"},{"location":"Room/#setfloorcolor","text":"","title":"Set\u00b7Floor\u00b7Color ()"},{"location":"Room/#setgridpath","text":"","title":"Set\u00b7Grid\u00b7Path ()"},{"location":"Room/#setredheartdamage","text":"","title":"Set\u00b7Red\u00b7Heart\u00b7Damage ()"},{"location":"Room/#setsacrificedone","text":"","title":"Set\u00b7Sacrifice\u00b7Done ()"},{"location":"Room/#setshockwaveparam","text":"","title":"Set\u00b7Shockwave\u00b7Param ()"},{"location":"Room/#setslowdown","text":"","title":"Set\u00b7Slow\u00b7Down ()"},{"location":"Room/#setwallcolor","text":"","title":"Set\u00b7Wall\u00b7Color ()"},{"location":"Room/#shopreshuffle","text":"","title":"Shop\u00b7Reshuffle ()"},{"location":"Room/#shoprestockfull","text":"","title":"Shop\u00b7Restock\u00b7Full ()"},{"location":"Room/#shoprestockpartial","text":"","title":"Shop\u00b7Restock\u00b7Partial ()"},{"location":"Room/#spawnclearaward","text":"","title":"Spawn\u00b7Clear\u00b7Award ()"},{"location":"Room/#spawngridentity","text":"","title":"Spawn\u00b7Grid\u00b7Entity ()"},{"location":"Room/#trymakebridge","text":"","title":"Try\u00b7Make\u00b7Bridge ()"},{"location":"Room/#tryplaceladder","text":"","title":"Try\u00b7Place\u00b7Ladder ()"},{"location":"Room/#tryspawnbluewombdoor","text":"","title":"Try\u00b7Spawn\u00b7Blue\u00b7Womb\u00b7Door ()"},{"location":"Room/#tryspawnbossrushdoor","text":"","title":"Try\u00b7Spawn\u00b7Boss\u00b7Rush\u00b7Door ()"},{"location":"Room/#tryspawndevilroomdoor","text":"","title":"Try\u00b7Spawn\u00b7Devil\u00b7Room\u00b7Door ()"},{"location":"Room/#tryspawnmegasatanroomdoor","text":"","title":"Try\u00b7Spawn\u00b7Mega\u00b7Satan\u00b7Room\u00b7Door ()"},{"location":"Room/#tryspawnthevoiddoor","text":"","title":"Try\u00b7Spawn\u00b7The\u00b7Void\u00b7Door ()"},{"location":"Room/#turngold","text":"","title":"Turn\u00b7Gold ()"},{"location":"Room/#update","text":"","title":"Update ()"},{"location":"Room/#worldtoscreenposition","text":"","title":"World\u00b7To\u00b7Screen\u00b7Position ()"},{"location":"RoomConfig_Entry/","text":"Class \"RoomConfig::Entry\" \u2693\ufe0e Variables \u2693\ufe0e Subtype \u2693\ufe0e int Subtype \u2693\ufe0e Type \u2693\ufe0e EntityType Type \u2693\ufe0e Variant \u2693\ufe0e int Variant \u2693\ufe0e Weight \u2693\ufe0e float Weight \u2693\ufe0e","title":"Entry"},{"location":"RoomConfig_Entry/#class-roomconfigentry","text":"","title":"Class \"RoomConfig::Entry\""},{"location":"RoomConfig_Entry/#variables","text":"","title":"Variables"},{"location":"RoomConfig_Entry/#subtype","text":"","title":"Subtype"},{"location":"RoomConfig_Entry/#type","text":"","title":"Type"},{"location":"RoomConfig_Entry/#variant","text":"","title":"Variant"},{"location":"RoomConfig_Entry/#weight","text":"","title":"Weight"},{"location":"RoomConfig_Room/","text":"Class \"RoomConfig::Room\" \u2693\ufe0e Variables \u2693\ufe0e Difficulty \u2693\ufe0e Difficulty Difficulty \u2693\ufe0e Doors \u2693\ufe0e Int Doors \u2693\ufe0e Height \u2693\ufe0e int Height \u2693\ufe0e Initial\u00b7Weight \u2693\ufe0e float InitialWeight \u2693\ufe0e Name \u2693\ufe0e string Name \u2693\ufe0e Shape \u2693\ufe0e RoomShape Shape \u2693\ufe0e Spawn\u00b7Count \u2693\ufe0e int SpawnCount \u2693\ufe0e Spawns \u2693\ufe0e SpawnList Spawns \u2693\ufe0e Stage\u00b7ID \u2693\ufe0e int StageID \u2693\ufe0e The stage the room was designed for. Stage IDs (corresponds to ids in stages.xml) ID Backdrop Notes 0 Special Rooms 1 Basement 2 Cellar 3 Burning Basement 4 Caves 5 Catacombs 6 Drowned Caves 7 Depths 8 Necropolis 9 Dank Depths 10 Womb 11 Utero 12 Scarred Womb 13 Blue Womb (Hush) 14 Sheol 15 Cathedral 16 Dark Room 17 Chest 18 Special Rooms (Greed Mode) 19 Basement (Greed Mode) Normally inaccessible. In greed mode, the main room is based off of the Special Rooms (Greed Mode) file. 20 Caves (Greed Mode) Normally inaccessible unless in the first variant of unused stage 13. In greed mode, the main room is based off of the Special Rooms (Greed Mode) file. 21 Depths (Greed Mode) Normally inaccessible unless in the second variant of unused stage 13. In greed mode, the main room is based off of the Special Rooms (Greed Mode) file. 22 Womb (Greed Mode) Normally inaccessible unless in the third variant of unused stage 13. In greed mode, the main room is based off of the Special Rooms (Greed Mode) file. 23 Sheol (Greed Mode) Normally inaccessible. In greed mode, the main room is based off of the Special Rooms (Greed Mode) file. 24 The Shop (Greed Mode) Normally inaccessible. In greed mode, the main room is based off of the Special Rooms (Greed Mode) file. 25 Ultra Greed (Greed Mode) 26 The Void Normally inaccessible. This stage uses rooms from other stages, and will return their respective values. Subtype \u2693\ufe0e int Subtype \u2693\ufe0e Type \u2693\ufe0e RoomType Type \u2693\ufe0e Variant \u2693\ufe0e int Variant \u2693\ufe0e Weight \u2693\ufe0e float Weight \u2693\ufe0e Width \u2693\ufe0e int Width \u2693\ufe0e","title":"Room"},{"location":"RoomConfig_Room/#class-roomconfigroom","text":"","title":"Class \"RoomConfig::Room\""},{"location":"RoomConfig_Room/#variables","text":"","title":"Variables"},{"location":"RoomConfig_Room/#difficulty","text":"","title":"Difficulty"},{"location":"RoomConfig_Room/#doors","text":"","title":"Doors"},{"location":"RoomConfig_Room/#height","text":"","title":"Height"},{"location":"RoomConfig_Room/#initialweight","text":"","title":"Initial\u00b7Weight"},{"location":"RoomConfig_Room/#name","text":"","title":"Name"},{"location":"RoomConfig_Room/#shape","text":"","title":"Shape"},{"location":"RoomConfig_Room/#spawncount","text":"","title":"Spawn\u00b7Count"},{"location":"RoomConfig_Room/#spawns","text":"","title":"Spawns"},{"location":"RoomConfig_Room/#stageid","text":"","title":"Stage\u00b7ID"},{"location":"RoomConfig_Room/#subtype","text":"","title":"Subtype"},{"location":"RoomConfig_Room/#type","text":"","title":"Type"},{"location":"RoomConfig_Room/#variant","text":"","title":"Variant"},{"location":"RoomConfig_Room/#weight","text":"","title":"Weight"},{"location":"RoomConfig_Room/#width","text":"","title":"Width"},{"location":"RoomConfig_Spawn/","text":"Class \"RoomConfig::Spawn\" \u2693\ufe0e Functions \u2693\ufe0e Pick\u00b7Entry () \u2693\ufe0e RoomConfig Entry PickEntry ( float r ) \u2693\ufe0e r is a value between 0 and 1 Variables \u2693\ufe0e Entry\u00b7Count \u2693\ufe0e int EntryCount \u2693\ufe0e Sum\u00b7Weights \u2693\ufe0e float SumWeights \u2693\ufe0e X \u2693\ufe0e int X \u2693\ufe0e Y \u2693\ufe0e int Y \u2693\ufe0e","title":"Spawn"},{"location":"RoomConfig_Spawn/#class-roomconfigspawn","text":"","title":"Class \"RoomConfig::Spawn\""},{"location":"RoomConfig_Spawn/#functions","text":"","title":"Functions"},{"location":"RoomConfig_Spawn/#pickentry","text":"","title":"Pick\u00b7Entry ()"},{"location":"RoomConfig_Spawn/#variables","text":"","title":"Variables"},{"location":"RoomConfig_Spawn/#entrycount","text":"","title":"Entry\u00b7Count"},{"location":"RoomConfig_Spawn/#sumweights","text":"","title":"Sum\u00b7Weights"},{"location":"RoomConfig_Spawn/#x","text":"","title":"X"},{"location":"RoomConfig_Spawn/#y","text":"","title":"Y"},{"location":"RoomDescriptor/","text":"Class \"RoomDescriptor\" \u2693\ufe0e Variables \u2693\ufe0e Allowed\u00b7Doors \u2693\ufe0e DoorSet AllowedDoors \u2693\ufe0e Contains just on load swapped data (in cases like minibosses, or other such events) Award\u00b7Seed \u2693\ufe0e int AwardSeed \u2693\ufe0e used to spawn clear awards (normal, miniboss, boss rooms) and initialize shop items (shop, devil rooms) Challenge\u00b7Done \u2693\ufe0e boolean ChallengeDone \u2693\ufe0e Clear \u2693\ufe0e boolean Clear \u2693\ufe0e Clear\u00b7Count \u2693\ufe0e int ClearCount \u2693\ufe0e room is clear, don't spawn enemies when visiting bool Clear; Data \u2693\ufe0e RoomConfig Room Data \u2693\ufe0e Decoration\u00b7Seed \u2693\ufe0e int DecorationSeed \u2693\ufe0e bool AltBossMusic; used for cosmetic stuff like backdrops, room decorations, shopkeeper skins Delirium\u00b7Distance \u2693\ufe0e int DeliriumDistance \u2693\ufe0e Helper for The Void stage, holds the distance to the Delirium boss in room nr. Display\u00b7Flags \u2693\ufe0e int DisplayFlags \u2693\ufe0e Indicates what is visible on the minimap. Display Flags (bitwise): 1 2 3 4 1 << - 1 -- Invisible 1 << 0 -- Visible 1 << 1 -- Room Shadow 1 << 2 -- Show Icon Examples The flags are hard to interpret, but here are some examples: 000 = invisible, this is how most rooms start 101 = standard room visibility, this includes rooms that are adjacent and you haven't actively visited. This will usually show icons. 011 = secret room, locked rooms, sac rooms pre-entry* 111 = 011 rooms after entry, but also the rooms directly adjacent to them* (applied after entry) * If you have spelunker's hat, bit 1 is completely unused. All special rooms will have the normal behavior of either 000 or 101. iirc this is unique to spelunker's hat, mapping items follow the normal rules. Quote from User 'Budj' From this my best guess is that bits 1 and 2 are special rendering (display) flags that may have more meaning down below. The important bit for using them is minding that they're used differently mostly for special rooms. As far as I've seen, 001 is completely unused. 010, 100, and 110 may be used for compass or blue map, I don't remember. I think they use 100 Grid\u00b7Index \u2693\ufe0e int GridIndex \u2693\ufe0e index in the level grid (always top left) Notes This will always return the top left coordinate of the room on the levelgrid. Therefore, it will return an index not part of the actual room, when checking this value for J-shaped rooms. (See graphic below) Has\u00b7Water \u2693\ufe0e boolean HasWater \u2693\ufe0e List\u00b7Index \u2693\ufe0e int ListIndex \u2693\ufe0e index in the room list No\u00b7Reward \u2693\ufe0e boolean NoReward \u2693\ufe0e Override\u00b7Data \u2693\ufe0e RoomConfig Room OverrideData \u2693\ufe0e Tim's reminder to himself: The room variant is in Data. Because Room::Init uses a mix of datas, one from level layout and one from replacement data like minibosses, we need to hold the new room data somewhere. Pits\u00b7Count \u2693\ufe0e int PitsCount \u2693\ufe0e Poop\u00b7Count \u2693\ufe0e int PoopCount \u2693\ufe0e bool HasWater; Pressure\u00b7Plates\u00b7Triggered \u2693\ufe0e boolean PressurePlatesTriggered \u2693\ufe0e Sacrifice\u00b7Done \u2693\ufe0e boolean SacrificeDone \u2693\ufe0e Safe\u00b7Grid\u00b7Index \u2693\ufe0e int SafeGridIndex \u2693\ufe0e index in the level grid (not always top left, but is guaranteed to point to the room. this is important for LTL shapes!) Notes This will always return the top left coordinate of the room on the levelgrid, except for J-shaped rooms, where it returns the top right index. (see graphic below) Shop\u00b7Item\u00b7Discount\u00b7Idx \u2693\ufe0e int ShopItemDiscountIdx \u2693\ufe0e Shop\u00b7Item\u00b7Idx \u2693\ufe0e int ShopItemIdx \u2693\ufe0e Spawn\u00b7Seed \u2693\ufe0e int SpawnSeed \u2693\ufe0e used to spawn entities at room load and initialize enemy drop seeds Surprise\u00b7Miniboss \u2693\ufe0e boolean SurpriseMiniboss \u2693\ufe0e Visited\u00b7Count \u2693\ufe0e int VisitedCount \u2693\ufe0e how often the room has been visited","title":"RoomDescriptor"},{"location":"RoomDescriptor/#class-roomdescriptor","text":"","title":"Class \"RoomDescriptor\""},{"location":"RoomDescriptor/#variables","text":"","title":"Variables"},{"location":"RoomDescriptor/#alloweddoors","text":"","title":"Allowed\u00b7Doors"},{"location":"RoomDescriptor/#awardseed","text":"","title":"Award\u00b7Seed"},{"location":"RoomDescriptor/#challengedone","text":"","title":"Challenge\u00b7Done"},{"location":"RoomDescriptor/#clear","text":"","title":"Clear"},{"location":"RoomDescriptor/#clearcount","text":"","title":"Clear\u00b7Count"},{"location":"RoomDescriptor/#data","text":"","title":"Data"},{"location":"RoomDescriptor/#decorationseed","text":"","title":"Decoration\u00b7Seed"},{"location":"RoomDescriptor/#deliriumdistance","text":"","title":"Delirium\u00b7Distance"},{"location":"RoomDescriptor/#displayflags","text":"","title":"Display\u00b7Flags"},{"location":"RoomDescriptor/#gridindex","text":"","title":"Grid\u00b7Index"},{"location":"RoomDescriptor/#haswater","text":"","title":"Has\u00b7Water"},{"location":"RoomDescriptor/#listindex","text":"","title":"List\u00b7Index"},{"location":"RoomDescriptor/#noreward","text":"","title":"No\u00b7Reward"},{"location":"RoomDescriptor/#overridedata","text":"","title":"Override\u00b7Data"},{"location":"RoomDescriptor/#pitscount","text":"","title":"Pits\u00b7Count"},{"location":"RoomDescriptor/#poopcount","text":"","title":"Poop\u00b7Count"},{"location":"RoomDescriptor/#pressureplatestriggered","text":"","title":"Pressure\u00b7Plates\u00b7Triggered"},{"location":"RoomDescriptor/#sacrificedone","text":"","title":"Sacrifice\u00b7Done"},{"location":"RoomDescriptor/#safegridindex","text":"","title":"Safe\u00b7Grid\u00b7Index"},{"location":"RoomDescriptor/#shopitemdiscountidx","text":"","title":"Shop\u00b7Item\u00b7Discount\u00b7Idx"},{"location":"RoomDescriptor/#shopitemidx","text":"","title":"Shop\u00b7Item\u00b7Idx"},{"location":"RoomDescriptor/#spawnseed","text":"","title":"Spawn\u00b7Seed"},{"location":"RoomDescriptor/#surpriseminiboss","text":"","title":"Surprise\u00b7Miniboss"},{"location":"RoomDescriptor/#visitedcount","text":"","title":"Visited\u00b7Count"},{"location":"SFXManager/","text":"Class \"SFXManager\" \u2693\ufe0e Constructors \u2693\ufe0e SFXManager () \u2693\ufe0e SFXManager SFXManager ( ) \u2693\ufe0e Returns a SFXManager object. Example Code Example usage: 1 SFXManager (): Stop ( SoundEffect . SOUND_1UP ) Functions \u2693\ufe0e Adjust\u00b7Pitch () \u2693\ufe0e void AdjustPitch ( SoundEffect ID, float Pitch ) \u2693\ufe0e mostly useful for repeating sounds Adjust\u00b7Volume () \u2693\ufe0e void AdjustVolume ( SoundEffect ID, float Volume ) \u2693\ufe0e mostly useful for repeating sounds Get\u00b7Ambient\u00b7Sound\u00b7Volume () \u2693\ufe0e float GetAmbientSoundVolume ( SoundEffect ID ) \u2693\ufe0e Is\u00b7Playing () \u2693\ufe0e boolean IsPlaying ( SoundEffect ID ) \u2693\ufe0e Play () \u2693\ufe0e void Play ( SoundEffect ID, float Volume, int FrameDelay, boolean Loop, float Pitch ) \u2693\ufe0e Preload () \u2693\ufe0e void Preload ( SoundEffect ID ) \u2693\ufe0e Set\u00b7Ambient\u00b7Sound () \u2693\ufe0e void SetAmbientSound ( SoundEffect ID, float Volume, float Pitch ) \u2693\ufe0e Stop () \u2693\ufe0e void Stop ( SoundEffect ID ) \u2693\ufe0e Stop\u00b7Looping\u00b7Sounds () \u2693\ufe0e void StopLoopingSounds ( ) \u2693\ufe0e","title":"SFXManager"},{"location":"SFXManager/#class-sfxmanager","text":"","title":"Class \"SFXManager\""},{"location":"SFXManager/#constructors","text":"","title":"Constructors"},{"location":"SFXManager/#sfxmanager","text":"","title":"SFXManager ()"},{"location":"SFXManager/#functions","text":"","title":"Functions"},{"location":"SFXManager/#adjustpitch","text":"","title":"Adjust\u00b7Pitch ()"},{"location":"SFXManager/#adjustvolume","text":"","title":"Adjust\u00b7Volume ()"},{"location":"SFXManager/#getambientsoundvolume","text":"","title":"Get\u00b7Ambient\u00b7Sound\u00b7Volume ()"},{"location":"SFXManager/#isplaying","text":"","title":"Is\u00b7Playing ()"},{"location":"SFXManager/#play","text":"","title":"Play ()"},{"location":"SFXManager/#preload","text":"","title":"Preload ()"},{"location":"SFXManager/#setambientsound","text":"","title":"Set\u00b7Ambient\u00b7Sound ()"},{"location":"SFXManager/#stop","text":"","title":"Stop ()"},{"location":"SFXManager/#stoploopingsounds","text":"","title":"Stop\u00b7Looping\u00b7Sounds ()"},{"location":"Seeds/","text":"Class \"Seeds\" \u2693\ufe0e Functions \u2693\ufe0e Add\u00b7Seed\u00b7Effect () \u2693\ufe0e void AddSeedEffect ( SeedEffect Value ) \u2693\ufe0e Can\u00b7Add\u00b7Seed\u00b7Effect () \u2693\ufe0e boolean CanAddSeedEffect ( SeedEffect Value ) \u2693\ufe0e Clear\u00b7Seed\u00b7Effects () \u2693\ufe0e void ClearSeedEffects ( ) \u2693\ufe0e Clear\u00b7Start\u00b7Seed () \u2693\ufe0e void ClearStartSeed ( ) \u2693\ufe0e Count\u00b7Seed\u00b7Effects () \u2693\ufe0e int CountSeedEffects ( ) \u2693\ufe0e Count\u00b7Unlocked\u00b7Seed\u00b7Effects () \u2693\ufe0e static int CountUnlockedSeedEffects ( ) \u2693\ufe0e Forget\u00b7Stage\u00b7Seed () \u2693\ufe0e void ForgetStageSeed ( LevelStage Stage ) \u2693\ufe0e Get\u00b7Next\u00b7Seed () \u2693\ufe0e int GetNextSeed ( ) \u2693\ufe0e Get\u00b7Player\u00b7Init\u00b7Seed () \u2693\ufe0e int GetPlayerInitSeed ( ) \u2693\ufe0e Get\u00b7Seed\u00b7Effect () \u2693\ufe0e static SeedEffect GetSeedEffect ( string str ) \u2693\ufe0e Get\u00b7Stage\u00b7Seed () \u2693\ufe0e int GetStageSeed ( LevelStage Stage ) \u2693\ufe0e Get\u00b7Start\u00b7Seed () \u2693\ufe0e int GetStartSeed ( ) \u2693\ufe0e Get\u00b7Start\u00b7Seed\u00b7String () \u2693\ufe0e string GetStartSeedString ( ) \u2693\ufe0e Has\u00b7Seed\u00b7Effect () \u2693\ufe0e boolean HasSeedEffect ( SeedEffect Value ) \u2693\ufe0e Init\u00b7Seed\u00b7Info () \u2693\ufe0e static InitSeedInfo ( ) \u2693\ufe0e Is\u00b7Custom\u00b7Run () \u2693\ufe0e boolean IsCustomRun ( ) \u2693\ufe0e Returns true if the player is in a challenge run or a seeded run. Is\u00b7Initialized () \u2693\ufe0e boolean IsInitialized ( ) \u2693\ufe0e Is\u00b7Seed\u00b7Combo\u00b7Banned () \u2693\ufe0e boolean IsSeedComboBanned ( SeedEffect Seed1, SeedEffect Seed2 ) \u2693\ufe0e Is\u00b7Special\u00b7Seed () \u2693\ufe0e static boolean IsSpecialSeed ( string str ) \u2693\ufe0e Is\u00b7String\u00b7Valid\u00b7Seed () \u2693\ufe0e static boolean IsStringValidSeed ( string str ) \u2693\ufe0e Remove\u00b7Blocking\u00b7Seed\u00b7Effects () \u2693\ufe0e void RemoveBlockingSeedEffects ( SeedEffect Value ) \u2693\ufe0e Removes seeds that are banned in conjunction with the given seed. Remove\u00b7Seed\u00b7Effect () \u2693\ufe0e void RemoveSeedEffect ( SeedEffect Value ) \u2693\ufe0e Reset () \u2693\ufe0e void Reset ( ) \u2693\ufe0e Removes all seed effects, only goes into effect when the run is restarted Restart () \u2693\ufe0e void Restart ( Challenge CurrentChallenge ) \u2693\ufe0e Re-selects a random start seed but only if the start seed was not custom. Seed2String () \u2693\ufe0e static string Seed2String ( int seed ) \u2693\ufe0e Set\u00b7Start\u00b7Seed () \u2693\ufe0e void SetStartSeed ( string StartSeed ) \u2693\ufe0e Empty string means we will pick a new random seed. String2Seed () \u2693\ufe0e static int String2Seed ( string str ) \u2693\ufe0e","title":"Seeds"},{"location":"Seeds/#class-seeds","text":"","title":"Class \"Seeds\""},{"location":"Seeds/#functions","text":"","title":"Functions"},{"location":"Seeds/#addseedeffect","text":"","title":"Add\u00b7Seed\u00b7Effect ()"},{"location":"Seeds/#canaddseedeffect","text":"","title":"Can\u00b7Add\u00b7Seed\u00b7Effect ()"},{"location":"Seeds/#clearseedeffects","text":"","title":"Clear\u00b7Seed\u00b7Effects ()"},{"location":"Seeds/#clearstartseed","text":"","title":"Clear\u00b7Start\u00b7Seed ()"},{"location":"Seeds/#countseedeffects","text":"","title":"Count\u00b7Seed\u00b7Effects ()"},{"location":"Seeds/#countunlockedseedeffects","text":"","title":"Count\u00b7Unlocked\u00b7Seed\u00b7Effects ()"},{"location":"Seeds/#forgetstageseed","text":"","title":"Forget\u00b7Stage\u00b7Seed ()"},{"location":"Seeds/#getnextseed","text":"","title":"Get\u00b7Next\u00b7Seed ()"},{"location":"Seeds/#getplayerinitseed","text":"","title":"Get\u00b7Player\u00b7Init\u00b7Seed ()"},{"location":"Seeds/#getseedeffect","text":"","title":"Get\u00b7Seed\u00b7Effect ()"},{"location":"Seeds/#getstageseed","text":"","title":"Get\u00b7Stage\u00b7Seed ()"},{"location":"Seeds/#getstartseed","text":"","title":"Get\u00b7Start\u00b7Seed ()"},{"location":"Seeds/#getstartseedstring","text":"","title":"Get\u00b7Start\u00b7Seed\u00b7String ()"},{"location":"Seeds/#hasseedeffect","text":"","title":"Has\u00b7Seed\u00b7Effect ()"},{"location":"Seeds/#initseedinfo","text":"","title":"Init\u00b7Seed\u00b7Info ()"},{"location":"Seeds/#iscustomrun","text":"","title":"Is\u00b7Custom\u00b7Run ()"},{"location":"Seeds/#isinitialized","text":"","title":"Is\u00b7Initialized ()"},{"location":"Seeds/#isseedcombobanned","text":"","title":"Is\u00b7Seed\u00b7Combo\u00b7Banned ()"},{"location":"Seeds/#isspecialseed","text":"","title":"Is\u00b7Special\u00b7Seed ()"},{"location":"Seeds/#isstringvalidseed","text":"","title":"Is\u00b7String\u00b7Valid\u00b7Seed ()"},{"location":"Seeds/#removeblockingseedeffects","text":"","title":"Remove\u00b7Blocking\u00b7Seed\u00b7Effects ()"},{"location":"Seeds/#removeseedeffect","text":"","title":"Remove\u00b7Seed\u00b7Effect ()"},{"location":"Seeds/#reset","text":"","title":"Reset ()"},{"location":"Seeds/#restart","text":"","title":"Restart ()"},{"location":"Seeds/#seed2string","text":"","title":"Seed2String ()"},{"location":"Seeds/#setstartseed","text":"","title":"Set\u00b7Start\u00b7Seed ()"},{"location":"Seeds/#string2seed","text":"","title":"String2Seed ()"},{"location":"ShockwaveParams/","text":"Class \"ShockwaveParams\" \u2693\ufe0e Variables \u2693\ufe0e Age \u2693\ufe0e int Age \u2693\ufe0e Life\u00b7Span \u2693\ufe0e int LifeSpan \u2693\ufe0e Position \u2693\ufe0e Vector Position \u2693\ufe0e Strength \u2693\ufe0e float Strength \u2693\ufe0e Time \u2693\ufe0e float Time \u2693\ufe0e Time\u00b7DT \u2693\ufe0e float TimeDT \u2693\ufe0e","title":"ShockwaveParams"},{"location":"ShockwaveParams/#class-shockwaveparams","text":"","title":"Class \"ShockwaveParams\""},{"location":"ShockwaveParams/#variables","text":"","title":"Variables"},{"location":"ShockwaveParams/#age","text":"","title":"Age"},{"location":"ShockwaveParams/#lifespan","text":"","title":"Life\u00b7Span"},{"location":"ShockwaveParams/#position","text":"","title":"Position"},{"location":"ShockwaveParams/#strength","text":"","title":"Strength"},{"location":"ShockwaveParams/#time","text":"","title":"Time"},{"location":"ShockwaveParams/#timedt","text":"","title":"Time\u00b7DT"},{"location":"Sprite/","text":"Class \"Sprite\" \u2693\ufe0e Constructors \u2693\ufe0e Sprite () \u2693\ufe0e Sprite Sprite ( ) \u2693\ufe0e Functions \u2693\ufe0e Get\u00b7Default\u00b7Animation () \u2693\ufe0e string GetDefaultAnimation ( ) \u2693\ufe0e Get\u00b7Default\u00b7Animation\u00b7Name () \u2693\ufe0e string GetDefaultAnimationName ( ) \u2693\ufe0e Get\u00b7Filename () \u2693\ufe0e string GetFilename ( ) \u2693\ufe0e Get\u00b7Frame () \u2693\ufe0e int GetFrame ( ) \u2693\ufe0e Get\u00b7Layer\u00b7Count () \u2693\ufe0e int GetLayerCount ( ) \u2693\ufe0e Get\u00b7Overlay\u00b7Frame () \u2693\ufe0e int GetOverlayFrame ( ) \u2693\ufe0e Get\u00b7Texel () \u2693\ufe0e Color GetTexel ( Vector SamplePos, Vector RenderPos, float AlphaThreshold ) \u2693\ufe0e Is\u00b7Event\u00b7Triggered () \u2693\ufe0e boolean IsEventTriggered ( string EventName ) \u2693\ufe0e Is\u00b7Finished () \u2693\ufe0e boolean IsFinished ( string AnimationName ) \u2693\ufe0e Is\u00b7Loaded () \u2693\ufe0e boolean IsLoaded ( ) \u2693\ufe0e Is\u00b7Overlay\u00b7Finished () \u2693\ufe0e boolean IsOverlayFinished ( string AnimationName ) \u2693\ufe0e Is\u00b7Overlay\u00b7Playing () \u2693\ufe0e boolean IsOverlayPlaying ( string AnimationName ) \u2693\ufe0e Is\u00b7Playing () \u2693\ufe0e boolean IsPlaying ( string AnimationName ) \u2693\ufe0e Load () \u2693\ufe0e void Load ( string Filename, boolean LoadGraphics ) \u2693\ufe0e Loads a given \".anm2\" file. The filepath is relative to the \"resources\" folder. The boolean can be used to load the graphics (.png files) as well, without calling the LoadGraphics() function. Example Code This code creates a new sprite object, loads an .anm2 file and renders it on the screen. 1 2 3 local mySprite = Sprite () mySprite : Load ( \"gfx/myCoolAnimation.anm2\" , true ) mySprite : Render ( Vector ( 75 , 75 ), Vector ( 0 , 0 ), Vector ( 0 , 0 )) Load\u00b7Graphics () \u2693\ufe0e void LoadGraphics ( ) \u2693\ufe0e Loads and applies assosiated graphic-objects like \".png\" files. Example Code This code creates a new sprite object and replaces the spritesheet of layer 0 of a sprite object with a different spritesheet. 1 2 3 4 local mySprite = Sprite () mySprite : Load ( \"gfx/myCoolAnimation.anm2\" , true ) mySprite : ReplaceSpritesheet ( 0 , \"gfx/my_new_spritesheet.png\" ) mySprite : LoadGraphics () Play () \u2693\ufe0e void Play ( string AnimationName, boolean Force ) \u2693\ufe0e Play\u00b7Overlay () \u2693\ufe0e void PlayOverlay ( string AnimationName, boolean Force ) \u2693\ufe0e Play\u00b7Random () \u2693\ufe0e void PlayRandom ( int Seed ) \u2693\ufe0e Reload () \u2693\ufe0e void Reload ( ) \u2693\ufe0e Remove\u00b7Overlay () \u2693\ufe0e void RemoveOverlay ( ) \u2693\ufe0e Render () \u2693\ufe0e void Render ( Vector Pos, Vector TopLeftClamp, Vector BottomRightClamp ) \u2693\ufe0e Render\u00b7Layer () \u2693\ufe0e void RenderLayer ( int LayerId, Vector Pos ) \u2693\ufe0e Replace\u00b7Spritesheet () \u2693\ufe0e void ReplaceSpritesheet ( int LayerId, string PngFilename ) \u2693\ufe0e Changes the \".png\" file assosiated to a specific layer of a sprite. Notes The effect is only applied after calling the LoadGraphics() function afterwards. Example Code This code creates a new sprite object and replaces the spritesheet of layer 0 of a sprite object with a different spritesheet. 1 2 3 4 local mySprite = Sprite () mySprite : Load ( \"gfx/myCoolAnimation.anm2\" , true ) mySprite : ReplaceSpritesheet ( 0 , \"gfx/my_new_spritesheet.png\" ) mySprite : LoadGraphics () Reset () \u2693\ufe0e void Reset ( ) \u2693\ufe0e Set\u00b7Animation () \u2693\ufe0e boolean SetAnimation ( string AnimationName ) \u2693\ufe0e Set\u00b7Frame () \u2693\ufe0e void SetFrame ( string AnimationName, int FrameNum ) \u2693\ufe0e Set\u00b7Last\u00b7Frame () \u2693\ufe0e void SetLastFrame ( ) \u2693\ufe0e Set\u00b7Layer\u00b7Frame () \u2693\ufe0e void SetLayerFrame ( int LayerId, int FrameNum ) \u2693\ufe0e Set\u00b7Overlay\u00b7Animation () \u2693\ufe0e boolean SetOverlayAnimation ( string AnimationName ) \u2693\ufe0e Set\u00b7Overlay\u00b7Frame () \u2693\ufe0e void SetOverlayFrame ( string AnimationName, int FrameNum ) \u2693\ufe0e Set\u00b7Overlay\u00b7Render\u00b7Priority () \u2693\ufe0e void SetOverlayRenderPriority ( boolean RenderFirst ) \u2693\ufe0e Stop () \u2693\ufe0e void Stop ( ) \u2693\ufe0e Update () \u2693\ufe0e void Update ( ) \u2693\ufe0e Was\u00b7Event\u00b7Triggered () \u2693\ufe0e boolean WasEventTriggered ( string EventName ) \u2693\ufe0e Variables \u2693\ufe0e FlipX \u2693\ufe0e boolean FlipX \u2693\ufe0e FlipY \u2693\ufe0e boolean FlipY \u2693\ufe0e Color \u2693\ufe0e Color Color \u2693\ufe0e Offset \u2693\ufe0e Vector Offset \u2693\ufe0e Playback\u00b7Speed \u2693\ufe0e float PlaybackSpeed \u2693\ufe0e Rotation \u2693\ufe0e float Rotation \u2693\ufe0e Scale \u2693\ufe0e Vector Scale \u2693\ufe0e","title":"Sprite"},{"location":"Sprite/#class-sprite","text":"","title":"Class \"Sprite\""},{"location":"Sprite/#constructors","text":"","title":"Constructors"},{"location":"Sprite/#sprite","text":"","title":"Sprite ()"},{"location":"Sprite/#functions","text":"","title":"Functions"},{"location":"Sprite/#getdefaultanimation","text":"","title":"Get\u00b7Default\u00b7Animation ()"},{"location":"Sprite/#getdefaultanimationname","text":"","title":"Get\u00b7Default\u00b7Animation\u00b7Name ()"},{"location":"Sprite/#getfilename","text":"","title":"Get\u00b7Filename ()"},{"location":"Sprite/#getframe","text":"","title":"Get\u00b7Frame ()"},{"location":"Sprite/#getlayercount","text":"","title":"Get\u00b7Layer\u00b7Count ()"},{"location":"Sprite/#getoverlayframe","text":"","title":"Get\u00b7Overlay\u00b7Frame ()"},{"location":"Sprite/#gettexel","text":"","title":"Get\u00b7Texel ()"},{"location":"Sprite/#iseventtriggered","text":"","title":"Is\u00b7Event\u00b7Triggered ()"},{"location":"Sprite/#isfinished","text":"","title":"Is\u00b7Finished ()"},{"location":"Sprite/#isloaded","text":"","title":"Is\u00b7Loaded ()"},{"location":"Sprite/#isoverlayfinished","text":"","title":"Is\u00b7Overlay\u00b7Finished ()"},{"location":"Sprite/#isoverlayplaying","text":"","title":"Is\u00b7Overlay\u00b7Playing ()"},{"location":"Sprite/#isplaying","text":"","title":"Is\u00b7Playing ()"},{"location":"Sprite/#load","text":"","title":"Load ()"},{"location":"Sprite/#loadgraphics","text":"","title":"Load\u00b7Graphics ()"},{"location":"Sprite/#play","text":"","title":"Play ()"},{"location":"Sprite/#playoverlay","text":"","title":"Play\u00b7Overlay ()"},{"location":"Sprite/#playrandom","text":"","title":"Play\u00b7Random ()"},{"location":"Sprite/#reload","text":"","title":"Reload ()"},{"location":"Sprite/#removeoverlay","text":"","title":"Remove\u00b7Overlay ()"},{"location":"Sprite/#render","text":"","title":"Render ()"},{"location":"Sprite/#renderlayer","text":"","title":"Render\u00b7Layer ()"},{"location":"Sprite/#replacespritesheet","text":"","title":"Replace\u00b7Spritesheet ()"},{"location":"Sprite/#reset","text":"","title":"Reset ()"},{"location":"Sprite/#setanimation","text":"","title":"Set\u00b7Animation ()"},{"location":"Sprite/#setframe","text":"","title":"Set\u00b7Frame ()"},{"location":"Sprite/#setlastframe","text":"","title":"Set\u00b7Last\u00b7Frame ()"},{"location":"Sprite/#setlayerframe","text":"","title":"Set\u00b7Layer\u00b7Frame ()"},{"location":"Sprite/#setoverlayanimation","text":"","title":"Set\u00b7Overlay\u00b7Animation ()"},{"location":"Sprite/#setoverlayframe","text":"","title":"Set\u00b7Overlay\u00b7Frame ()"},{"location":"Sprite/#setoverlayrenderpriority","text":"","title":"Set\u00b7Overlay\u00b7Render\u00b7Priority ()"},{"location":"Sprite/#stop","text":"","title":"Stop ()"},{"location":"Sprite/#update","text":"","title":"Update ()"},{"location":"Sprite/#waseventtriggered","text":"","title":"Was\u00b7Event\u00b7Triggered ()"},{"location":"Sprite/#variables","text":"","title":"Variables"},{"location":"Sprite/#flipx","text":"","title":"FlipX"},{"location":"Sprite/#flipy","text":"","title":"FlipY"},{"location":"Sprite/#color","text":"","title":"Color"},{"location":"Sprite/#offset","text":"","title":"Offset"},{"location":"Sprite/#playbackspeed","text":"","title":"Playback\u00b7Speed"},{"location":"Sprite/#rotation","text":"","title":"Rotation"},{"location":"Sprite/#scale","text":"","title":"Scale"},{"location":"TearParams/","text":"Class \"TearParams\" \u2693\ufe0e Variables \u2693\ufe0e Bomb\u00b7Variant \u2693\ufe0e int BombVariant \u2693\ufe0e Tear\u00b7Color \u2693\ufe0e Color TearColor \u2693\ufe0e Tear\u00b7Damage \u2693\ufe0e float TearDamage \u2693\ufe0e Tear\u00b7Flags \u2693\ufe0e int TearFlags \u2693\ufe0e Tear\u00b7Height \u2693\ufe0e float TearHeight \u2693\ufe0e Tear\u00b7Scale \u2693\ufe0e float TearScale \u2693\ufe0e Tear\u00b7Variant \u2693\ufe0e int TearVariant \u2693\ufe0e","title":"TearParams"},{"location":"TearParams/#class-tearparams","text":"","title":"Class \"TearParams\""},{"location":"TearParams/#variables","text":"","title":"Variables"},{"location":"TearParams/#bombvariant","text":"","title":"Bomb\u00b7Variant"},{"location":"TearParams/#tearcolor","text":"","title":"Tear\u00b7Color"},{"location":"TearParams/#teardamage","text":"","title":"Tear\u00b7Damage"},{"location":"TearParams/#tearflags","text":"","title":"Tear\u00b7Flags"},{"location":"TearParams/#tearheight","text":"","title":"Tear\u00b7Height"},{"location":"TearParams/#tearscale","text":"","title":"Tear\u00b7Scale"},{"location":"TearParams/#tearvariant","text":"","title":"Tear\u00b7Variant"},{"location":"TemporaryEffect/","text":"Class \"TemporaryEffect\" \u2693\ufe0e Variables \u2693\ufe0e Cooldown \u2693\ufe0e int Cooldown \u2693\ufe0e Count \u2693\ufe0e int Count \u2693\ufe0e Item \u2693\ufe0e ItemConfig Item \u2693\ufe0e","title":"TemporaryEffect"},{"location":"TemporaryEffect/#class-temporaryeffect","text":"","title":"Class \"TemporaryEffect\""},{"location":"TemporaryEffect/#variables","text":"","title":"Variables"},{"location":"TemporaryEffect/#cooldown","text":"","title":"Cooldown"},{"location":"TemporaryEffect/#count","text":"","title":"Count"},{"location":"TemporaryEffect/#item","text":"","title":"Item"},{"location":"TemporaryEffects/","text":"Class \"TemporaryEffects\" \u2693\ufe0e Functions \u2693\ufe0e Add\u00b7Collectible\u00b7Effect () \u2693\ufe0e void AddCollectibleEffect ( CollectibleType CollectibleType, boolean AddCostume ) \u2693\ufe0e Add\u00b7Null\u00b7Effect () \u2693\ufe0e void AddNullEffect ( Config::NullItemID NullId, boolean AddCostume ) \u2693\ufe0e Add\u00b7Trinket\u00b7Effect () \u2693\ufe0e void AddTrinketEffect ( TrinketType TrinketType, boolean AddCostume ) \u2693\ufe0e Clear\u00b7Effects () \u2693\ufe0e void ClearEffects ( ) \u2693\ufe0e Get\u00b7Collectible\u00b7Effect () \u2693\ufe0e TemporaryEffect GetCollectibleEffect ( CollectibleType CollectibleType ) \u2693\ufe0e Get\u00b7Collectible\u00b7Effect\u00b7Num () \u2693\ufe0e int GetCollectibleEffectNum ( CollectibleType CollectibleType ) \u2693\ufe0e Get\u00b7Effects\u00b7List () \u2693\ufe0e EffectList GetEffectsList ( ) \u2693\ufe0e Get\u00b7Null\u00b7Effect () \u2693\ufe0e TemporaryEffect GetNullEffect ( Config::NullItemID NullId ) \u2693\ufe0e Get\u00b7Null\u00b7Effect\u00b7Num () \u2693\ufe0e int GetNullEffectNum ( Config::NullItemID NullId ) \u2693\ufe0e Get\u00b7Trinket\u00b7Effect () \u2693\ufe0e TemporaryEffect GetTrinketEffect ( TrinketType TrinketType ) \u2693\ufe0e Get\u00b7Trinket\u00b7Effect\u00b7Num () \u2693\ufe0e int GetTrinketEffectNum ( TrinketType TrinketType ) \u2693\ufe0e Has\u00b7Collectible\u00b7Effect () \u2693\ufe0e boolean HasCollectibleEffect ( CollectibleType CollectibleType ) \u2693\ufe0e Has\u00b7Null\u00b7Effect () \u2693\ufe0e boolean HasNullEffect ( Config::NullItemID NullId ) \u2693\ufe0e Has\u00b7Trinket\u00b7Effect () \u2693\ufe0e boolean HasTrinketEffect ( TrinketType TrinketType ) \u2693\ufe0e Remove\u00b7Collectible\u00b7Effect () \u2693\ufe0e void RemoveCollectibleEffect ( CollectibleType CollectibleType ) \u2693\ufe0e Remove\u00b7Null\u00b7Effect () \u2693\ufe0e void RemoveNullEffect ( Config::NullItemID NullId ) \u2693\ufe0e Remove\u00b7Trinket\u00b7Effect () \u2693\ufe0e void RemoveTrinketEffect ( TrinketType TrinketType ) \u2693\ufe0e","title":"TemporaryEffects"},{"location":"TemporaryEffects/#class-temporaryeffects","text":"","title":"Class \"TemporaryEffects\""},{"location":"TemporaryEffects/#functions","text":"","title":"Functions"},{"location":"TemporaryEffects/#addcollectibleeffect","text":"","title":"Add\u00b7Collectible\u00b7Effect ()"},{"location":"TemporaryEffects/#addnulleffect","text":"","title":"Add\u00b7Null\u00b7Effect ()"},{"location":"TemporaryEffects/#addtrinketeffect","text":"","title":"Add\u00b7Trinket\u00b7Effect ()"},{"location":"TemporaryEffects/#cleareffects","text":"","title":"Clear\u00b7Effects ()"},{"location":"TemporaryEffects/#getcollectibleeffect","text":"","title":"Get\u00b7Collectible\u00b7Effect ()"},{"location":"TemporaryEffects/#getcollectibleeffectnum","text":"","title":"Get\u00b7Collectible\u00b7Effect\u00b7Num ()"},{"location":"TemporaryEffects/#geteffectslist","text":"","title":"Get\u00b7Effects\u00b7List ()"},{"location":"TemporaryEffects/#getnulleffect","text":"","title":"Get\u00b7Null\u00b7Effect ()"},{"location":"TemporaryEffects/#getnulleffectnum","text":"","title":"Get\u00b7Null\u00b7Effect\u00b7Num ()"},{"location":"TemporaryEffects/#gettrinketeffect","text":"","title":"Get\u00b7Trinket\u00b7Effect ()"},{"location":"TemporaryEffects/#gettrinketeffectnum","text":"","title":"Get\u00b7Trinket\u00b7Effect\u00b7Num ()"},{"location":"TemporaryEffects/#hascollectibleeffect","text":"","title":"Has\u00b7Collectible\u00b7Effect ()"},{"location":"TemporaryEffects/#hasnulleffect","text":"","title":"Has\u00b7Null\u00b7Effect ()"},{"location":"TemporaryEffects/#hastrinketeffect","text":"","title":"Has\u00b7Trinket\u00b7Effect ()"},{"location":"TemporaryEffects/#removecollectibleeffect","text":"","title":"Remove\u00b7Collectible\u00b7Effect ()"},{"location":"TemporaryEffects/#removenulleffect","text":"","title":"Remove\u00b7Null\u00b7Effect ()"},{"location":"TemporaryEffects/#removetrinketeffect","text":"","title":"Remove\u00b7Trinket\u00b7Effect ()"},{"location":"Vector/","text":"Class \"Vector\" \u2693\ufe0e Constructors \u2693\ufe0e Vector () \u2693\ufe0e Vector Vector ( float , float ) \u2693\ufe0e Operators \u2693\ufe0e __add () \u2693\ufe0e Vector __add ( Vector Right ) \u2693\ufe0e Defines the Addition of two Vector objects using the + operator. Example Code 1 2 3 local vec1 = Vector ( 2 , 1 ) local vec2 = Vector ( 5 , 3 ) local result = vec1 + vec2 -- result equals Vector(7,4) now __div () \u2693\ufe0e Vector __div ( float Modifier ) \u2693\ufe0e Defines the Division of two Vector objects using the / operator. Example Code 1 2 3 local vec1 = Vector ( 6 , 4 ) local vec2 = Vector ( 2 , 4 ) local result = vec1 / vec2 -- result equals Vector(3,1) now __mul () \u2693\ufe0e Vector __mul ( float Modifier ) \u2693\ufe0e Defines the Multiplication of two Vector objects using the * operator. Example Code 1 2 3 local vec1 = Vector ( 2 , 3 ) local vec2 = Vector ( 5 , 3 ) local result = vec1 * vec2 -- result equals Vector(10,9) now __sub () \u2693\ufe0e Vector __sub ( Vector Right ) \u2693\ufe0e Defines the Subtraction of two Vector objects using the - operator. Example Code 1 2 3 local vec1 = Vector ( 2 , 1 ) local vec2 = Vector ( 5 , 3 ) local result = vec1 - vec2 -- result equals Vector(-3,-2) now __unm () \u2693\ufe0e Vector __unm ( Vector Right ) \u2693\ufe0e Defines the inversion of a Vector object using the - operator. Example Code 1 2 local vec1 = Vector ( 2 , 1 ) local result = - vec1 -- result equals Vector(-2,-1) now Functions \u2693\ufe0e Clamp () \u2693\ufe0e void Clamp ( float MinX, float MinY, float MaxX, float MaxY ) \u2693\ufe0e Clamps the vector based on left, top, right, bottom boundings. Doesn't keep direction Clamped () \u2693\ufe0e Vector Clamped ( float MinX, float MinY, float MaxX, float MaxY ) \u2693\ufe0e Returns a clamped version of the vector. Cross () \u2693\ufe0e float Cross ( Vector second ) \u2693\ufe0e Cross product this is the 2x2 matrix determinant or the resulting z value for their 3D versions with z=0 Distance () \u2693\ufe0e float Distance ( Vector first, Vector second ) \u2693\ufe0e Returns distance between two vectors Example Code 1 local sqtDist = Vector ( 2 , 0 ): Distance ( Vector ( 4 , 0 ))) --sqtDist = 2 Distance\u00b7Squared () \u2693\ufe0e float DistanceSquared ( Vector first, Vector second ) \u2693\ufe0e Returns squared distance between two vectors Example Code 1 local sqtDist = Vector ( 2 , 0 ): DistanceSquared ( Vector ( 4 , 0 ))) --sqtDist = 4 Dot () \u2693\ufe0e float Dot ( Vector second ) \u2693\ufe0e Dot product From\u00b7Angle () \u2693\ufe0e static Vector FromAngle ( float AngleDegrees ) \u2693\ufe0e Build a Vector from an angle, returns a normalized vector. Angle 0 will result in (1, 0). Angle 90 will result in (0, 1). Example Code This code returns a vector that has a 45 degree angle 1 local vec = Vector . FromAngle ( 45 )) --vec is now Vector(0.70711,0.70711) Get\u00b7Angle\u00b7Degrees () \u2693\ufe0e float GetAngleDegrees ( ) \u2693\ufe0e Returns the angle the vector is facing. The vector (1, 0) will be at 0 degrees. The vector (0, 1) will be at 90 degrees. Example Code This code returns the angle between two positions. 1 2 3 4 local v1 = Vector ( 1 , 0 ) -- has angle 0.0 local v2 = Vector ( 0 , 1 ) -- has angle 90.0 local v3 = v2 - v1 -- subtraction of 2 points is a vector connecting the two points print ( v3 : GetAngleDegrees ()) -- prints 45.0 Length () \u2693\ufe0e float Length ( ) \u2693\ufe0e Returns the length of the vector Length\u00b7Squared () \u2693\ufe0e float LengthSquared ( ) \u2693\ufe0e Returns the length squared of the vector Lerp () \u2693\ufe0e Vector Lerp ( Vector first, Vector second, float t ) \u2693\ufe0e Linear interpolation between two vectors. For t = 0 it returns the first Vector, for t = 1 it returns the second. Alternate Function example This function does the same as Lerp, but will not alter the input vectors. 1 2 3 function Lerp ( vec1 , vec2 , percent ) return vec1 * ( 1 - percent ) + vec2 * percent end Example Code This code will make v1 the vector 50% in between v1 and v2 1 2 3 local v1 = Vector ( 0 , 0 ) local v2 = Vector ( 1 , 1 ) v1 : Lerp ( v2 , 0.5 ) -- v1 equals Vector(0.5,0.5) now Normalize () \u2693\ufe0e void Normalize ( ) \u2693\ufe0e Normalizes this vector Normalized () \u2693\ufe0e Vector Normalized ( ) \u2693\ufe0e Returns a normalized version of this vector Resize () \u2693\ufe0e void Resize ( float NewLength ) \u2693\ufe0e Resizes the vector length. Resized () \u2693\ufe0e Vector Resized ( float NewLength ) \u2693\ufe0e Returns a resized version of the vector. Rotated () \u2693\ufe0e Vector Rotated ( float AngleDegrees ) \u2693\ufe0e Returns a rotated version of the vector by AngleDegrees Variables \u2693\ufe0e X \u2693\ufe0e float X \u2693\ufe0e Components of vector. Y \u2693\ufe0e float Y \u2693\ufe0e","title":"Vector"},{"location":"Vector/#class-vector","text":"","title":"Class \"Vector\""},{"location":"Vector/#constructors","text":"","title":"Constructors"},{"location":"Vector/#vector","text":"","title":"Vector ()"},{"location":"Vector/#operators","text":"","title":"Operators"},{"location":"Vector/#__add","text":"","title":"__add ()"},{"location":"Vector/#__div","text":"","title":"__div ()"},{"location":"Vector/#__mul","text":"","title":"__mul ()"},{"location":"Vector/#__sub","text":"","title":"__sub ()"},{"location":"Vector/#__unm","text":"","title":"__unm ()"},{"location":"Vector/#functions","text":"","title":"Functions"},{"location":"Vector/#clamp","text":"","title":"Clamp ()"},{"location":"Vector/#clamped","text":"","title":"Clamped ()"},{"location":"Vector/#cross","text":"","title":"Cross ()"},{"location":"Vector/#distance","text":"","title":"Distance ()"},{"location":"Vector/#distancesquared","text":"","title":"Distance\u00b7Squared ()"},{"location":"Vector/#dot","text":"","title":"Dot ()"},{"location":"Vector/#fromangle","text":"","title":"From\u00b7Angle ()"},{"location":"Vector/#getangledegrees","text":"","title":"Get\u00b7Angle\u00b7Degrees ()"},{"location":"Vector/#length","text":"","title":"Length ()"},{"location":"Vector/#lengthsquared","text":"","title":"Length\u00b7Squared ()"},{"location":"Vector/#lerp","text":"","title":"Lerp ()"},{"location":"Vector/#normalize","text":"","title":"Normalize ()"},{"location":"Vector/#normalized","text":"","title":"Normalized ()"},{"location":"Vector/#resize","text":"","title":"Resize ()"},{"location":"Vector/#resized","text":"","title":"Resized ()"},{"location":"Vector/#rotated","text":"","title":"Rotated ()"},{"location":"Vector/#variables","text":"","title":"Variables"},{"location":"Vector/#x","text":"","title":"X"},{"location":"Vector/#y","text":"","title":"Y"},{"location":"enums/ActionTriggers/","text":"Enum \"ActionTriggers\" \u2693\ufe0e DLC Value Enumerator Comment 0 ACTIONTRIGGER_NONE 1 ACTIONTRIGGER_BOMBPLACED 1<<1 ACTIONTRIGGER_MOVED 1<<2 ACTIONTRIGGER_SHOOTING 1<<3 ACTIONTRIGGER_CARDPILLUSED 1<<4 ACTIONTRIGGER_ITEMACTIVATED 1<<5 ACTIONTRIGGER_ITEMSDROPPED","title":"ActionTriggers"},{"location":"enums/ActionTriggers/#enum-actiontriggers","text":"DLC Value Enumerator Comment 0 ACTIONTRIGGER_NONE 1 ACTIONTRIGGER_BOMBPLACED 1<<1 ACTIONTRIGGER_MOVED 1<<2 ACTIONTRIGGER_SHOOTING 1<<3 ACTIONTRIGGER_CARDPILLUSED 1<<4 ACTIONTRIGGER_ITEMACTIVATED 1<<5 ACTIONTRIGGER_ITEMSDROPPED","title":"Enum \"ActionTriggers\""},{"location":"enums/BabySubType/","text":"Enum \"BabySubType\" \u2693\ufe0e DLC Value Enumerator Comment -1 BABY_UNASSIGNED 0 BABY_SPIDER 1 BABY_LOVE 2 BABY_BLOAT 3 BABY_WATER 4 BABY_PSY 5 BABY_CURSED 6 BABY_TROLL 7 BABY_YBAB 8 BABY_COCKEYED 9 BABY_HOST 10 BABY_LOST 11 BABY_CUTE 12 BABY_CROW 13 BABY_SHADOW 14 BABY_GLASS 15 BABY_GOLD 16 BABY_CY 17 BABY_BEAN 18 BABY_MAG 19 BABY_WRATH 20 BABY_WRAPPED 21 BABY_BEGOTTEN 22 BABY_DEAD 23 BABY_FIGHTING 24 BABY_0 25 BABY_GLITCH 26 BABY_MAGNET 27 BABY_BLACK 28 BABY_RED 29 BABY_WHITE 30 BABY_BLUE 31 BABY_RAGE 32 BABY_CRY 33 BABY_YELLOW 34 BABY_LONG 35 BABY_GREEN 36 BABY_LIL 37 BABY_BIG 38 BABY_BROWN 39 BABY_NOOSE 40 BABY_HIVE 41 BABY_BUDDY 42 BABY_COLORFUL 43 BABY_WHORE 44 BABY_CRACKED 45 BABY_DRIPPING 46 BABY_BLINDING 47 BABY_SUCKY 48 BABY_DARK 49 BABY_PICKY 50 BABY_REVENGE 51 BABY_BELIAL 52 BABY_SALE 53 BABY_GOAT 54 BABY_SUPER_GREED 55 BABY_MORT 56 BABY_APOLLYON 57 BABY_BONE 58 BABY_BOUND 59 BABY_BASIC","title":"BabySubType"},{"location":"enums/BabySubType/#enum-babysubtype","text":"DLC Value Enumerator Comment -1 BABY_UNASSIGNED 0 BABY_SPIDER 1 BABY_LOVE 2 BABY_BLOAT 3 BABY_WATER 4 BABY_PSY 5 BABY_CURSED 6 BABY_TROLL 7 BABY_YBAB 8 BABY_COCKEYED 9 BABY_HOST 10 BABY_LOST 11 BABY_CUTE 12 BABY_CROW 13 BABY_SHADOW 14 BABY_GLASS 15 BABY_GOLD 16 BABY_CY 17 BABY_BEAN 18 BABY_MAG 19 BABY_WRATH 20 BABY_WRAPPED 21 BABY_BEGOTTEN 22 BABY_DEAD 23 BABY_FIGHTING 24 BABY_0 25 BABY_GLITCH 26 BABY_MAGNET 27 BABY_BLACK 28 BABY_RED 29 BABY_WHITE 30 BABY_BLUE 31 BABY_RAGE 32 BABY_CRY 33 BABY_YELLOW 34 BABY_LONG 35 BABY_GREEN 36 BABY_LIL 37 BABY_BIG 38 BABY_BROWN 39 BABY_NOOSE 40 BABY_HIVE 41 BABY_BUDDY 42 BABY_COLORFUL 43 BABY_WHORE 44 BABY_CRACKED 45 BABY_DRIPPING 46 BABY_BLINDING 47 BABY_SUCKY 48 BABY_DARK 49 BABY_PICKY 50 BABY_REVENGE 51 BABY_BELIAL 52 BABY_SALE 53 BABY_GOAT 54 BABY_SUPER_GREED 55 BABY_MORT 56 BABY_APOLLYON 57 BABY_BONE 58 BABY_BOUND 59 BABY_BASIC","title":"Enum \"BabySubType\""},{"location":"enums/BombSubType/","text":"Enum \"BombSubType\" \u2693\ufe0e DLC Value Enumerator Comment 1 BOMB_NORMAL 2 BOMB_DOUBLEPACK 3 BOMB_TROLL 4 BOMB_GOLDEN 5 BOMB_SUPERTROLL","title":"BombSubType"},{"location":"enums/BombSubType/#enum-bombsubtype","text":"DLC Value Enumerator Comment 1 BOMB_NORMAL 2 BOMB_DOUBLEPACK 3 BOMB_TROLL 4 BOMB_GOLDEN 5 BOMB_SUPERTROLL","title":"Enum \"BombSubType\""},{"location":"enums/BombVariant/","text":"Enum \"BombVariant\" \u2693\ufe0e DLC Value Enumerator Comment 0 BOMB_NORMAL 1 BOMB_BIG 2 BOMB_DECOY 3 BOMB_TROLL 4 BOMB_SUPERTROLL 5 BOMB_POISON 6 BOMB_POISON_BIG 7 BOMB_SAD 8 BOMB_HOT 9 BOMB_BUTT 10 BOMB_MR_MEGA 11 BOMB_BOBBY 12 BOMB_GLITTER","title":"BombVariant"},{"location":"enums/BombVariant/#enum-bombvariant","text":"DLC Value Enumerator Comment 0 BOMB_NORMAL 1 BOMB_BIG 2 BOMB_DECOY 3 BOMB_TROLL 4 BOMB_SUPERTROLL 5 BOMB_POISON 6 BOMB_POISON_BIG 7 BOMB_SAD 8 BOMB_HOT 9 BOMB_BUTT 10 BOMB_MR_MEGA 11 BOMB_BOBBY 12 BOMB_GLITTER","title":"Enum \"BombVariant\""},{"location":"enums/ButtonAction/","text":"Enum \"ButtonAction\" \u2693\ufe0e DLC Value Enumerator Comment 0 ACTION_LEFT 1 ACTION_RIGHT 2 ACTION_UP 3 ACTION_DOWN 4 ACTION_SHOOTLEFT 5 ACTION_SHOOTRIGHT 6 ACTION_SHOOTUP 7 ACTION_SHOOTDOWN 8 ACTION_BOMB 9 ACTION_ITEM 10 ACTION_PILLCARD 11 ACTION_DROP 12 ACTION_PAUSE 13 ACTION_MAP 14 ACTION_MENUCONFIRM 15 ACTION_MENUBACK 16 ACTION_RESTART 17 ACTION_FULLSCREEN 18 ACTION_MUTE 19 ACTION_JOINMULTIPLAYER 20 ACTION_MENULEFT 21 ACTION_MENURIGHT 22 ACTION_MENUUP 23 ACTION_MENUDOWN 24 ACTION_MENULT 25 ACTION_MENURT 26 ACTION_MENUTAB 28 ACTION_CONSOLE USE ONLY FOR HOOKING! To check the input use IsButtonTriggered with desired key","title":"ButtonAction"},{"location":"enums/ButtonAction/#enum-buttonaction","text":"DLC Value Enumerator Comment 0 ACTION_LEFT 1 ACTION_RIGHT 2 ACTION_UP 3 ACTION_DOWN 4 ACTION_SHOOTLEFT 5 ACTION_SHOOTRIGHT 6 ACTION_SHOOTUP 7 ACTION_SHOOTDOWN 8 ACTION_BOMB 9 ACTION_ITEM 10 ACTION_PILLCARD 11 ACTION_DROP 12 ACTION_PAUSE 13 ACTION_MAP 14 ACTION_MENUCONFIRM 15 ACTION_MENUBACK 16 ACTION_RESTART 17 ACTION_FULLSCREEN 18 ACTION_MUTE 19 ACTION_JOINMULTIPLAYER 20 ACTION_MENULEFT 21 ACTION_MENURIGHT 22 ACTION_MENUUP 23 ACTION_MENUDOWN 24 ACTION_MENULT 25 ACTION_MENURT 26 ACTION_MENUTAB 28 ACTION_CONSOLE USE ONLY FOR HOOKING! To check the input use IsButtonTriggered with desired key","title":"Enum \"ButtonAction\""},{"location":"enums/CacheFlag/","text":"Enum \"CacheFlag\" \u2693\ufe0e DLC Value Enumerator Value Comment 1 CACHE_DAMAGE 1 2 CACHE_FIREDELAY 2 4 CACHE_SHOTSPEED 4 8 CACHE_RANGE 8 16 CACHE_SPEED 16 32 CACHE_TEARFLAG 32 64 CACHE_TEARCOLOR 64 128 CACHE_FLYING 128 256 CACHE_WEAPON 256 512 CACHE_FAMILIARS 512 1024 CACHE_LUCK 1024 0xFFFFFFFF CACHE_ALL 0xFFFFFFFF","title":"CacheFlag"},{"location":"enums/CacheFlag/#enum-cacheflag","text":"DLC Value Enumerator Value Comment 1 CACHE_DAMAGE 1 2 CACHE_FIREDELAY 2 4 CACHE_SHOTSPEED 4 8 CACHE_RANGE 8 16 CACHE_SPEED 16 32 CACHE_TEARFLAG 32 64 CACHE_TEARCOLOR 64 128 CACHE_FLYING 128 256 CACHE_WEAPON 256 512 CACHE_FAMILIARS 512 1024 CACHE_LUCK 1024 0xFFFFFFFF CACHE_ALL 0xFFFFFFFF","title":"Enum \"CacheFlag\""},{"location":"enums/Card/","text":"Enum \"Card\" \u2693\ufe0e DLC Value Enumerator Comment -1 CARD_RANDOM 0 CARD_NULL 1 CARD_FOOL 2 CARD_MAGICIAN 3 CARD_HIGH_PRIESTESS 4 CARD_EMPRESS 5 CARD_EMPEROR 6 CARD_HIEROPHANT 7 CARD_LOVERS 8 CARD_CHARIOT 9 CARD_JUSTICE 10 CARD_HERMIT 11 CARD_WHEEL_OF_FORTUNE 12 CARD_STRENGTH 13 CARD_HANGED_MAN 14 CARD_DEATH 15 CARD_TEMPERANCE 16 CARD_DEVIL 17 CARD_TOWER 18 CARD_STARS 19 CARD_MOON 20 CARD_SUN 21 CARD_JUDGEMENT 22 CARD_WORLD 23 CARD_CLUBS_2 24 CARD_DIAMONDS_2 25 CARD_SPADES_2 26 CARD_HEARTS_2 27 CARD_ACE_OF_CLUBS 28 CARD_ACE_OF_DIAMONDS 29 CARD_ACE_OF_SPADES 30 CARD_ACE_OF_HEARTS 31 CARD_JOKER 32 RUNE_HAGALAZ 33 RUNE_JERA 34 RUNE_EHWAZ 35 RUNE_DAGAZ 36 RUNE_ANSUZ 37 RUNE_PERTHRO 38 RUNE_BERKANO 39 RUNE_ALGIZ 40 RUNE_BLANK 41 RUNE_BLACK 42 CARD_CHAOS 43 CARD_CREDIT 44 CARD_RULES 45 CARD_HUMANITY 46 CARD_SUICIDE_KING 47 CARD_GET_OUT_OF_JAIL 48 CARD_QUESTIONMARK 49 CARD_DICE_SHARD 50 CARD_EMERGENCY_CONTACT 51 CARD_HOLY 52 CARD_HUGE_GROWTH 53 CARD_ANCIENT_RECALL 54 CARD_ERA_WALK 55 NUM_CARDS","title":"Card"},{"location":"enums/Card/#enum-card","text":"DLC Value Enumerator Comment -1 CARD_RANDOM 0 CARD_NULL 1 CARD_FOOL 2 CARD_MAGICIAN 3 CARD_HIGH_PRIESTESS 4 CARD_EMPRESS 5 CARD_EMPEROR 6 CARD_HIEROPHANT 7 CARD_LOVERS 8 CARD_CHARIOT 9 CARD_JUSTICE 10 CARD_HERMIT 11 CARD_WHEEL_OF_FORTUNE 12 CARD_STRENGTH 13 CARD_HANGED_MAN 14 CARD_DEATH 15 CARD_TEMPERANCE 16 CARD_DEVIL 17 CARD_TOWER 18 CARD_STARS 19 CARD_MOON 20 CARD_SUN 21 CARD_JUDGEMENT 22 CARD_WORLD 23 CARD_CLUBS_2 24 CARD_DIAMONDS_2 25 CARD_SPADES_2 26 CARD_HEARTS_2 27 CARD_ACE_OF_CLUBS 28 CARD_ACE_OF_DIAMONDS 29 CARD_ACE_OF_SPADES 30 CARD_ACE_OF_HEARTS 31 CARD_JOKER 32 RUNE_HAGALAZ 33 RUNE_JERA 34 RUNE_EHWAZ 35 RUNE_DAGAZ 36 RUNE_ANSUZ 37 RUNE_PERTHRO 38 RUNE_BERKANO 39 RUNE_ALGIZ 40 RUNE_BLANK 41 RUNE_BLACK 42 CARD_CHAOS 43 CARD_CREDIT 44 CARD_RULES 45 CARD_HUMANITY 46 CARD_SUICIDE_KING 47 CARD_GET_OUT_OF_JAIL 48 CARD_QUESTIONMARK 49 CARD_DICE_SHARD 50 CARD_EMERGENCY_CONTACT 51 CARD_HOLY 52 CARD_HUGE_GROWTH 53 CARD_ANCIENT_RECALL 54 CARD_ERA_WALK 55 NUM_CARDS","title":"Enum \"Card\""},{"location":"enums/Challenge/","text":"Enum \"Challenge\" \u2693\ufe0e DLC Value Enumerator Comment 0 CHALLENGE_NULL 1 CHALLENGE_PITCH_BLACK 2 CHALLENGE_HIGH_BROW 3 CHALLENGE_HEAD_TRAUMA 4 CHALLENGE_DARKNESS_FALLS 5 CHALLENGE_THE_TANK 6 CHALLENGE_SOLAR_SYSTEM 7 CHALLENGE_SUICIDE_KING 8 CHALLENGE_CAT_GOT_YOUR_TONGUE 9 CHALLENGE_DEMO_MAN 10 CHALLENGE_CURSED 11 CHALLENGE_GLASS_CANNON 12 CHALLENGE_WHEN_LIFE_GIVES_LEMONS 13 CHALLENGE_BEANS 14 CHALLENGE_ITS_IN_THE_CARDS 15 CHALLENGE_SLOW_ROLL 16 CHALLENGE_COMPUTER_SAVY 17 CHALLENGE_WAKA_WAKA 18 CHALLENGE_THE_HOST 19 CHALLENGE_THE_FAMILY_MAN 20 CHALLENGE_PURIST 21 CHALLENGE_XXXXXXXXL 22 CHALLENGE_SPEED 23 CHALLENGE_BLUE_BOMBER 24 CHALLENGE_PAY_TO_PLAY 25 CHALLENGE_HAVE_A_HEART 26 CHALLENGE_I_RULE 27 CHALLENGE_BRAINS 28 CHALLENGE_PRIDE_DAY 29 CHALLENGE_ONANS_STREAK 30 CHALLENGE_GUARDIAN 31 CHALLENGE_BACKASSWARDS 32 CHALLENGE_APRILS_FOOL 33 CHALLENGE_POKEY_MANS 34 CHALLENGE_ULTRA_HARD 35 CHALLENGE_PONG 36 NUM_CHALLENGES","title":"Challenge"},{"location":"enums/Challenge/#enum-challenge","text":"DLC Value Enumerator Comment 0 CHALLENGE_NULL 1 CHALLENGE_PITCH_BLACK 2 CHALLENGE_HIGH_BROW 3 CHALLENGE_HEAD_TRAUMA 4 CHALLENGE_DARKNESS_FALLS 5 CHALLENGE_THE_TANK 6 CHALLENGE_SOLAR_SYSTEM 7 CHALLENGE_SUICIDE_KING 8 CHALLENGE_CAT_GOT_YOUR_TONGUE 9 CHALLENGE_DEMO_MAN 10 CHALLENGE_CURSED 11 CHALLENGE_GLASS_CANNON 12 CHALLENGE_WHEN_LIFE_GIVES_LEMONS 13 CHALLENGE_BEANS 14 CHALLENGE_ITS_IN_THE_CARDS 15 CHALLENGE_SLOW_ROLL 16 CHALLENGE_COMPUTER_SAVY 17 CHALLENGE_WAKA_WAKA 18 CHALLENGE_THE_HOST 19 CHALLENGE_THE_FAMILY_MAN 20 CHALLENGE_PURIST 21 CHALLENGE_XXXXXXXXL 22 CHALLENGE_SPEED 23 CHALLENGE_BLUE_BOMBER 24 CHALLENGE_PAY_TO_PLAY 25 CHALLENGE_HAVE_A_HEART 26 CHALLENGE_I_RULE 27 CHALLENGE_BRAINS 28 CHALLENGE_PRIDE_DAY 29 CHALLENGE_ONANS_STREAK 30 CHALLENGE_GUARDIAN 31 CHALLENGE_BACKASSWARDS 32 CHALLENGE_APRILS_FOOL 33 CHALLENGE_POKEY_MANS 34 CHALLENGE_ULTRA_HARD 35 CHALLENGE_PONG 36 NUM_CHALLENGES","title":"Enum \"Challenge\""},{"location":"enums/ChestSubType/","text":"Enum \"ChestSubType\" \u2693\ufe0e DLC Value Enumerator Comment 0 CHEST_OPENED 1 CHEST_CLOSED","title":"ChestSubType"},{"location":"enums/ChestSubType/#enum-chestsubtype","text":"DLC Value Enumerator Comment 0 CHEST_OPENED 1 CHEST_CLOSED","title":"Enum \"ChestSubType\""},{"location":"enums/CoinSubType/","text":"Enum \"CoinSubType\" \u2693\ufe0e DLC Value Enumerator Comment 1 COIN_PENNY 2 COIN_NICKEL 3 COIN_DIME 4 COIN_DOUBLEPACK 5 COIN_LUCKYPENNY 6 COIN_STICKYNICKEL","title":"CoinSubType"},{"location":"enums/CoinSubType/#enum-coinsubtype","text":"DLC Value Enumerator Comment 1 COIN_PENNY 2 COIN_NICKEL 3 COIN_DIME 4 COIN_DOUBLEPACK 5 COIN_LUCKYPENNY 6 COIN_STICKYNICKEL","title":"Enum \"CoinSubType\""},{"location":"enums/CollectibleType/","text":"Enum \"CollectibleType\" \u2693\ufe0e DLC Value Enumerator Comment 0 COLLECTIBLE_NULL 1 COLLECTIBLE_SAD_ONION 2 COLLECTIBLE_INNER_EYE 3 COLLECTIBLE_SPOON_BENDER 4 COLLECTIBLE_MAXS_HEAD 5 COLLECTIBLE_MY_REFLECTION 6 COLLECTIBLE_NUMBER_ONE 7 COLLECTIBLE_BLOOD_MARTYR 8 COLLECTIBLE_BROTHER_BOBBY 9 COLLECTIBLE_SKATOLE 10 COLLECTIBLE_HALO_OF_FLIES 11 COLLECTIBLE_ONE_UP 12 COLLECTIBLE_MAGIC_MUSHROOM 13 COLLECTIBLE_VIRUS 14 COLLECTIBLE_ROID_RAGE 15 COLLECTIBLE_HEART 16 COLLECTIBLE_RAW_LIVER 17 COLLECTIBLE_SKELETON_KEY 18 COLLECTIBLE_DOLLAR 19 COLLECTIBLE_BOOM 20 COLLECTIBLE_TRANSCENDENCE 21 COLLECTIBLE_COMPASS 22 COLLECTIBLE_LUNCH 23 COLLECTIBLE_DINNER 24 COLLECTIBLE_DESSERT 25 COLLECTIBLE_BREAKFAST 26 COLLECTIBLE_ROTTEN_MEAT 27 COLLECTIBLE_WOODEN_SPOON 28 COLLECTIBLE_BELT 29 COLLECTIBLE_MOMS_UNDERWEAR 30 COLLECTIBLE_MOMS_HEELS 31 COLLECTIBLE_MOMS_LIPSTICK 32 COLLECTIBLE_WIRE_COAT_HANGER 33 COLLECTIBLE_BIBLE 34 COLLECTIBLE_BOOK_OF_BELIAL 35 COLLECTIBLE_NECRONOMICON 36 COLLECTIBLE_POOP 37 COLLECTIBLE_MR_BOOM 38 COLLECTIBLE_TAMMYS_HEAD 39 COLLECTIBLE_MOMS_BRA 40 COLLECTIBLE_KAMIKAZE 41 COLLECTIBLE_MOMS_PAD 42 COLLECTIBLE_BOBS_ROTTEN_HEAD 43 COLLECTIBLE_PILLS_HERE 44 COLLECTIBLE_TELEPORT 45 COLLECTIBLE_YUM_HEART 46 COLLECTIBLE_LUCKY_FOOT 47 COLLECTIBLE_DOCTORS_REMOTE 48 COLLECTIBLE_CUPIDS_ARROW 49 COLLECTIBLE_SHOOP_DA_WHOOP 50 COLLECTIBLE_STEVEN 51 COLLECTIBLE_PENTAGRAM 52 COLLECTIBLE_DR_FETUS 53 COLLECTIBLE_MAGNETO 54 COLLECTIBLE_TREASURE_MAP 55 COLLECTIBLE_MOMS_EYE 56 COLLECTIBLE_LEMON_MISHAP 57 COLLECTIBLE_DISTANT_ADMIRATION 58 COLLECTIBLE_BOOK_OF_SHADOWS 59 COLLECTIBLE_059 60 COLLECTIBLE_LADDER 61 COLLECTIBLE_TAROT_CARD 62 COLLECTIBLE_CHARM_VAMPIRE 63 COLLECTIBLE_BATTERY 64 COLLECTIBLE_STEAM_SALE 65 COLLECTIBLE_ANARCHIST_COOKBOOK 66 COLLECTIBLE_HOURGLASS 67 COLLECTIBLE_SISTER_MAGGY 68 COLLECTIBLE_TECHNOLOGY 69 COLLECTIBLE_CHOCOLATE_MILK 70 COLLECTIBLE_GROWTH_HORMONES 71 COLLECTIBLE_MINI_MUSH 72 COLLECTIBLE_ROSARY 73 COLLECTIBLE_CUBE_OF_MEAT 74 COLLECTIBLE_QUARTER 75 COLLECTIBLE_PHD 76 COLLECTIBLE_XRAY_VISION 77 COLLECTIBLE_MY_LITTLE_UNICORN 78 COLLECTIBLE_BOOK_REVELATIONS 79 COLLECTIBLE_MARK 80 COLLECTIBLE_PACT 81 COLLECTIBLE_DEAD_CAT 82 COLLECTIBLE_LORD_OF_THE_PIT 83 COLLECTIBLE_THE_NAIL 84 COLLECTIBLE_WE_NEED_GO_DEEPER 85 COLLECTIBLE_DECK_OF_CARDS 86 COLLECTIBLE_MONSTROS_TOOTH 87 COLLECTIBLE_LOKIS_HORNS 88 COLLECTIBLE_LITTLE_CHUBBY 89 COLLECTIBLE_SPIDER_BITE 90 COLLECTIBLE_SMALL_ROCK 91 COLLECTIBLE_SPELUNKER_HAT 92 COLLECTIBLE_SUPER_BANDAGE 93 COLLECTIBLE_GAMEKID 94 COLLECTIBLE_SACK_OF_PENNIES 95 COLLECTIBLE_ROBO_BABY 96 COLLECTIBLE_LITTLE_CHAD 97 COLLECTIBLE_BOOK_OF_SIN 98 COLLECTIBLE_RELIC 99 COLLECTIBLE_LITTLE_GISH 100 COLLECTIBLE_LITTLE_STEVEN 101 COLLECTIBLE_HALO 102 COLLECTIBLE_MOMS_BOTTLE_PILLS 103 COLLECTIBLE_COMMON_COLD 104 COLLECTIBLE_PARASITE 105 COLLECTIBLE_D6 106 COLLECTIBLE_MR_MEGA 107 COLLECTIBLE_PINKING_SHEARS 108 COLLECTIBLE_WAFER 109 COLLECTIBLE_MONEY_IS_POWER 110 COLLECTIBLE_MOMS_CONTACTS 111 COLLECTIBLE_BEAN 112 COLLECTIBLE_GUARDIAN_ANGEL 113 COLLECTIBLE_DEMON_BABY 114 COLLECTIBLE_MOMS_KNIFE 115 COLLECTIBLE_OUIJA_BOARD 116 COLLECTIBLE_NINE_VOLT 117 COLLECTIBLE_DEAD_BIRD 118 COLLECTIBLE_BRIMSTONE 119 COLLECTIBLE_BLOOD_BAG 120 COLLECTIBLE_ODD_MUSHROOM_RATE 121 COLLECTIBLE_ODD_MUSHROOM_DAMAGE 122 COLLECTIBLE_WHORE_OF_BABYLON 123 COLLECTIBLE_MONSTER_MANUAL 124 COLLECTIBLE_DEAD_SEA_SCROLLS 125 COLLECTIBLE_BOBBY_BOMB 126 COLLECTIBLE_RAZOR_BLADE 127 COLLECTIBLE_FORGET_ME_NOW 128 COLLECTIBLE_FOREVER_ALONE 129 COLLECTIBLE_BUCKET_LARD 130 COLLECTIBLE_PONY 131 COLLECTIBLE_BOMB_BAG 132 COLLECTIBLE_LUMP_OF_COAL 133 COLLECTIBLE_GUPPYS_PAW 134 COLLECTIBLE_GUPPYS_TAIL 135 COLLECTIBLE_IV_BAG 136 COLLECTIBLE_BEST_FRIEND 137 COLLECTIBLE_REMOTE_DETONATOR 138 COLLECTIBLE_STIGMATA 139 COLLECTIBLE_MOMS_PURSE 140 COLLECTIBLE_BOBS_CURSE 141 COLLECTIBLE_PAGEANT_BOY 142 COLLECTIBLE_SCAPULAR 143 COLLECTIBLE_SPEED_BALL 144 COLLECTIBLE_BUM_FRIEND 145 COLLECTIBLE_GUPPYS_HEAD 146 COLLECTIBLE_PRAYER_CARD 147 COLLECTIBLE_NOTCHED_AXE 148 COLLECTIBLE_INFESTATION 149 COLLECTIBLE_IPECAC 150 COLLECTIBLE_TOUGH_LOVE 151 COLLECTIBLE_MULLIGAN 152 COLLECTIBLE_TECHNOLOGY_2 153 COLLECTIBLE_MUTANT_SPIDER 154 COLLECTIBLE_CHEMICAL_PEEL 155 COLLECTIBLE_PEEPER 156 COLLECTIBLE_HABIT 157 COLLECTIBLE_BLOODY_LUST 158 COLLECTIBLE_CRYSTAL_BALL 159 COLLECTIBLE_SPIRIT_NIGHT 160 COLLECTIBLE_CRACK_THE_SKY 161 COLLECTIBLE_ANKH 162 COLLECTIBLE_CELTIC_CROSS 163 COLLECTIBLE_GHOST_BABY 164 COLLECTIBLE_CANDLE 165 COLLECTIBLE_CAT_NINE_TAILS 166 COLLECTIBLE_D20 167 COLLECTIBLE_HARLEQUIN_BABY 168 COLLECTIBLE_EPIC_FETUS 169 COLLECTIBLE_POLYPHEMUS 170 COLLECTIBLE_DADDY_LONGLEGS 171 COLLECTIBLE_SPIDER_BUTT 172 COLLECTIBLE_SACRIFICIAL_DAGGER 173 COLLECTIBLE_MITRE 174 COLLECTIBLE_RAINBOW_BABY 175 COLLECTIBLE_DADS_KEY 176 COLLECTIBLE_STEM_CELLS 177 COLLECTIBLE_PORTABLE_SLOT 178 COLLECTIBLE_HOLY_WATER 179 COLLECTIBLE_FATE 180 COLLECTIBLE_BLACK_BEAN 181 COLLECTIBLE_WHITE_PONY 182 COLLECTIBLE_SACRED_HEART 183 COLLECTIBLE_TOOTH_PICKS 184 COLLECTIBLE_HOLY_GRAIL 185 COLLECTIBLE_DEAD_DOVE 186 COLLECTIBLE_BLOOD_RIGHTS 187 COLLECTIBLE_GUPPYS_HAIRBALL 188 COLLECTIBLE_ABEL 189 COLLECTIBLE_SMB_SUPER_FAN 190 COLLECTIBLE_PYRO 191 COLLECTIBLE_3_DOLLAR_BILL 192 COLLECTIBLE_TELEPATHY_BOOK 193 COLLECTIBLE_MEAT 194 COLLECTIBLE_MAGIC_8_BALL 195 COLLECTIBLE_MOMS_COIN_PURSE 196 COLLECTIBLE_SQUEEZY 197 COLLECTIBLE_JESUS_JUICE 198 COLLECTIBLE_BOX 199 COLLECTIBLE_MOMS_KEY 200 COLLECTIBLE_MOMS_EYESHADOW 201 COLLECTIBLE_IRON_BAR 202 COLLECTIBLE_MIDAS_TOUCH 203 COLLECTIBLE_HUMBLEING_BUNDLE 204 COLLECTIBLE_FANNY_PACK 205 COLLECTIBLE_SHARP_PLUG 206 COLLECTIBLE_GUILLOTINE 207 COLLECTIBLE_BALL_OF_BANDAGES 208 COLLECTIBLE_CHAMPION_BELT 209 COLLECTIBLE_BUTT_BOMBS 210 COLLECTIBLE_GNAWED_LEAF 211 COLLECTIBLE_SPIDERBABY 212 COLLECTIBLE_GUPPYS_COLLAR 213 COLLECTIBLE_LOST_CONTACT 214 COLLECTIBLE_ANEMIC 215 COLLECTIBLE_GOAT_HEAD 216 COLLECTIBLE_CEREMONIAL_ROBES 217 COLLECTIBLE_MOMS_WIG 218 COLLECTIBLE_PLACENTA 219 COLLECTIBLE_OLD_BANDAGE 220 COLLECTIBLE_SAD_BOMBS 221 COLLECTIBLE_RUBBER_CEMENT 222 COLLECTIBLE_ANTI_GRAVITY 223 COLLECTIBLE_PYROMANIAC 224 COLLECTIBLE_CRICKETS_BODY 225 COLLECTIBLE_GIMPY 226 COLLECTIBLE_BLACK_LOTUS 227 COLLECTIBLE_PIGGY_BANK 228 COLLECTIBLE_MOMS_PERFUME 229 COLLECTIBLE_MONSTROS_LUNG 230 COLLECTIBLE_ABADDON 231 COLLECTIBLE_BALL_OF_TAR 232 COLLECTIBLE_STOP_WATCH 233 COLLECTIBLE_TINY_PLANET 234 COLLECTIBLE_INFESTATION_2 235 COLLECTIBLE_235 236 COLLECTIBLE_E_COLI 237 COLLECTIBLE_DEATHS_TOUCH 238 COLLECTIBLE_KEY_PIECE_1 239 COLLECTIBLE_KEY_PIECE_2 240 COLLECTIBLE_EXPERIMENTAL_TREATMENT 241 COLLECTIBLE_CONTRACT_FROM_BELOW 242 COLLECTIBLE_INFAMY 243 COLLECTIBLE_TRINITY_SHIELD 244 COLLECTIBLE_TECH_5 245 COLLECTIBLE_20_20 246 COLLECTIBLE_BLUE_MAP 247 COLLECTIBLE_BFFS 248 COLLECTIBLE_HIVE_MIND 249 COLLECTIBLE_THERES_OPTIONS 250 COLLECTIBLE_BOGO_BOMBS 251 COLLECTIBLE_STARTER_DECK 252 COLLECTIBLE_LITTLE_BAGGY 253 COLLECTIBLE_MAGIC_SCAB 254 COLLECTIBLE_BLOOD_CLOT 255 COLLECTIBLE_SCREW 256 COLLECTIBLE_HOT_BOMBS 257 COLLECTIBLE_FIRE_MIND 258 COLLECTIBLE_MISSING_NO 259 COLLECTIBLE_DARK_MATTER 260 COLLECTIBLE_BLACK_CANDLE 261 COLLECTIBLE_PROPTOSIS 262 COLLECTIBLE_MISSING_PAGE_2 263 COLLECTIBLE_263 264 COLLECTIBLE_SMART_FLY 265 COLLECTIBLE_DRY_BABY 266 COLLECTIBLE_JUICY_SACK 267 COLLECTIBLE_ROBO_BABY_2 268 COLLECTIBLE_ROTTEN_BABY 269 COLLECTIBLE_HEADLESS_BABY 270 COLLECTIBLE_LEECH 271 COLLECTIBLE_MYSTERY_SACK 272 COLLECTIBLE_BBF 273 COLLECTIBLE_BOBS_BRAIN 274 COLLECTIBLE_BEST_BUD 275 COLLECTIBLE_LIL_BRIMSTONE 276 COLLECTIBLE_ISAACS_HEART 277 COLLECTIBLE_LIL_HAUNT 278 COLLECTIBLE_DARK_BUM 279 COLLECTIBLE_BIG_FAN 280 COLLECTIBLE_SISSY_LONGLEGS 281 COLLECTIBLE_PUNCHING_BAG 282 COLLECTIBLE_HOW_TO_JUMP 283 COLLECTIBLE_D100 284 COLLECTIBLE_D4 285 COLLECTIBLE_D10 286 COLLECTIBLE_BLANK_CARD 287 COLLECTIBLE_BOOK_OF_SECRETS 288 COLLECTIBLE_BOX_OF_SPIDERS 289 COLLECTIBLE_RED_CANDLE 290 COLLECTIBLE_THE_JAR 291 COLLECTIBLE_FLUSH 292 COLLECTIBLE_SATANIC_BIBLE 293 COLLECTIBLE_HEAD_OF_KRAMPUS 294 COLLECTIBLE_BUTTER_BEAN 295 COLLECTIBLE_MAGIC_FINGERS 296 COLLECTIBLE_CONVERTER 297 COLLECTIBLE_BLUE_BOX 298 COLLECTIBLE_UNICORN_STUMP 299 COLLECTIBLE_TAURUS 300 COLLECTIBLE_ARIES 301 COLLECTIBLE_CANCER 302 COLLECTIBLE_LEO 303 COLLECTIBLE_VIRGO 304 COLLECTIBLE_LIBRA 305 COLLECTIBLE_SCORPIO 306 COLLECTIBLE_SAGITTARIUS 307 COLLECTIBLE_CAPRICORN 308 COLLECTIBLE_AQUARIUS 309 COLLECTIBLE_PISCES 310 COLLECTIBLE_EVES_MASCARA 311 COLLECTIBLE_JUDAS_SHADOW 312 COLLECTIBLE_MAGGYS_BOW 313 COLLECTIBLE_HOLY_MANTLE 314 COLLECTIBLE_THUNDER_THIGHS 315 COLLECTIBLE_STRANGE_ATTRACTOR 316 COLLECTIBLE_CURSED_EYE 317 COLLECTIBLE_MYSTERIOUS_LIQUID 318 COLLECTIBLE_GEMINI 319 COLLECTIBLE_CAINS_OTHER_EYE 320 COLLECTIBLE_BLUEBABYS_ONLY_FRIEND 321 COLLECTIBLE_SAMSONS_CHAINS 322 COLLECTIBLE_MONGO_BABY 323 COLLECTIBLE_ISAACS_TEARS 324 COLLECTIBLE_UNDEFINED 325 COLLECTIBLE_SCISSORS 326 COLLECTIBLE_BREATH_OF_LIFE 327 COLLECTIBLE_POLAROID 328 COLLECTIBLE_NEGATIVE 329 COLLECTIBLE_LUDOVICO_TECHNIQUE 330 COLLECTIBLE_SOY_MILK 331 COLLECTIBLE_GODHEAD 332 COLLECTIBLE_LAZARUS_RAGS 333 COLLECTIBLE_MIND 334 COLLECTIBLE_BODY 335 COLLECTIBLE_SOUL 336 COLLECTIBLE_DEAD_ONION 337 COLLECTIBLE_BROKEN_WATCH 338 COLLECTIBLE_BOOMERANG 339 COLLECTIBLE_SAFETY_PIN 340 COLLECTIBLE_CAFFEINE_PILL 341 COLLECTIBLE_TORN_PHOTO 342 COLLECTIBLE_BLUE_CAP 343 COLLECTIBLE_LATCH_KEY 344 COLLECTIBLE_MATCH_BOOK 345 COLLECTIBLE_SYNTHOIL 346 COLLECTIBLE_SNACK 347 COLLECTIBLE_DIPLOPIA 348 COLLECTIBLE_PLACEBO 349 COLLECTIBLE_WOODEN_NICKEL 350 COLLECTIBLE_TOXIC_SHOCK 351 COLLECTIBLE_MEGA_BEAN 352 COLLECTIBLE_GLASS_CANNON 353 COLLECTIBLE_BOMBER_BOY 354 COLLECTIBLE_CRACK_JACKS 355 COLLECTIBLE_MOMS_PEARLS 356 COLLECTIBLE_CAR_BATTERY 357 COLLECTIBLE_BOX_OF_FRIENDS 358 COLLECTIBLE_THE_WIZ 359 COLLECTIBLE_8_INCH_NAILS 360 COLLECTIBLE_INCUBUS 361 COLLECTIBLE_FATES_REWARD 362 COLLECTIBLE_LIL_CHEST 363 COLLECTIBLE_SWORN_PROTECTOR 364 COLLECTIBLE_FRIEND_ZONE 365 COLLECTIBLE_LOST_FLY 366 COLLECTIBLE_SCATTER_BOMBS 367 COLLECTIBLE_STICKY_BOMBS 368 COLLECTIBLE_EPIPHORA 369 COLLECTIBLE_CONTINUUM 370 COLLECTIBLE_MR_DOLLY 371 COLLECTIBLE_CURSE_OF_THE_TOWER 372 COLLECTIBLE_CHARGED_BABY 373 COLLECTIBLE_DEAD_EYE 374 COLLECTIBLE_HOLY_LIGHT 375 COLLECTIBLE_HOST_HAT 376 COLLECTIBLE_RESTOCK 377 COLLECTIBLE_BURSTING_SACK 378 COLLECTIBLE_NUMBER_TWO 379 COLLECTIBLE_PUPULA_DUPLEX 380 COLLECTIBLE_PAY_TO_PLAY 381 COLLECTIBLE_EDENS_BLESSING 382 COLLECTIBLE_FRIEND_BALL 383 COLLECTIBLE_TEAR_DETONATOR 384 COLLECTIBLE_LIL_GURDY 385 COLLECTIBLE_BUMBO 386 COLLECTIBLE_D12 387 COLLECTIBLE_CENSER 388 COLLECTIBLE_KEY_BUM 389 COLLECTIBLE_RUNE_BAG 390 COLLECTIBLE_SERAPHIM 391 COLLECTIBLE_BETRAYAL 392 COLLECTIBLE_ZODIAC 393 COLLECTIBLE_SERPENTS_KISS 394 COLLECTIBLE_MARKED 395 COLLECTIBLE_TECH_X 396 COLLECTIBLE_VENTRICLE_RAZOR 397 COLLECTIBLE_TRACTOR_BEAM 398 COLLECTIBLE_GODS_FLESH 399 COLLECTIBLE_MAW_OF_VOID 400 COLLECTIBLE_SPEAR_OF_DESTINY 401 COLLECTIBLE_EXPLOSIVO 402 COLLECTIBLE_CHAOS 403 COLLECTIBLE_SPIDER_MOD 404 COLLECTIBLE_FARTING_BABY 405 COLLECTIBLE_GB_BUG 406 COLLECTIBLE_D8 407 COLLECTIBLE_PURITY 408 COLLECTIBLE_ATHAME 409 COLLECTIBLE_EMPTY_VESSEL 410 COLLECTIBLE_EVIL_EYE 411 COLLECTIBLE_LUSTY_BLOOD 412 COLLECTIBLE_CAMBION_CONCEPTION 413 COLLECTIBLE_IMMACULATE_CONCEPTION 414 COLLECTIBLE_MORE_OPTIONS 415 COLLECTIBLE_CROWN_OF_LIGHT 416 COLLECTIBLE_DEEP_POCKETS 417 COLLECTIBLE_SUCCUBUS 418 COLLECTIBLE_FRUIT_CAKE 419 COLLECTIBLE_TELEPORT_2 420 COLLECTIBLE_BLACK_POWDER 421 COLLECTIBLE_KIDNEY_BEAN 422 COLLECTIBLE_GLOWING_HOUR_GLASS 423 COLLECTIBLE_CIRCLE_OF_PROTECTION 424 COLLECTIBLE_SACK_HEAD 425 COLLECTIBLE_NIGHT_LIGHT 426 COLLECTIBLE_OBSESSED_FAN 427 COLLECTIBLE_MINE_CRAFTER 428 COLLECTIBLE_PJS 429 COLLECTIBLE_HEAD_OF_THE_KEEPER 430 COLLECTIBLE_PAPA_FLY 431 COLLECTIBLE_MULTIDIMENSIONAL_BABY 432 COLLECTIBLE_GLITTER_BOMBS 433 COLLECTIBLE_MY_SHADOW 434 COLLECTIBLE_JAR_OF_FLIES 435 COLLECTIBLE_LIL_LOKI 436 COLLECTIBLE_MILK 437 COLLECTIBLE_D7 438 COLLECTIBLE_BINKY 439 COLLECTIBLE_MOMS_BOX 440 COLLECTIBLE_KIDNEY_STONE 441 COLLECTIBLE_MEGA_SATANS_BREATH 442 COLLECTIBLE_DARK_PRINCESS_CROWN 443 COLLECTIBLE_APPLE 444 COLLECTIBLE_LEAD_PENCIL 445 COLLECTIBLE_DOG_TOOTH 446 COLLECTIBLE_DEAD_TOOTH 447 COLLECTIBLE_LINGER_BEAN 448 COLLECTIBLE_SHARD_OF_GLASS 449 COLLECTIBLE_METAL_PLATE 450 COLLECTIBLE_EYE_OF_GREED 451 COLLECTIBLE_TAROT_CLOTH 452 COLLECTIBLE_VARICOSE_VEINS 453 COLLECTIBLE_COMPOUND_FRACTURE 454 COLLECTIBLE_POLYDACTYLY 455 COLLECTIBLE_DADS_LOST_COIN 456 COLLECTIBLE_MOLDY_BREAD 457 COLLECTIBLE_CONE_HEAD 458 COLLECTIBLE_BELLY_BUTTON 459 COLLECTIBLE_SINUS_INFECTION 460 COLLECTIBLE_GLAUCOMA 461 COLLECTIBLE_PARASITOID 462 COLLECTIBLE_EYE_OF_BELIAL 463 COLLECTIBLE_SULFURIC_ACID 464 COLLECTIBLE_GLYPH_OF_BALANCE 465 COLLECTIBLE_ANALOG_STICK 466 COLLECTIBLE_CONTAGION 467 COLLECTIBLE_FINGER 468 COLLECTIBLE_SHADE 469 COLLECTIBLE_DEPRESSION 470 COLLECTIBLE_HUSHY 471 COLLECTIBLE_LIL_MONSTRO 472 COLLECTIBLE_KING_BABY 473 COLLECTIBLE_BIG_CHUBBY 474 COLLECTIBLE_TONSIL 475 COLLECTIBLE_PLAN_C 476 COLLECTIBLE_D1 477 COLLECTIBLE_VOID 478 COLLECTIBLE_PAUSE 479 COLLECTIBLE_SMELTER 480 COLLECTIBLE_COMPOST 481 COLLECTIBLE_DATAMINER 482 COLLECTIBLE_CLICKER 483 COLLECTIBLE_MAMA_MEGA 484 COLLECTIBLE_WAIT_WHAT 485 COLLECTIBLE_CROOKED_PENNY 486 COLLECTIBLE_DULL_RAZOR 487 COLLECTIBLE_POTATO_PEELER 488 COLLECTIBLE_METRONOME 489 COLLECTIBLE_DINF 490 COLLECTIBLE_EDENS_SOUL 491 COLLECTIBLE_ACID_BABY 492 COLLECTIBLE_YO_LISTEN 493 COLLECTIBLE_ADDERLINE 494 COLLECTIBLE_JACOBS_LADDER 495 COLLECTIBLE_GHOST_PEPPER 496 COLLECTIBLE_EUTHANASIA 497 COLLECTIBLE_CAMO_UNDIES 498 COLLECTIBLE_DUALITY 499 COLLECTIBLE_EUCHARIST 500 COLLECTIBLE_SACK_OF_SACKS 501 COLLECTIBLE_GREEDS_GULLET 502 COLLECTIBLE_LARGE_ZIT 503 COLLECTIBLE_LITTLE_HORN 504 COLLECTIBLE_BROWN_NUGGET 505 COLLECTIBLE_POKE_GO 506 COLLECTIBLE_BACKSTABBER 507 COLLECTIBLE_SHARP_STRAW 508 COLLECTIBLE_MOMS_RAZOR 509 COLLECTIBLE_BLOODSHOT_EYE 510 COLLECTIBLE_DELIRIOUS 511 COLLECTIBLE_ANGRY_FLY Booster Pack #1 512 COLLECTIBLE_BLACK_HOLE 513 COLLECTIBLE_BOZO 514 COLLECTIBLE_BROKEN_MODEM 515 COLLECTIBLE_MYSTERY_GIFT 516 COLLECTIBLE_SPRINKLER 517 COLLECTIBLE_FAST_BOMBS 518 COLLECTIBLE_BUDDY_IN_A_BOX 519 COLLECTIBLE_LIL_DELIRIUM 520 COLLECTIBLE_JUMPER_CABLES Booster Pack #2 521 COLLECTIBLE_COUPON 522 COLLECTIBLE_TELEKINESIS 523 COLLECTIBLE_MOVING_BOX 524 COLLECTIBLE_TECHNOLOGY_ZERO 525 COLLECTIBLE_LEPROCY 526 COLLECTIBLE_LIL_HARBINGERS Booster Pack #3 527 COLLECTIBLE_MR_ME 528 COLLECTIBLE_ANGELIC_PRISM 529 COLLECTIBLE_POP 530 COLLECTIBLE_DEATH_LIST Booster Pack #4 531 COLLECTIBLE_HAEMOLACRIA 532 COLLECTIBLE_LACHRYPHAGY 533 COLLECTIBLE_TRISAGION 534 COLLECTIBLE_SCHOOLBAG 535 COLLECTIBLE_BLANKET Booster Pack #5 536 COLLECTIBLE_SACRIFICIAL_ALTAR 537 COLLECTIBLE_LIL_SPEWER 538 COLLECTIBLE_MARBLES 539 COLLECTIBLE_MYSTERY_EGG 540 COLLECTIBLE_FLAT_STONE 541 COLLECTIBLE_MARROW 542 COLLECTIBLE_SLIPPED_RIB 543 COLLECTIBLE_HALLOWED_GROUND 544 COLLECTIBLE_POINTY_RIB 545 COLLECTIBLE_BOOK_OF_THE_DEAD 546 COLLECTIBLE_DADS_RING 547 COLLECTIBLE_DIVORCE_PAPERS 548 COLLECTIBLE_JAW_BONE 549 COLLECTIBLE_BRITTLE_BONES 550 COLLECTIBLE_BROKEN_SHOVEL 551 COLLECTIBLE_BROKEN_SHOVEL_2 552 COLLECTIBLE_MOMS_SHOVEL 553 NUM_COLLECTIBLES","title":"CollectibleType"},{"location":"enums/CollectibleType/#enum-collectibletype","text":"DLC Value Enumerator Comment 0 COLLECTIBLE_NULL 1 COLLECTIBLE_SAD_ONION 2 COLLECTIBLE_INNER_EYE 3 COLLECTIBLE_SPOON_BENDER 4 COLLECTIBLE_MAXS_HEAD 5 COLLECTIBLE_MY_REFLECTION 6 COLLECTIBLE_NUMBER_ONE 7 COLLECTIBLE_BLOOD_MARTYR 8 COLLECTIBLE_BROTHER_BOBBY 9 COLLECTIBLE_SKATOLE 10 COLLECTIBLE_HALO_OF_FLIES 11 COLLECTIBLE_ONE_UP 12 COLLECTIBLE_MAGIC_MUSHROOM 13 COLLECTIBLE_VIRUS 14 COLLECTIBLE_ROID_RAGE 15 COLLECTIBLE_HEART 16 COLLECTIBLE_RAW_LIVER 17 COLLECTIBLE_SKELETON_KEY 18 COLLECTIBLE_DOLLAR 19 COLLECTIBLE_BOOM 20 COLLECTIBLE_TRANSCENDENCE 21 COLLECTIBLE_COMPASS 22 COLLECTIBLE_LUNCH 23 COLLECTIBLE_DINNER 24 COLLECTIBLE_DESSERT 25 COLLECTIBLE_BREAKFAST 26 COLLECTIBLE_ROTTEN_MEAT 27 COLLECTIBLE_WOODEN_SPOON 28 COLLECTIBLE_BELT 29 COLLECTIBLE_MOMS_UNDERWEAR 30 COLLECTIBLE_MOMS_HEELS 31 COLLECTIBLE_MOMS_LIPSTICK 32 COLLECTIBLE_WIRE_COAT_HANGER 33 COLLECTIBLE_BIBLE 34 COLLECTIBLE_BOOK_OF_BELIAL 35 COLLECTIBLE_NECRONOMICON 36 COLLECTIBLE_POOP 37 COLLECTIBLE_MR_BOOM 38 COLLECTIBLE_TAMMYS_HEAD 39 COLLECTIBLE_MOMS_BRA 40 COLLECTIBLE_KAMIKAZE 41 COLLECTIBLE_MOMS_PAD 42 COLLECTIBLE_BOBS_ROTTEN_HEAD 43 COLLECTIBLE_PILLS_HERE 44 COLLECTIBLE_TELEPORT 45 COLLECTIBLE_YUM_HEART 46 COLLECTIBLE_LUCKY_FOOT 47 COLLECTIBLE_DOCTORS_REMOTE 48 COLLECTIBLE_CUPIDS_ARROW 49 COLLECTIBLE_SHOOP_DA_WHOOP 50 COLLECTIBLE_STEVEN 51 COLLECTIBLE_PENTAGRAM 52 COLLECTIBLE_DR_FETUS 53 COLLECTIBLE_MAGNETO 54 COLLECTIBLE_TREASURE_MAP 55 COLLECTIBLE_MOMS_EYE 56 COLLECTIBLE_LEMON_MISHAP 57 COLLECTIBLE_DISTANT_ADMIRATION 58 COLLECTIBLE_BOOK_OF_SHADOWS 59 COLLECTIBLE_059 60 COLLECTIBLE_LADDER 61 COLLECTIBLE_TAROT_CARD 62 COLLECTIBLE_CHARM_VAMPIRE 63 COLLECTIBLE_BATTERY 64 COLLECTIBLE_STEAM_SALE 65 COLLECTIBLE_ANARCHIST_COOKBOOK 66 COLLECTIBLE_HOURGLASS 67 COLLECTIBLE_SISTER_MAGGY 68 COLLECTIBLE_TECHNOLOGY 69 COLLECTIBLE_CHOCOLATE_MILK 70 COLLECTIBLE_GROWTH_HORMONES 71 COLLECTIBLE_MINI_MUSH 72 COLLECTIBLE_ROSARY 73 COLLECTIBLE_CUBE_OF_MEAT 74 COLLECTIBLE_QUARTER 75 COLLECTIBLE_PHD 76 COLLECTIBLE_XRAY_VISION 77 COLLECTIBLE_MY_LITTLE_UNICORN 78 COLLECTIBLE_BOOK_REVELATIONS 79 COLLECTIBLE_MARK 80 COLLECTIBLE_PACT 81 COLLECTIBLE_DEAD_CAT 82 COLLECTIBLE_LORD_OF_THE_PIT 83 COLLECTIBLE_THE_NAIL 84 COLLECTIBLE_WE_NEED_GO_DEEPER 85 COLLECTIBLE_DECK_OF_CARDS 86 COLLECTIBLE_MONSTROS_TOOTH 87 COLLECTIBLE_LOKIS_HORNS 88 COLLECTIBLE_LITTLE_CHUBBY 89 COLLECTIBLE_SPIDER_BITE 90 COLLECTIBLE_SMALL_ROCK 91 COLLECTIBLE_SPELUNKER_HAT 92 COLLECTIBLE_SUPER_BANDAGE 93 COLLECTIBLE_GAMEKID 94 COLLECTIBLE_SACK_OF_PENNIES 95 COLLECTIBLE_ROBO_BABY 96 COLLECTIBLE_LITTLE_CHAD 97 COLLECTIBLE_BOOK_OF_SIN 98 COLLECTIBLE_RELIC 99 COLLECTIBLE_LITTLE_GISH 100 COLLECTIBLE_LITTLE_STEVEN 101 COLLECTIBLE_HALO 102 COLLECTIBLE_MOMS_BOTTLE_PILLS 103 COLLECTIBLE_COMMON_COLD 104 COLLECTIBLE_PARASITE 105 COLLECTIBLE_D6 106 COLLECTIBLE_MR_MEGA 107 COLLECTIBLE_PINKING_SHEARS 108 COLLECTIBLE_WAFER 109 COLLECTIBLE_MONEY_IS_POWER 110 COLLECTIBLE_MOMS_CONTACTS 111 COLLECTIBLE_BEAN 112 COLLECTIBLE_GUARDIAN_ANGEL 113 COLLECTIBLE_DEMON_BABY 114 COLLECTIBLE_MOMS_KNIFE 115 COLLECTIBLE_OUIJA_BOARD 116 COLLECTIBLE_NINE_VOLT 117 COLLECTIBLE_DEAD_BIRD 118 COLLECTIBLE_BRIMSTONE 119 COLLECTIBLE_BLOOD_BAG 120 COLLECTIBLE_ODD_MUSHROOM_RATE 121 COLLECTIBLE_ODD_MUSHROOM_DAMAGE 122 COLLECTIBLE_WHORE_OF_BABYLON 123 COLLECTIBLE_MONSTER_MANUAL 124 COLLECTIBLE_DEAD_SEA_SCROLLS 125 COLLECTIBLE_BOBBY_BOMB 126 COLLECTIBLE_RAZOR_BLADE 127 COLLECTIBLE_FORGET_ME_NOW 128 COLLECTIBLE_FOREVER_ALONE 129 COLLECTIBLE_BUCKET_LARD 130 COLLECTIBLE_PONY 131 COLLECTIBLE_BOMB_BAG 132 COLLECTIBLE_LUMP_OF_COAL 133 COLLECTIBLE_GUPPYS_PAW 134 COLLECTIBLE_GUPPYS_TAIL 135 COLLECTIBLE_IV_BAG 136 COLLECTIBLE_BEST_FRIEND 137 COLLECTIBLE_REMOTE_DETONATOR 138 COLLECTIBLE_STIGMATA 139 COLLECTIBLE_MOMS_PURSE 140 COLLECTIBLE_BOBS_CURSE 141 COLLECTIBLE_PAGEANT_BOY 142 COLLECTIBLE_SCAPULAR 143 COLLECTIBLE_SPEED_BALL 144 COLLECTIBLE_BUM_FRIEND 145 COLLECTIBLE_GUPPYS_HEAD 146 COLLECTIBLE_PRAYER_CARD 147 COLLECTIBLE_NOTCHED_AXE 148 COLLECTIBLE_INFESTATION 149 COLLECTIBLE_IPECAC 150 COLLECTIBLE_TOUGH_LOVE 151 COLLECTIBLE_MULLIGAN 152 COLLECTIBLE_TECHNOLOGY_2 153 COLLECTIBLE_MUTANT_SPIDER 154 COLLECTIBLE_CHEMICAL_PEEL 155 COLLECTIBLE_PEEPER 156 COLLECTIBLE_HABIT 157 COLLECTIBLE_BLOODY_LUST 158 COLLECTIBLE_CRYSTAL_BALL 159 COLLECTIBLE_SPIRIT_NIGHT 160 COLLECTIBLE_CRACK_THE_SKY 161 COLLECTIBLE_ANKH 162 COLLECTIBLE_CELTIC_CROSS 163 COLLECTIBLE_GHOST_BABY 164 COLLECTIBLE_CANDLE 165 COLLECTIBLE_CAT_NINE_TAILS 166 COLLECTIBLE_D20 167 COLLECTIBLE_HARLEQUIN_BABY 168 COLLECTIBLE_EPIC_FETUS 169 COLLECTIBLE_POLYPHEMUS 170 COLLECTIBLE_DADDY_LONGLEGS 171 COLLECTIBLE_SPIDER_BUTT 172 COLLECTIBLE_SACRIFICIAL_DAGGER 173 COLLECTIBLE_MITRE 174 COLLECTIBLE_RAINBOW_BABY 175 COLLECTIBLE_DADS_KEY 176 COLLECTIBLE_STEM_CELLS 177 COLLECTIBLE_PORTABLE_SLOT 178 COLLECTIBLE_HOLY_WATER 179 COLLECTIBLE_FATE 180 COLLECTIBLE_BLACK_BEAN 181 COLLECTIBLE_WHITE_PONY 182 COLLECTIBLE_SACRED_HEART 183 COLLECTIBLE_TOOTH_PICKS 184 COLLECTIBLE_HOLY_GRAIL 185 COLLECTIBLE_DEAD_DOVE 186 COLLECTIBLE_BLOOD_RIGHTS 187 COLLECTIBLE_GUPPYS_HAIRBALL 188 COLLECTIBLE_ABEL 189 COLLECTIBLE_SMB_SUPER_FAN 190 COLLECTIBLE_PYRO 191 COLLECTIBLE_3_DOLLAR_BILL 192 COLLECTIBLE_TELEPATHY_BOOK 193 COLLECTIBLE_MEAT 194 COLLECTIBLE_MAGIC_8_BALL 195 COLLECTIBLE_MOMS_COIN_PURSE 196 COLLECTIBLE_SQUEEZY 197 COLLECTIBLE_JESUS_JUICE 198 COLLECTIBLE_BOX 199 COLLECTIBLE_MOMS_KEY 200 COLLECTIBLE_MOMS_EYESHADOW 201 COLLECTIBLE_IRON_BAR 202 COLLECTIBLE_MIDAS_TOUCH 203 COLLECTIBLE_HUMBLEING_BUNDLE 204 COLLECTIBLE_FANNY_PACK 205 COLLECTIBLE_SHARP_PLUG 206 COLLECTIBLE_GUILLOTINE 207 COLLECTIBLE_BALL_OF_BANDAGES 208 COLLECTIBLE_CHAMPION_BELT 209 COLLECTIBLE_BUTT_BOMBS 210 COLLECTIBLE_GNAWED_LEAF 211 COLLECTIBLE_SPIDERBABY 212 COLLECTIBLE_GUPPYS_COLLAR 213 COLLECTIBLE_LOST_CONTACT 214 COLLECTIBLE_ANEMIC 215 COLLECTIBLE_GOAT_HEAD 216 COLLECTIBLE_CEREMONIAL_ROBES 217 COLLECTIBLE_MOMS_WIG 218 COLLECTIBLE_PLACENTA 219 COLLECTIBLE_OLD_BANDAGE 220 COLLECTIBLE_SAD_BOMBS 221 COLLECTIBLE_RUBBER_CEMENT 222 COLLECTIBLE_ANTI_GRAVITY 223 COLLECTIBLE_PYROMANIAC 224 COLLECTIBLE_CRICKETS_BODY 225 COLLECTIBLE_GIMPY 226 COLLECTIBLE_BLACK_LOTUS 227 COLLECTIBLE_PIGGY_BANK 228 COLLECTIBLE_MOMS_PERFUME 229 COLLECTIBLE_MONSTROS_LUNG 230 COLLECTIBLE_ABADDON 231 COLLECTIBLE_BALL_OF_TAR 232 COLLECTIBLE_STOP_WATCH 233 COLLECTIBLE_TINY_PLANET 234 COLLECTIBLE_INFESTATION_2 235 COLLECTIBLE_235 236 COLLECTIBLE_E_COLI 237 COLLECTIBLE_DEATHS_TOUCH 238 COLLECTIBLE_KEY_PIECE_1 239 COLLECTIBLE_KEY_PIECE_2 240 COLLECTIBLE_EXPERIMENTAL_TREATMENT 241 COLLECTIBLE_CONTRACT_FROM_BELOW 242 COLLECTIBLE_INFAMY 243 COLLECTIBLE_TRINITY_SHIELD 244 COLLECTIBLE_TECH_5 245 COLLECTIBLE_20_20 246 COLLECTIBLE_BLUE_MAP 247 COLLECTIBLE_BFFS 248 COLLECTIBLE_HIVE_MIND 249 COLLECTIBLE_THERES_OPTIONS 250 COLLECTIBLE_BOGO_BOMBS 251 COLLECTIBLE_STARTER_DECK 252 COLLECTIBLE_LITTLE_BAGGY 253 COLLECTIBLE_MAGIC_SCAB 254 COLLECTIBLE_BLOOD_CLOT 255 COLLECTIBLE_SCREW 256 COLLECTIBLE_HOT_BOMBS 257 COLLECTIBLE_FIRE_MIND 258 COLLECTIBLE_MISSING_NO 259 COLLECTIBLE_DARK_MATTER 260 COLLECTIBLE_BLACK_CANDLE 261 COLLECTIBLE_PROPTOSIS 262 COLLECTIBLE_MISSING_PAGE_2 263 COLLECTIBLE_263 264 COLLECTIBLE_SMART_FLY 265 COLLECTIBLE_DRY_BABY 266 COLLECTIBLE_JUICY_SACK 267 COLLECTIBLE_ROBO_BABY_2 268 COLLECTIBLE_ROTTEN_BABY 269 COLLECTIBLE_HEADLESS_BABY 270 COLLECTIBLE_LEECH 271 COLLECTIBLE_MYSTERY_SACK 272 COLLECTIBLE_BBF 273 COLLECTIBLE_BOBS_BRAIN 274 COLLECTIBLE_BEST_BUD 275 COLLECTIBLE_LIL_BRIMSTONE 276 COLLECTIBLE_ISAACS_HEART 277 COLLECTIBLE_LIL_HAUNT 278 COLLECTIBLE_DARK_BUM 279 COLLECTIBLE_BIG_FAN 280 COLLECTIBLE_SISSY_LONGLEGS 281 COLLECTIBLE_PUNCHING_BAG 282 COLLECTIBLE_HOW_TO_JUMP 283 COLLECTIBLE_D100 284 COLLECTIBLE_D4 285 COLLECTIBLE_D10 286 COLLECTIBLE_BLANK_CARD 287 COLLECTIBLE_BOOK_OF_SECRETS 288 COLLECTIBLE_BOX_OF_SPIDERS 289 COLLECTIBLE_RED_CANDLE 290 COLLECTIBLE_THE_JAR 291 COLLECTIBLE_FLUSH 292 COLLECTIBLE_SATANIC_BIBLE 293 COLLECTIBLE_HEAD_OF_KRAMPUS 294 COLLECTIBLE_BUTTER_BEAN 295 COLLECTIBLE_MAGIC_FINGERS 296 COLLECTIBLE_CONVERTER 297 COLLECTIBLE_BLUE_BOX 298 COLLECTIBLE_UNICORN_STUMP 299 COLLECTIBLE_TAURUS 300 COLLECTIBLE_ARIES 301 COLLECTIBLE_CANCER 302 COLLECTIBLE_LEO 303 COLLECTIBLE_VIRGO 304 COLLECTIBLE_LIBRA 305 COLLECTIBLE_SCORPIO 306 COLLECTIBLE_SAGITTARIUS 307 COLLECTIBLE_CAPRICORN 308 COLLECTIBLE_AQUARIUS 309 COLLECTIBLE_PISCES 310 COLLECTIBLE_EVES_MASCARA 311 COLLECTIBLE_JUDAS_SHADOW 312 COLLECTIBLE_MAGGYS_BOW 313 COLLECTIBLE_HOLY_MANTLE 314 COLLECTIBLE_THUNDER_THIGHS 315 COLLECTIBLE_STRANGE_ATTRACTOR 316 COLLECTIBLE_CURSED_EYE 317 COLLECTIBLE_MYSTERIOUS_LIQUID 318 COLLECTIBLE_GEMINI 319 COLLECTIBLE_CAINS_OTHER_EYE 320 COLLECTIBLE_BLUEBABYS_ONLY_FRIEND 321 COLLECTIBLE_SAMSONS_CHAINS 322 COLLECTIBLE_MONGO_BABY 323 COLLECTIBLE_ISAACS_TEARS 324 COLLECTIBLE_UNDEFINED 325 COLLECTIBLE_SCISSORS 326 COLLECTIBLE_BREATH_OF_LIFE 327 COLLECTIBLE_POLAROID 328 COLLECTIBLE_NEGATIVE 329 COLLECTIBLE_LUDOVICO_TECHNIQUE 330 COLLECTIBLE_SOY_MILK 331 COLLECTIBLE_GODHEAD 332 COLLECTIBLE_LAZARUS_RAGS 333 COLLECTIBLE_MIND 334 COLLECTIBLE_BODY 335 COLLECTIBLE_SOUL 336 COLLECTIBLE_DEAD_ONION 337 COLLECTIBLE_BROKEN_WATCH 338 COLLECTIBLE_BOOMERANG 339 COLLECTIBLE_SAFETY_PIN 340 COLLECTIBLE_CAFFEINE_PILL 341 COLLECTIBLE_TORN_PHOTO 342 COLLECTIBLE_BLUE_CAP 343 COLLECTIBLE_LATCH_KEY 344 COLLECTIBLE_MATCH_BOOK 345 COLLECTIBLE_SYNTHOIL 346 COLLECTIBLE_SNACK 347 COLLECTIBLE_DIPLOPIA 348 COLLECTIBLE_PLACEBO 349 COLLECTIBLE_WOODEN_NICKEL 350 COLLECTIBLE_TOXIC_SHOCK 351 COLLECTIBLE_MEGA_BEAN 352 COLLECTIBLE_GLASS_CANNON 353 COLLECTIBLE_BOMBER_BOY 354 COLLECTIBLE_CRACK_JACKS 355 COLLECTIBLE_MOMS_PEARLS 356 COLLECTIBLE_CAR_BATTERY 357 COLLECTIBLE_BOX_OF_FRIENDS 358 COLLECTIBLE_THE_WIZ 359 COLLECTIBLE_8_INCH_NAILS 360 COLLECTIBLE_INCUBUS 361 COLLECTIBLE_FATES_REWARD 362 COLLECTIBLE_LIL_CHEST 363 COLLECTIBLE_SWORN_PROTECTOR 364 COLLECTIBLE_FRIEND_ZONE 365 COLLECTIBLE_LOST_FLY 366 COLLECTIBLE_SCATTER_BOMBS 367 COLLECTIBLE_STICKY_BOMBS 368 COLLECTIBLE_EPIPHORA 369 COLLECTIBLE_CONTINUUM 370 COLLECTIBLE_MR_DOLLY 371 COLLECTIBLE_CURSE_OF_THE_TOWER 372 COLLECTIBLE_CHARGED_BABY 373 COLLECTIBLE_DEAD_EYE 374 COLLECTIBLE_HOLY_LIGHT 375 COLLECTIBLE_HOST_HAT 376 COLLECTIBLE_RESTOCK 377 COLLECTIBLE_BURSTING_SACK 378 COLLECTIBLE_NUMBER_TWO 379 COLLECTIBLE_PUPULA_DUPLEX 380 COLLECTIBLE_PAY_TO_PLAY 381 COLLECTIBLE_EDENS_BLESSING 382 COLLECTIBLE_FRIEND_BALL 383 COLLECTIBLE_TEAR_DETONATOR 384 COLLECTIBLE_LIL_GURDY 385 COLLECTIBLE_BUMBO 386 COLLECTIBLE_D12 387 COLLECTIBLE_CENSER 388 COLLECTIBLE_KEY_BUM 389 COLLECTIBLE_RUNE_BAG 390 COLLECTIBLE_SERAPHIM 391 COLLECTIBLE_BETRAYAL 392 COLLECTIBLE_ZODIAC 393 COLLECTIBLE_SERPENTS_KISS 394 COLLECTIBLE_MARKED 395 COLLECTIBLE_TECH_X 396 COLLECTIBLE_VENTRICLE_RAZOR 397 COLLECTIBLE_TRACTOR_BEAM 398 COLLECTIBLE_GODS_FLESH 399 COLLECTIBLE_MAW_OF_VOID 400 COLLECTIBLE_SPEAR_OF_DESTINY 401 COLLECTIBLE_EXPLOSIVO 402 COLLECTIBLE_CHAOS 403 COLLECTIBLE_SPIDER_MOD 404 COLLECTIBLE_FARTING_BABY 405 COLLECTIBLE_GB_BUG 406 COLLECTIBLE_D8 407 COLLECTIBLE_PURITY 408 COLLECTIBLE_ATHAME 409 COLLECTIBLE_EMPTY_VESSEL 410 COLLECTIBLE_EVIL_EYE 411 COLLECTIBLE_LUSTY_BLOOD 412 COLLECTIBLE_CAMBION_CONCEPTION 413 COLLECTIBLE_IMMACULATE_CONCEPTION 414 COLLECTIBLE_MORE_OPTIONS 415 COLLECTIBLE_CROWN_OF_LIGHT 416 COLLECTIBLE_DEEP_POCKETS 417 COLLECTIBLE_SUCCUBUS 418 COLLECTIBLE_FRUIT_CAKE 419 COLLECTIBLE_TELEPORT_2 420 COLLECTIBLE_BLACK_POWDER 421 COLLECTIBLE_KIDNEY_BEAN 422 COLLECTIBLE_GLOWING_HOUR_GLASS 423 COLLECTIBLE_CIRCLE_OF_PROTECTION 424 COLLECTIBLE_SACK_HEAD 425 COLLECTIBLE_NIGHT_LIGHT 426 COLLECTIBLE_OBSESSED_FAN 427 COLLECTIBLE_MINE_CRAFTER 428 COLLECTIBLE_PJS 429 COLLECTIBLE_HEAD_OF_THE_KEEPER 430 COLLECTIBLE_PAPA_FLY 431 COLLECTIBLE_MULTIDIMENSIONAL_BABY 432 COLLECTIBLE_GLITTER_BOMBS 433 COLLECTIBLE_MY_SHADOW 434 COLLECTIBLE_JAR_OF_FLIES 435 COLLECTIBLE_LIL_LOKI 436 COLLECTIBLE_MILK 437 COLLECTIBLE_D7 438 COLLECTIBLE_BINKY 439 COLLECTIBLE_MOMS_BOX 440 COLLECTIBLE_KIDNEY_STONE 441 COLLECTIBLE_MEGA_SATANS_BREATH 442 COLLECTIBLE_DARK_PRINCESS_CROWN 443 COLLECTIBLE_APPLE 444 COLLECTIBLE_LEAD_PENCIL 445 COLLECTIBLE_DOG_TOOTH 446 COLLECTIBLE_DEAD_TOOTH 447 COLLECTIBLE_LINGER_BEAN 448 COLLECTIBLE_SHARD_OF_GLASS 449 COLLECTIBLE_METAL_PLATE 450 COLLECTIBLE_EYE_OF_GREED 451 COLLECTIBLE_TAROT_CLOTH 452 COLLECTIBLE_VARICOSE_VEINS 453 COLLECTIBLE_COMPOUND_FRACTURE 454 COLLECTIBLE_POLYDACTYLY 455 COLLECTIBLE_DADS_LOST_COIN 456 COLLECTIBLE_MOLDY_BREAD 457 COLLECTIBLE_CONE_HEAD 458 COLLECTIBLE_BELLY_BUTTON 459 COLLECTIBLE_SINUS_INFECTION 460 COLLECTIBLE_GLAUCOMA 461 COLLECTIBLE_PARASITOID 462 COLLECTIBLE_EYE_OF_BELIAL 463 COLLECTIBLE_SULFURIC_ACID 464 COLLECTIBLE_GLYPH_OF_BALANCE 465 COLLECTIBLE_ANALOG_STICK 466 COLLECTIBLE_CONTAGION 467 COLLECTIBLE_FINGER 468 COLLECTIBLE_SHADE 469 COLLECTIBLE_DEPRESSION 470 COLLECTIBLE_HUSHY 471 COLLECTIBLE_LIL_MONSTRO 472 COLLECTIBLE_KING_BABY 473 COLLECTIBLE_BIG_CHUBBY 474 COLLECTIBLE_TONSIL 475 COLLECTIBLE_PLAN_C 476 COLLECTIBLE_D1 477 COLLECTIBLE_VOID 478 COLLECTIBLE_PAUSE 479 COLLECTIBLE_SMELTER 480 COLLECTIBLE_COMPOST 481 COLLECTIBLE_DATAMINER 482 COLLECTIBLE_CLICKER 483 COLLECTIBLE_MAMA_MEGA 484 COLLECTIBLE_WAIT_WHAT 485 COLLECTIBLE_CROOKED_PENNY 486 COLLECTIBLE_DULL_RAZOR 487 COLLECTIBLE_POTATO_PEELER 488 COLLECTIBLE_METRONOME 489 COLLECTIBLE_DINF 490 COLLECTIBLE_EDENS_SOUL 491 COLLECTIBLE_ACID_BABY 492 COLLECTIBLE_YO_LISTEN 493 COLLECTIBLE_ADDERLINE 494 COLLECTIBLE_JACOBS_LADDER 495 COLLECTIBLE_GHOST_PEPPER 496 COLLECTIBLE_EUTHANASIA 497 COLLECTIBLE_CAMO_UNDIES 498 COLLECTIBLE_DUALITY 499 COLLECTIBLE_EUCHARIST 500 COLLECTIBLE_SACK_OF_SACKS 501 COLLECTIBLE_GREEDS_GULLET 502 COLLECTIBLE_LARGE_ZIT 503 COLLECTIBLE_LITTLE_HORN 504 COLLECTIBLE_BROWN_NUGGET 505 COLLECTIBLE_POKE_GO 506 COLLECTIBLE_BACKSTABBER 507 COLLECTIBLE_SHARP_STRAW 508 COLLECTIBLE_MOMS_RAZOR 509 COLLECTIBLE_BLOODSHOT_EYE 510 COLLECTIBLE_DELIRIOUS 511 COLLECTIBLE_ANGRY_FLY Booster Pack #1 512 COLLECTIBLE_BLACK_HOLE 513 COLLECTIBLE_BOZO 514 COLLECTIBLE_BROKEN_MODEM 515 COLLECTIBLE_MYSTERY_GIFT 516 COLLECTIBLE_SPRINKLER 517 COLLECTIBLE_FAST_BOMBS 518 COLLECTIBLE_BUDDY_IN_A_BOX 519 COLLECTIBLE_LIL_DELIRIUM 520 COLLECTIBLE_JUMPER_CABLES Booster Pack #2 521 COLLECTIBLE_COUPON 522 COLLECTIBLE_TELEKINESIS 523 COLLECTIBLE_MOVING_BOX 524 COLLECTIBLE_TECHNOLOGY_ZERO 525 COLLECTIBLE_LEPROCY 526 COLLECTIBLE_LIL_HARBINGERS Booster Pack #3 527 COLLECTIBLE_MR_ME 528 COLLECTIBLE_ANGELIC_PRISM 529 COLLECTIBLE_POP 530 COLLECTIBLE_DEATH_LIST Booster Pack #4 531 COLLECTIBLE_HAEMOLACRIA 532 COLLECTIBLE_LACHRYPHAGY 533 COLLECTIBLE_TRISAGION 534 COLLECTIBLE_SCHOOLBAG 535 COLLECTIBLE_BLANKET Booster Pack #5 536 COLLECTIBLE_SACRIFICIAL_ALTAR 537 COLLECTIBLE_LIL_SPEWER 538 COLLECTIBLE_MARBLES 539 COLLECTIBLE_MYSTERY_EGG 540 COLLECTIBLE_FLAT_STONE 541 COLLECTIBLE_MARROW 542 COLLECTIBLE_SLIPPED_RIB 543 COLLECTIBLE_HALLOWED_GROUND 544 COLLECTIBLE_POINTY_RIB 545 COLLECTIBLE_BOOK_OF_THE_DEAD 546 COLLECTIBLE_DADS_RING 547 COLLECTIBLE_DIVORCE_PAPERS 548 COLLECTIBLE_JAW_BONE 549 COLLECTIBLE_BRITTLE_BONES 550 COLLECTIBLE_BROKEN_SHOVEL 551 COLLECTIBLE_BROKEN_SHOVEL_2 552 COLLECTIBLE_MOMS_SHOVEL 553 NUM_COLLECTIBLES","title":"Enum \"CollectibleType\""},{"location":"enums/DamageFlag/","text":"Enum \"DamageFlag\" \u2693\ufe0e DLC Value Enumerator Comment 1 DAMAGE_NOKILL Damage can not kill the receiver 1<<1 DAMAGE_FIRE Source is some sort of fire (ie. fireplace) 1<<2 DAMAGE_EXPLOSION Damage comes from an explosion 1<<3 DAMAGE_LASER Damage comes from laser 1<<4 DAMAGE_ACID Damage comes from acid, e.g. blood acid 1<<5 DAMAGE_RED_HEARTS Damage affects only red hearts if > 1 (ex: razor) 1<<6 DAMAGE_COUNTDOWN Damage from unicorn horn, the nail, game kid that has cooldown 1<<7 DAMAGE_SPIKES Damage from spikes 1<<8 DAMAGE_CLONES Damage is done by clones when they took damage, avoid infinite loops 1<<9 DAMAGE_POOP Damage from red poop 1<<10 DAMAGE_DEVIL 1<<11 DAMAGE_ISSAC_HEART Indicates the damage has been redirected from Isaac's Heart familiar 1<<12 DAMAGE_TNT Damage comes from a TNT barrel 1<<13 DAMAGE_INVINCIBLE Damages even if invincible (currently only for player). Used on IV Bag. 1<<14 DAMAGE_SPAWN_FLY Creates a fly when damage is applied 1<<15 DAMAGE_POISON_BURN Damage comes from POISON/BURN flags 1<<16 DAMAGE_CURSED_DOOR Damage comes from a cursed door 1<<17 DAMAGE_TIMER Damage comes from the passage of time (used for player damage by time limited special seeds) 1<<18 DAMAGE_IV_BAG Damage from using the IV Bag 1<<19 DAMAGE_PITFALL Damage comes from pitfalls (such as ones spawned by Little Horn) 1<<20 DAMAGE_CHEST Damage comes from spiked chest 1<<21 DAMAGE_FAKE Fake damage that should trigger player's damage effects. 1<<22 DAMAGE_BOOGER Damage from booger tear","title":"DamageFlag"},{"location":"enums/DamageFlag/#enum-damageflag","text":"DLC Value Enumerator Comment 1 DAMAGE_NOKILL Damage can not kill the receiver 1<<1 DAMAGE_FIRE Source is some sort of fire (ie. fireplace) 1<<2 DAMAGE_EXPLOSION Damage comes from an explosion 1<<3 DAMAGE_LASER Damage comes from laser 1<<4 DAMAGE_ACID Damage comes from acid, e.g. blood acid 1<<5 DAMAGE_RED_HEARTS Damage affects only red hearts if > 1 (ex: razor) 1<<6 DAMAGE_COUNTDOWN Damage from unicorn horn, the nail, game kid that has cooldown 1<<7 DAMAGE_SPIKES Damage from spikes 1<<8 DAMAGE_CLONES Damage is done by clones when they took damage, avoid infinite loops 1<<9 DAMAGE_POOP Damage from red poop 1<<10 DAMAGE_DEVIL 1<<11 DAMAGE_ISSAC_HEART Indicates the damage has been redirected from Isaac's Heart familiar 1<<12 DAMAGE_TNT Damage comes from a TNT barrel 1<<13 DAMAGE_INVINCIBLE Damages even if invincible (currently only for player). Used on IV Bag. 1<<14 DAMAGE_SPAWN_FLY Creates a fly when damage is applied 1<<15 DAMAGE_POISON_BURN Damage comes from POISON/BURN flags 1<<16 DAMAGE_CURSED_DOOR Damage comes from a cursed door 1<<17 DAMAGE_TIMER Damage comes from the passage of time (used for player damage by time limited special seeds) 1<<18 DAMAGE_IV_BAG Damage from using the IV Bag 1<<19 DAMAGE_PITFALL Damage comes from pitfalls (such as ones spawned by Little Horn) 1<<20 DAMAGE_CHEST Damage comes from spiked chest 1<<21 DAMAGE_FAKE Fake damage that should trigger player's damage effects. 1<<22 DAMAGE_BOOGER Damage from booger tear","title":"Enum \"DamageFlag\""},{"location":"enums/Difficulty/","text":"Enum \"Difficulty\" \u2693\ufe0e DLC Value Enumerator Comment 0 DIFFICULTY_NORMAL 1 DIFFICULTY_HARD 2 DIFFICULTY_GREED 3 DIFFICULTY_GREEDIER","title":"Difficulty"},{"location":"enums/Difficulty/#enum-difficulty","text":"DLC Value Enumerator Comment 0 DIFFICULTY_NORMAL 1 DIFFICULTY_HARD 2 DIFFICULTY_GREED 3 DIFFICULTY_GREEDIER","title":"Enum \"Difficulty\""},{"location":"enums/Direction/","text":"Enum \"Direction\" \u2693\ufe0e DLC Value Enumerator Comment -1 NO_DIRECTION 0 LEFT 1 UP 2 RIGHT 3 DOWN","title":"Direction"},{"location":"enums/Direction/#enum-direction","text":"DLC Value Enumerator Comment -1 NO_DIRECTION 0 LEFT 1 UP 2 RIGHT 3 DOWN","title":"Enum \"Direction\""},{"location":"enums/DoorSlot/","text":"Enum \"DoorSlot\" \u2693\ufe0e DLC Value Enumerator Comment -1 NO_DOOR_SLOT 0 LEFT0 1 UP0 2 RIGHT0 3 DOWN0 4 LEFT1 5 UP1 6 RIGHT1 7 DOWN1 8 NUM_DOOR_SLOTS","title":"DoorSlot"},{"location":"enums/DoorSlot/#enum-doorslot","text":"DLC Value Enumerator Comment -1 NO_DOOR_SLOT 0 LEFT0 1 UP0 2 RIGHT0 3 DOWN0 4 LEFT1 5 UP1 6 RIGHT1 7 DOWN1 8 NUM_DOOR_SLOTS","title":"Enum \"DoorSlot\""},{"location":"enums/DoorState/","text":"Enum \"DoorState\" \u2693\ufe0e DLC Value Enumerator Comment 0 STATE_INIT 1 STATE_CLOSED 2 STATE_OPEN 3 STATE_ONE_CHAIN 4 STATE_HALF_CRACKED","title":"DoorState"},{"location":"enums/DoorState/#enum-doorstate","text":"DLC Value Enumerator Comment 0 STATE_INIT 1 STATE_CLOSED 2 STATE_OPEN 3 STATE_ONE_CHAIN 4 STATE_HALF_CRACKED","title":"Enum \"DoorState\""},{"location":"enums/DoorVariant/","text":"Enum \"DoorVariant\" \u2693\ufe0e DLC Value Enumerator Comment 0 DOOR_UNSPECIFIED 1 DOOR_LOCKED 2 DOOR_LOCKED_DOUBLE 3 DOOR_LOCKED_CRACKED 4 DOOR_LOCKED_BARRED 5 DOOR_LOCKED_KEYFAMILIAR 6 DOOR_LOCKED_GREED 7 DOOR_HIDDEN 8 DOOR_UNLOCKED","title":"DoorVariant"},{"location":"enums/DoorVariant/#enum-doorvariant","text":"DLC Value Enumerator Comment 0 DOOR_UNSPECIFIED 1 DOOR_LOCKED 2 DOOR_LOCKED_DOUBLE 3 DOOR_LOCKED_CRACKED 4 DOOR_LOCKED_BARRED 5 DOOR_LOCKED_KEYFAMILIAR 6 DOOR_LOCKED_GREED 7 DOOR_HIDDEN 8 DOOR_UNLOCKED","title":"Enum \"DoorVariant\""},{"location":"enums/EffectVariant/","text":"Enum \"EffectVariant\" \u2693\ufe0e DLC Value Enumerator Comment 0 EFFECT_NULL 1 BOMB_EXPLOSION 2 BLOOD_EXPLOSION 3 FLY_EXPLOSION 4 ROCK_PARTICLE 5 BLOOD_PARTICLE 6 DEVIL 7 BLOOD_SPLAT 8 LADDER 9 ANGEL 10 BLUE_FLAME 11 BULLET_POOF 12 TEAR_POOF_A 13 TEAR_POOF_B 14 CROSS_POOF 15 POOF01 16 POOF02 17 POOF04 18 BOMB_CRATER 19 CRACK_THE_SKY 20 SCYTHE_BREAK 21 TINY_BUG 22 CREEP_RED 23 CREEP_GREEN 24 CREEP_YELLOW 25 CREEP_WHITE 26 CREEP_BLACK 27 WOOD_PARTICLE 28 MONSTROS_TOOTH 29 MOM_FOOT_STOMP 30 TARGET 31 ROCKET 32 PLAYER_CREEP_LEMON_MISHAP 33 TINY_FLY 34 FART 35 TOOTH_PARTICLE 36 XRAY_WALL 37 PLAYER_CREEP_HOLYWATER 38 SPIDER_EXPLOSION 39 HEAVEN_LIGHT_DOOR 40 STARFLASH 41 WATER_DROPLET 42 BLOOD_GUSH 43 POOP_EXPLOSION 44 PLAYER_CREEP_WHITE 45 PLAYER_CREEP_BLACK 46 PLAYER_CREEP_RED 47 TRINITY_SHIELD 48 BATTERY 49 HEART 50 LASER_IMPACT 51 HOT_BOMB_FIRE 52 RED_CANDLE_FLAME 53 PLAYER_CREEP_GREEN 54 PLAYER_CREEP_HOLYWATER_TRAIL 55 SPIKE 56 CREEP_BROWN Bullet leaves a brown creep 57 PULLING_EFFECT 58 POOP_PARTICLE 59 DUST_CLOUD 60 BOOMERANG come back 61 SHOCKWAVE 62 ROCK_EXPLOSION 63 WORM 64 BEETLE 65 WISP 66 EMBER_PARTICLE 67 SHOCKWAVE_DIRECTIONAL 68 WALL_BUG 69 BUTTERFLY 70 BLOOD_DROP 71 BRIMSTONE_SWIRL 72 CRACKWAVE 73 SHOCKWAVE_RANDOM 74 ISAACS_CARPET 75 BAR_PARTICLE 76 DICE_FLOOR 77 LARGE_BLOOD_EXPLOSION 78 PLAYER_CREEP_LEMON_PARTY 79 TEAR_POOF_SMALL 80 TEAR_POOF_VERYSMALL 81 FRIEND_BALL 82 WOMB_TELEPORT 83 SPEAR_OF_DESTINY 84 EVIL_EYE 85 DIAMOND_PARTICLE 86 NAIL_PARTICLE 87 FALLING_EMBER 88 DARK_BALL_SMOKE_PARTICLE 89 ULTRA_GREED_FOOTPRINT 90 PLAYER_CREEP_PUDDLE_MILK 91 MOMS_HAND 92 PLAYER_CREEP_BLACKPOWDER 93 PENTAGRAM_BLACKPOWDER 94 CREEP_SLIPPERY_BROWN 95 GOLD_PARTICLE 96 HUSH_LASER 97 IMPACT 98 COIN_PARTICLE 99 WATER_SPLASH 100 HUSH_ASHES 101 HUSH_LASER_UP 102 BULLET_POOF_HUSH 103 ULTRA_GREED_BLING 104 FIREWORKS 105 BROWN_CLOUD 106 FART_RING 107 BLACK_HOLE 108 MR_ME 109 DEATH_SKULL 110 ENEMY_BRIMSTONE_SWIRL 111 HAEMO_TRAIL 112 HALLOWED_GROUND 113 BRIMSTONE_BALL 114 FORGOTTEN_CHAIN 115 BROKEN_SHOVEL_SHADOW 116 DIRT_PATCH 117 FORGOTTEN_SOUL","title":"EffectVariant"},{"location":"enums/EffectVariant/#enum-effectvariant","text":"DLC Value Enumerator Comment 0 EFFECT_NULL 1 BOMB_EXPLOSION 2 BLOOD_EXPLOSION 3 FLY_EXPLOSION 4 ROCK_PARTICLE 5 BLOOD_PARTICLE 6 DEVIL 7 BLOOD_SPLAT 8 LADDER 9 ANGEL 10 BLUE_FLAME 11 BULLET_POOF 12 TEAR_POOF_A 13 TEAR_POOF_B 14 CROSS_POOF 15 POOF01 16 POOF02 17 POOF04 18 BOMB_CRATER 19 CRACK_THE_SKY 20 SCYTHE_BREAK 21 TINY_BUG 22 CREEP_RED 23 CREEP_GREEN 24 CREEP_YELLOW 25 CREEP_WHITE 26 CREEP_BLACK 27 WOOD_PARTICLE 28 MONSTROS_TOOTH 29 MOM_FOOT_STOMP 30 TARGET 31 ROCKET 32 PLAYER_CREEP_LEMON_MISHAP 33 TINY_FLY 34 FART 35 TOOTH_PARTICLE 36 XRAY_WALL 37 PLAYER_CREEP_HOLYWATER 38 SPIDER_EXPLOSION 39 HEAVEN_LIGHT_DOOR 40 STARFLASH 41 WATER_DROPLET 42 BLOOD_GUSH 43 POOP_EXPLOSION 44 PLAYER_CREEP_WHITE 45 PLAYER_CREEP_BLACK 46 PLAYER_CREEP_RED 47 TRINITY_SHIELD 48 BATTERY 49 HEART 50 LASER_IMPACT 51 HOT_BOMB_FIRE 52 RED_CANDLE_FLAME 53 PLAYER_CREEP_GREEN 54 PLAYER_CREEP_HOLYWATER_TRAIL 55 SPIKE 56 CREEP_BROWN Bullet leaves a brown creep 57 PULLING_EFFECT 58 POOP_PARTICLE 59 DUST_CLOUD 60 BOOMERANG come back 61 SHOCKWAVE 62 ROCK_EXPLOSION 63 WORM 64 BEETLE 65 WISP 66 EMBER_PARTICLE 67 SHOCKWAVE_DIRECTIONAL 68 WALL_BUG 69 BUTTERFLY 70 BLOOD_DROP 71 BRIMSTONE_SWIRL 72 CRACKWAVE 73 SHOCKWAVE_RANDOM 74 ISAACS_CARPET 75 BAR_PARTICLE 76 DICE_FLOOR 77 LARGE_BLOOD_EXPLOSION 78 PLAYER_CREEP_LEMON_PARTY 79 TEAR_POOF_SMALL 80 TEAR_POOF_VERYSMALL 81 FRIEND_BALL 82 WOMB_TELEPORT 83 SPEAR_OF_DESTINY 84 EVIL_EYE 85 DIAMOND_PARTICLE 86 NAIL_PARTICLE 87 FALLING_EMBER 88 DARK_BALL_SMOKE_PARTICLE 89 ULTRA_GREED_FOOTPRINT 90 PLAYER_CREEP_PUDDLE_MILK 91 MOMS_HAND 92 PLAYER_CREEP_BLACKPOWDER 93 PENTAGRAM_BLACKPOWDER 94 CREEP_SLIPPERY_BROWN 95 GOLD_PARTICLE 96 HUSH_LASER 97 IMPACT 98 COIN_PARTICLE 99 WATER_SPLASH 100 HUSH_ASHES 101 HUSH_LASER_UP 102 BULLET_POOF_HUSH 103 ULTRA_GREED_BLING 104 FIREWORKS 105 BROWN_CLOUD 106 FART_RING 107 BLACK_HOLE 108 MR_ME 109 DEATH_SKULL 110 ENEMY_BRIMSTONE_SWIRL 111 HAEMO_TRAIL 112 HALLOWED_GROUND 113 BRIMSTONE_BALL 114 FORGOTTEN_CHAIN 115 BROKEN_SHOVEL_SHADOW 116 DIRT_PATCH 117 FORGOTTEN_SOUL","title":"Enum \"EffectVariant\""},{"location":"enums/EntityCollisionClass/","text":"Enum \"EntityCollisionClass\" \u2693\ufe0e DLC Value Enumerator Comment 0 ENTCOLL_NONE no collision with other entities 1 ENTCOLL_PLAYERONLY collide with player only 2 ENTCOLL_PLAYEROBJECTS collide with player, tears, familiars, .. 3 ENTCOLL_ENEMIES collide with enemies 4 ENTCOLL_ALL collide with everything","title":"EntityCollisionClass"},{"location":"enums/EntityCollisionClass/#enum-entitycollisionclass","text":"DLC Value Enumerator Comment 0 ENTCOLL_NONE no collision with other entities 1 ENTCOLL_PLAYERONLY collide with player only 2 ENTCOLL_PLAYEROBJECTS collide with player, tears, familiars, .. 3 ENTCOLL_ENEMIES collide with enemies 4 ENTCOLL_ALL collide with everything","title":"Enum \"EntityCollisionClass\""},{"location":"enums/EntityFlag/","text":"Enum \"EntityFlag\" \u2693\ufe0e DLC Value Enumerator Comment 1 FLAG_NO_STATUS_EFFECTS prevent freeze/poison/slow/charm/confusion/fear/burn 1<<1 FLAG_NO_INTERPOLATE do not interpolate position 1<<2 FLAG_APPEAR play appear animation after Init 1<<3 FLAG_RENDER_FLOOR will be rendered to floor texture 1<<4 FLAG_NO_TARGET will not be a target of NPCs or familiars 1<<5 FLAG_FREEZE freezing effect 1<<6 FLAG_POISON poison effect 1<<7 FLAG_SLOW slowing (velocity) 1<<8 FLAG_CHARM Charmed 1<<9 FLAG_CONFUSION Confused 1<<10 FLAG_MIDAS_FREEZE Midas frozen 1<<11 FLAG_FEAR Fleeing in Fear (like Mom's Pad) 1<<12 FLAG_BURN Caused by Fire Mind tears, works like poison except with Red color effect. 1<<13 FLAG_RENDER_WALL will be rendered to wall texture 1<<14 FLAG_INTERPOLATION_UPDATE entity is updating at 60 fps, and this is an odd frame 1<<15 FLAG_APPLY_GRAVITY In sidescrolling room, this indicates that we're in a gravity zone. 1<<16 FLAG_NO_BLOOD_SPLASH 1<<17 FLAG_NO_REMOVE_ON_TEX_RENDER for FLAG_RENDER_FLOOR and FLAG_RENDER_WALL 1<<18 FLAG_NO_DEATH_TRIGGER 1<<19 FLAG_NO_SPIKE_DAMAGE 1<<20 FLAG_BOSSDEATH_TRIGGERED 1<<21 FLAG_DONT_OVERWRITE Used in entityfactory to not remove this entity if there is no space left for new entity 1<<22 FLAG_SPAWN_STICKY_SPIDERS Used by Sticky bombs to generate spiders on death 1<<23 FLAG_SPAWN_BLACK_HP Used by black hp drop tear flag to drop a black hp on enemy death 1<<24 FLAG_SHRINK God's flesh effect 1<<25 FLAG_NO_FLASH_ON_DAMAGE Entity will not flash red when damaged 1<<26 FLAG_NO_KNOCKBACK Bombs and farts have no knockback effects 1<<27 FLAG_SLIPPERY_PHYSICS Standing on a slippery surface 1<<28 FLAG_ADD_JAR_FLY Adds a fly to the jar when killed 1<<29 FLAG_FRIENDLY Charmed and m_CharmCountdown<0 1<<30 FLAG_NO_PHYSICS_KNOCKBACK No knockback from general collisions 1<<31 FLAG_DONT_COUNT_BOSS_HP Do not count boss hp 1<<32 FLAG_NO_SPRITE_UPDATE Do not update sprite animation 1<<33 FLAG_CONTAGIOUS Used for Contagious item (if the enemy is infected) 1<<34 FLAG_BLEED_OUT Used for Mom's Razor 1<<35 FLAG_HIDE_HP_BAR Added for Ultra Greed so his HP can be hidden after he \"dies\" since his entity sticks around 1<<36 FLAG_NO_DAMAGE_BLINK Player was given a short period of invulnerability by something other than damage, don't blink 1<<37 FLAG_PERSISTENT Entity persists between rooms","title":"EntityFlag"},{"location":"enums/EntityFlag/#enum-entityflag","text":"DLC Value Enumerator Comment 1 FLAG_NO_STATUS_EFFECTS prevent freeze/poison/slow/charm/confusion/fear/burn 1<<1 FLAG_NO_INTERPOLATE do not interpolate position 1<<2 FLAG_APPEAR play appear animation after Init 1<<3 FLAG_RENDER_FLOOR will be rendered to floor texture 1<<4 FLAG_NO_TARGET will not be a target of NPCs or familiars 1<<5 FLAG_FREEZE freezing effect 1<<6 FLAG_POISON poison effect 1<<7 FLAG_SLOW slowing (velocity) 1<<8 FLAG_CHARM Charmed 1<<9 FLAG_CONFUSION Confused 1<<10 FLAG_MIDAS_FREEZE Midas frozen 1<<11 FLAG_FEAR Fleeing in Fear (like Mom's Pad) 1<<12 FLAG_BURN Caused by Fire Mind tears, works like poison except with Red color effect. 1<<13 FLAG_RENDER_WALL will be rendered to wall texture 1<<14 FLAG_INTERPOLATION_UPDATE entity is updating at 60 fps, and this is an odd frame 1<<15 FLAG_APPLY_GRAVITY In sidescrolling room, this indicates that we're in a gravity zone. 1<<16 FLAG_NO_BLOOD_SPLASH 1<<17 FLAG_NO_REMOVE_ON_TEX_RENDER for FLAG_RENDER_FLOOR and FLAG_RENDER_WALL 1<<18 FLAG_NO_DEATH_TRIGGER 1<<19 FLAG_NO_SPIKE_DAMAGE 1<<20 FLAG_BOSSDEATH_TRIGGERED 1<<21 FLAG_DONT_OVERWRITE Used in entityfactory to not remove this entity if there is no space left for new entity 1<<22 FLAG_SPAWN_STICKY_SPIDERS Used by Sticky bombs to generate spiders on death 1<<23 FLAG_SPAWN_BLACK_HP Used by black hp drop tear flag to drop a black hp on enemy death 1<<24 FLAG_SHRINK God's flesh effect 1<<25 FLAG_NO_FLASH_ON_DAMAGE Entity will not flash red when damaged 1<<26 FLAG_NO_KNOCKBACK Bombs and farts have no knockback effects 1<<27 FLAG_SLIPPERY_PHYSICS Standing on a slippery surface 1<<28 FLAG_ADD_JAR_FLY Adds a fly to the jar when killed 1<<29 FLAG_FRIENDLY Charmed and m_CharmCountdown<0 1<<30 FLAG_NO_PHYSICS_KNOCKBACK No knockback from general collisions 1<<31 FLAG_DONT_COUNT_BOSS_HP Do not count boss hp 1<<32 FLAG_NO_SPRITE_UPDATE Do not update sprite animation 1<<33 FLAG_CONTAGIOUS Used for Contagious item (if the enemy is infected) 1<<34 FLAG_BLEED_OUT Used for Mom's Razor 1<<35 FLAG_HIDE_HP_BAR Added for Ultra Greed so his HP can be hidden after he \"dies\" since his entity sticks around 1<<36 FLAG_NO_DAMAGE_BLINK Player was given a short period of invulnerability by something other than damage, don't blink 1<<37 FLAG_PERSISTENT Entity persists between rooms","title":"Enum \"EntityFlag\""},{"location":"enums/EntityGridCollisionClass/","text":"Enum \"EntityGridCollisionClass\" \u2693\ufe0e DLC Value Enumerator Comment 0 GRIDCOLL_NONE 1 GRIDCOLL_WALLS_X only collide with vertical walls 2 GRIDCOLL_WALLS_Y only collide with horizontal walls 3 GRIDCOLL_WALLS only collide with walls 4 GRIDCOLL_BULLET detect collision with solids (no pits), don't correct position 5 GRIDCOLL_GROUND collide with all grid entities (rocks, pits, ..), correct position 6 GRIDCOLL_NOPITS collide with all grid entities except pits and correct position","title":"EntityGridCollisionClass"},{"location":"enums/EntityGridCollisionClass/#enum-entitygridcollisionclass","text":"DLC Value Enumerator Comment 0 GRIDCOLL_NONE 1 GRIDCOLL_WALLS_X only collide with vertical walls 2 GRIDCOLL_WALLS_Y only collide with horizontal walls 3 GRIDCOLL_WALLS only collide with walls 4 GRIDCOLL_BULLET detect collision with solids (no pits), don't correct position 5 GRIDCOLL_GROUND collide with all grid entities (rocks, pits, ..), correct position 6 GRIDCOLL_NOPITS collide with all grid entities except pits and correct position","title":"Enum \"EntityGridCollisionClass\""},{"location":"enums/EntityPartition/","text":"Enum \"EntityPartition\" \u2693\ufe0e DLC Value Enumerator Comment 1 FAMILIAR 1<<1 BULLET 1<<2 TEAR 1<<3 ENEMY 1<<4 PICKUP 1<<5 PLAYER 1<<6 EFFECT","title":"EntityPartition"},{"location":"enums/EntityPartition/#enum-entitypartition","text":"DLC Value Enumerator Comment 1 FAMILIAR 1<<1 BULLET 1<<2 TEAR 1<<3 ENEMY 1<<4 PICKUP 1<<5 PLAYER 1<<6 EFFECT","title":"Enum \"EntityPartition\""},{"location":"enums/EntityType/","text":"Enum \"EntityType\" \u2693\ufe0e DLC Value Enumerator Comment 0 ENTITY_NULL 1 ENTITY_PLAYER 1 player 2 ENTITY_TEAR 2 tear projectile 3 ENTITY_FAMILIAR 3 familiar 4 ENTITY_BOMBDROP 4 bomb drop 5 ENTITY_PICKUP 5 pickup item 6 ENTITY_SLOT 6 slot machine 7 ENTITY_LASER 7 laser beam 8 ENTITY_KNIFE 8 mom's knife 9 ENTITY_PROJECTILE 9 blood projectile 10 ENTITY_GAPER 10 enemy: Gaper 11 ENTITY_GUSHER 11 enemy: Gusher 12 ENTITY_HORF 12 enemy: Horf 13 ENTITY_FLY 13 enemy: Fly 14 ENTITY_POOTER 14 enemy: Pooter 15 ENTITY_CLOTTY 15 enemy: Clotty 16 ENTITY_MULLIGAN 16 enemy: Mulligan 17 ENTITY_SHOPKEEPER 18 ENTITY_ATTACKFLY 18 enemy: Attack Fly 19 ENTITY_LARRYJR 19 boss: Larry Jr./Hollow 20 ENTITY_MONSTRO 20 boss: Monstro 21 ENTITY_MAGGOT 22 ENTITY_HIVE 23 ENTITY_CHARGER 24 ENTITY_GLOBIN 25 ENTITY_BOOMFLY 26 ENTITY_MAW 27 ENTITY_HOST 28 ENTITY_CHUB 29 ENTITY_HOPPER 29 enemy: Hopper 30 ENTITY_BOIL 30 enemy: Boil, variants: 1 - Gut, 2 - Sack 31 ENTITY_SPITY 32 ENTITY_BRAIN 33 ENTITY_FIREPLACE 34 ENTITY_LEAPER 35 ENTITY_MRMAW 36 ENTITY_GURDY 38 ENTITY_BABY 39 ENTITY_VIS 40 ENTITY_GUTS 41 ENTITY_KNIGHT 42 ENTITY_STONEHEAD 43 ENTITY_MONSTRO2 44 ENTITY_POKY 45 ENTITY_MOM 46 ENTITY_SLOTH 46 miniboss: Sloth 47 ENTITY_LUST 47 miniboss: Lust 48 ENTITY_WRATH 48 miniboss: Wrath 49 ENTITY_GLUTTONY 49 miniboss: Gluttony 50 ENTITY_GREED 50 miniboss: Greed 51 ENTITY_ENVY 51 miniboss: Envy 52 ENTITY_PRIDE 52 miniboss: Pride 53 ENTITY_DOPLE 54 ENTITY_FLAMINGHOPPER 54 enemy: Flaming Hopper 55 ENTITY_LEECH 56 ENTITY_LUMP 57 ENTITY_MEMBRAIN 57 enemy: Membrain and Mama Guts 58 ENTITY_PARA_BITE 59 ENTITY_FRED 60 ENTITY_EYE 61 ENTITY_SUCKER 61 enemy: Sucker 62 ENTITY_PIN 62 boss: Pin 63 ENTITY_FAMINE 64 ENTITY_PESTILENCE 65 ENTITY_WAR variant 1: Conquest 66 ENTITY_DEATH 67 ENTITY_DUKE 67 boss: Duke of Flies/Husk 68 ENTITY_PEEP 69 ENTITY_LOKI 71 ENTITY_FISTULA_BIG 72 ENTITY_FISTULA_MEDIUM 73 ENTITY_FISTULA_SMALL 74 ENTITY_BLASTOCYST_BIG 74 boss: Blastocyst 75 ENTITY_BLASTOCYST_MEDIUM 76 ENTITY_BLASTOCYST_SMALL 77 ENTITY_EMBRYO 78 ENTITY_MOMS_HEART 79 ENTITY_GEMINI 79 boss: Gemini 80 ENTITY_MOTER 80 enemy: Moter 81 ENTITY_FALLEN variant 1: Krampus 82 ENTITY_HEADLESS_HORSEMAN Headless Horseman 83 ENTITY_HORSEMAN_HEAD Head for Headless Horseman 84 ENTITY_SATAN 85 ENTITY_SPIDER 85 enemy: Spider 86 ENTITY_KEEPER 87 ENTITY_GURGLE 88 ENTITY_WALKINGBOIL ai for WalkingBoil, WalkingGut and WalkingSack 89 ENTITY_BUTTLICKER 90 ENTITY_HANGER 90 enemy: Hanger 91 ENTITY_SWARMER 92 ENTITY_HEART 93 ENTITY_MASK 94 ENTITY_BIGSPIDER 96 ENTITY_ETERNALFLY 96 enemy: Eternal Fly 97 ENTITY_MASK_OF_INFAMY 98 ENTITY_HEART_OF_INFAMY 99 ENTITY_GURDY_JR 99 enemy: Gurdy Jr. 100 ENTITY_WIDOW 101 ENTITY_DADDYLONGLEGS 102 ENTITY_ISAAC 201 ENTITY_STONE_EYE Rebirth enemies 202 ENTITY_CONSTANT_STONE_SHOOTER 203 ENTITY_BRIMSTONE_HEAD 204 ENTITY_MOBILE_HOST 205 ENTITY_NEST 206 ENTITY_BABY_LONG_LEGS 207 ENTITY_CRAZY_LONG_LEGS 208 ENTITY_FATTY 209 ENTITY_FAT_SACK 210 ENTITY_BLUBBER 211 ENTITY_HALF_SACK 212 ENTITY_DEATHS_HEAD 213 ENTITY_MOMS_HAND 214 ENTITY_FLY_L2 215 ENTITY_SPIDER_L2 216 ENTITY_SWINGER 217 ENTITY_DIP 218 ENTITY_WALL_HUGGER 219 ENTITY_WIZOOB 220 ENTITY_SQUIRT 221 ENTITY_COD_WORM 222 ENTITY_RING_OF_FLIES 223 ENTITY_DINGA 224 ENTITY_OOB 225 ENTITY_BLACK_MAW 226 ENTITY_SKINNY 227 ENTITY_BONY 228 ENTITY_HOMUNCULUS 229 ENTITY_TUMOR 230 ENTITY_CAMILLO_JR 231 ENTITY_NERVE_ENDING 232 ENTITY_SKINBALL 233 ENTITY_MOM_HEAD 234 ENTITY_ONE_TOOTH 235 ENTITY_GAPING_MAW 236 ENTITY_BROKEN_GAPING_MAW 237 ENTITY_GURGLING 238 ENTITY_SPLASHER 239 ENTITY_GRUB 240 ENTITY_WALL_CREEP 241 ENTITY_RAGE_CREEP 242 ENTITY_BLIND_CREEP 243 ENTITY_CONJOINED_SPITTY 244 ENTITY_ROUND_WORM 245 ENTITY_POOP 246 ENTITY_RAGLING 247 ENTITY_FLESH_MOBILE_HOST 248 ENTITY_PSY_HORF 249 ENTITY_FULL_FLY 250 ENTITY_TICKING_SPIDER 251 ENTITY_BEGOTTEN 252 ENTITY_NULLS 253 ENTITY_PSY_TUMOR 254 ENTITY_FLOATING_KNIGHT 255 ENTITY_NIGHT_CRAWLER 256 ENTITY_DART_FLY Afterbirth 257 ENTITY_CONJOINED_FATTY 258 ENTITY_FAT_BAT 259 ENTITY_IMP 260 ENTITY_THE_HAUNT Rebirth bosses 261 ENTITY_DINGLE 262 ENTITY_MEGA_MAW 263 ENTITY_GATE 264 ENTITY_MEGA_FATTY 265 ENTITY_CAGE 266 ENTITY_MAMA_GURDY 267 ENTITY_DARK_ONE 268 ENTITY_ADVERSARY 269 ENTITY_POLYCEPHALUS 270 ENTITY_MR_FRED 271 ENTITY_URIEL 272 ENTITY_GABRIEL 273 ENTITY_THE_LAMB 274 ENTITY_MEGA_SATAN 275 ENTITY_MEGA_SATAN_2 276 ENTITY_ROUNDY Afterbirth #2 277 ENTITY_BLACK_BONY 278 ENTITY_BLACK_GLOBIN 279 ENTITY_BLACK_GLOBIN_HEAD 280 ENTITY_BLACK_GLOBIN_BODY 281 ENTITY_SWARM 282 ENTITY_MEGA_CLOTTY 283 ENTITY_BONE_KNIGHT 284 ENTITY_CYCLOPIA 285 ENTITY_RED_GHOST 286 ENTITY_FLESH_DEATHS_HEAD 287 ENTITY_MOMS_DEAD_HAND 288 ENTITY_DUKIE 289 ENTITY_ULCER 290 ENTITY_MEATBALL 291 ENTITY_PITFALL 292 ENTITY_MOVABLE_TNT 293 ENTITY_ULTRA_COIN 294 ENTITY_ULTRA_DOOR 295 ENTITY_CORN_MINE 296 ENTITY_HUSH_FLY 297 ENTITY_HUSH_GAPER 298 ENTITY_HUSH_BOIL 299 ENTITY_GREED_GAPER 300 ENTITY_MUSHROOM 301 ENTITY_POISON_MIND 302 ENTITY_STONEY 303 ENTITY_BLISTER 304 ENTITY_THE_THING 305 ENTITY_MINISTRO 306 ENTITY_PORTAL 307 ENTITY_TARBOY Booster enemies 308 ENTITY_FISTULOID 309 ENTITY_GUSH 310 ENTITY_LEPER 401 ENTITY_STAIN Afterbirth bosses 402 ENTITY_BROWNIE 403 ENTITY_FORSAKEN 404 ENTITY_LITTLE_HORN 405 ENTITY_RAG_MAN 406 ENTITY_ULTRA_GREED 407 ENTITY_HUSH 408 ENTITY_HUSH_SKINLESS 409 ENTITY_RAG_MEGA 410 ENTITY_SISTERS_VIS 411 ENTITY_BIG_HORN 412 ENTITY_DELIRIUM 413 ENTITY_MATRIARCH 1000 ENTITY_EFFECT 1000 special effects 9001 ENTITY_TEXT","title":"EntityType"},{"location":"enums/EntityType/#enum-entitytype","text":"DLC Value Enumerator Comment 0 ENTITY_NULL 1 ENTITY_PLAYER 1 player 2 ENTITY_TEAR 2 tear projectile 3 ENTITY_FAMILIAR 3 familiar 4 ENTITY_BOMBDROP 4 bomb drop 5 ENTITY_PICKUP 5 pickup item 6 ENTITY_SLOT 6 slot machine 7 ENTITY_LASER 7 laser beam 8 ENTITY_KNIFE 8 mom's knife 9 ENTITY_PROJECTILE 9 blood projectile 10 ENTITY_GAPER 10 enemy: Gaper 11 ENTITY_GUSHER 11 enemy: Gusher 12 ENTITY_HORF 12 enemy: Horf 13 ENTITY_FLY 13 enemy: Fly 14 ENTITY_POOTER 14 enemy: Pooter 15 ENTITY_CLOTTY 15 enemy: Clotty 16 ENTITY_MULLIGAN 16 enemy: Mulligan 17 ENTITY_SHOPKEEPER 18 ENTITY_ATTACKFLY 18 enemy: Attack Fly 19 ENTITY_LARRYJR 19 boss: Larry Jr./Hollow 20 ENTITY_MONSTRO 20 boss: Monstro 21 ENTITY_MAGGOT 22 ENTITY_HIVE 23 ENTITY_CHARGER 24 ENTITY_GLOBIN 25 ENTITY_BOOMFLY 26 ENTITY_MAW 27 ENTITY_HOST 28 ENTITY_CHUB 29 ENTITY_HOPPER 29 enemy: Hopper 30 ENTITY_BOIL 30 enemy: Boil, variants: 1 - Gut, 2 - Sack 31 ENTITY_SPITY 32 ENTITY_BRAIN 33 ENTITY_FIREPLACE 34 ENTITY_LEAPER 35 ENTITY_MRMAW 36 ENTITY_GURDY 38 ENTITY_BABY 39 ENTITY_VIS 40 ENTITY_GUTS 41 ENTITY_KNIGHT 42 ENTITY_STONEHEAD 43 ENTITY_MONSTRO2 44 ENTITY_POKY 45 ENTITY_MOM 46 ENTITY_SLOTH 46 miniboss: Sloth 47 ENTITY_LUST 47 miniboss: Lust 48 ENTITY_WRATH 48 miniboss: Wrath 49 ENTITY_GLUTTONY 49 miniboss: Gluttony 50 ENTITY_GREED 50 miniboss: Greed 51 ENTITY_ENVY 51 miniboss: Envy 52 ENTITY_PRIDE 52 miniboss: Pride 53 ENTITY_DOPLE 54 ENTITY_FLAMINGHOPPER 54 enemy: Flaming Hopper 55 ENTITY_LEECH 56 ENTITY_LUMP 57 ENTITY_MEMBRAIN 57 enemy: Membrain and Mama Guts 58 ENTITY_PARA_BITE 59 ENTITY_FRED 60 ENTITY_EYE 61 ENTITY_SUCKER 61 enemy: Sucker 62 ENTITY_PIN 62 boss: Pin 63 ENTITY_FAMINE 64 ENTITY_PESTILENCE 65 ENTITY_WAR variant 1: Conquest 66 ENTITY_DEATH 67 ENTITY_DUKE 67 boss: Duke of Flies/Husk 68 ENTITY_PEEP 69 ENTITY_LOKI 71 ENTITY_FISTULA_BIG 72 ENTITY_FISTULA_MEDIUM 73 ENTITY_FISTULA_SMALL 74 ENTITY_BLASTOCYST_BIG 74 boss: Blastocyst 75 ENTITY_BLASTOCYST_MEDIUM 76 ENTITY_BLASTOCYST_SMALL 77 ENTITY_EMBRYO 78 ENTITY_MOMS_HEART 79 ENTITY_GEMINI 79 boss: Gemini 80 ENTITY_MOTER 80 enemy: Moter 81 ENTITY_FALLEN variant 1: Krampus 82 ENTITY_HEADLESS_HORSEMAN Headless Horseman 83 ENTITY_HORSEMAN_HEAD Head for Headless Horseman 84 ENTITY_SATAN 85 ENTITY_SPIDER 85 enemy: Spider 86 ENTITY_KEEPER 87 ENTITY_GURGLE 88 ENTITY_WALKINGBOIL ai for WalkingBoil, WalkingGut and WalkingSack 89 ENTITY_BUTTLICKER 90 ENTITY_HANGER 90 enemy: Hanger 91 ENTITY_SWARMER 92 ENTITY_HEART 93 ENTITY_MASK 94 ENTITY_BIGSPIDER 96 ENTITY_ETERNALFLY 96 enemy: Eternal Fly 97 ENTITY_MASK_OF_INFAMY 98 ENTITY_HEART_OF_INFAMY 99 ENTITY_GURDY_JR 99 enemy: Gurdy Jr. 100 ENTITY_WIDOW 101 ENTITY_DADDYLONGLEGS 102 ENTITY_ISAAC 201 ENTITY_STONE_EYE Rebirth enemies 202 ENTITY_CONSTANT_STONE_SHOOTER 203 ENTITY_BRIMSTONE_HEAD 204 ENTITY_MOBILE_HOST 205 ENTITY_NEST 206 ENTITY_BABY_LONG_LEGS 207 ENTITY_CRAZY_LONG_LEGS 208 ENTITY_FATTY 209 ENTITY_FAT_SACK 210 ENTITY_BLUBBER 211 ENTITY_HALF_SACK 212 ENTITY_DEATHS_HEAD 213 ENTITY_MOMS_HAND 214 ENTITY_FLY_L2 215 ENTITY_SPIDER_L2 216 ENTITY_SWINGER 217 ENTITY_DIP 218 ENTITY_WALL_HUGGER 219 ENTITY_WIZOOB 220 ENTITY_SQUIRT 221 ENTITY_COD_WORM 222 ENTITY_RING_OF_FLIES 223 ENTITY_DINGA 224 ENTITY_OOB 225 ENTITY_BLACK_MAW 226 ENTITY_SKINNY 227 ENTITY_BONY 228 ENTITY_HOMUNCULUS 229 ENTITY_TUMOR 230 ENTITY_CAMILLO_JR 231 ENTITY_NERVE_ENDING 232 ENTITY_SKINBALL 233 ENTITY_MOM_HEAD 234 ENTITY_ONE_TOOTH 235 ENTITY_GAPING_MAW 236 ENTITY_BROKEN_GAPING_MAW 237 ENTITY_GURGLING 238 ENTITY_SPLASHER 239 ENTITY_GRUB 240 ENTITY_WALL_CREEP 241 ENTITY_RAGE_CREEP 242 ENTITY_BLIND_CREEP 243 ENTITY_CONJOINED_SPITTY 244 ENTITY_ROUND_WORM 245 ENTITY_POOP 246 ENTITY_RAGLING 247 ENTITY_FLESH_MOBILE_HOST 248 ENTITY_PSY_HORF 249 ENTITY_FULL_FLY 250 ENTITY_TICKING_SPIDER 251 ENTITY_BEGOTTEN 252 ENTITY_NULLS 253 ENTITY_PSY_TUMOR 254 ENTITY_FLOATING_KNIGHT 255 ENTITY_NIGHT_CRAWLER 256 ENTITY_DART_FLY Afterbirth 257 ENTITY_CONJOINED_FATTY 258 ENTITY_FAT_BAT 259 ENTITY_IMP 260 ENTITY_THE_HAUNT Rebirth bosses 261 ENTITY_DINGLE 262 ENTITY_MEGA_MAW 263 ENTITY_GATE 264 ENTITY_MEGA_FATTY 265 ENTITY_CAGE 266 ENTITY_MAMA_GURDY 267 ENTITY_DARK_ONE 268 ENTITY_ADVERSARY 269 ENTITY_POLYCEPHALUS 270 ENTITY_MR_FRED 271 ENTITY_URIEL 272 ENTITY_GABRIEL 273 ENTITY_THE_LAMB 274 ENTITY_MEGA_SATAN 275 ENTITY_MEGA_SATAN_2 276 ENTITY_ROUNDY Afterbirth #2 277 ENTITY_BLACK_BONY 278 ENTITY_BLACK_GLOBIN 279 ENTITY_BLACK_GLOBIN_HEAD 280 ENTITY_BLACK_GLOBIN_BODY 281 ENTITY_SWARM 282 ENTITY_MEGA_CLOTTY 283 ENTITY_BONE_KNIGHT 284 ENTITY_CYCLOPIA 285 ENTITY_RED_GHOST 286 ENTITY_FLESH_DEATHS_HEAD 287 ENTITY_MOMS_DEAD_HAND 288 ENTITY_DUKIE 289 ENTITY_ULCER 290 ENTITY_MEATBALL 291 ENTITY_PITFALL 292 ENTITY_MOVABLE_TNT 293 ENTITY_ULTRA_COIN 294 ENTITY_ULTRA_DOOR 295 ENTITY_CORN_MINE 296 ENTITY_HUSH_FLY 297 ENTITY_HUSH_GAPER 298 ENTITY_HUSH_BOIL 299 ENTITY_GREED_GAPER 300 ENTITY_MUSHROOM 301 ENTITY_POISON_MIND 302 ENTITY_STONEY 303 ENTITY_BLISTER 304 ENTITY_THE_THING 305 ENTITY_MINISTRO 306 ENTITY_PORTAL 307 ENTITY_TARBOY Booster enemies 308 ENTITY_FISTULOID 309 ENTITY_GUSH 310 ENTITY_LEPER 401 ENTITY_STAIN Afterbirth bosses 402 ENTITY_BROWNIE 403 ENTITY_FORSAKEN 404 ENTITY_LITTLE_HORN 405 ENTITY_RAG_MAN 406 ENTITY_ULTRA_GREED 407 ENTITY_HUSH 408 ENTITY_HUSH_SKINLESS 409 ENTITY_RAG_MEGA 410 ENTITY_SISTERS_VIS 411 ENTITY_BIG_HORN 412 ENTITY_DELIRIUM 413 ENTITY_MATRIARCH 1000 ENTITY_EFFECT 1000 special effects 9001 ENTITY_TEXT","title":"Enum \"EntityType\""},{"location":"enums/FamiliarVariant/","text":"Enum \"FamiliarVariant\" \u2693\ufe0e DLC Value Enumerator Comment 0 FAMILIAR_NULL 1 BROTHER_BOBBY 2 DEMON_BABY 3 LITTLE_CHUBBY 4 LITTLE_GISH 5 LITTLE_STEVEN 6 ROBO_BABY 7 SISTER_MAGGY 8 ABEL 9 GHOST_BABY 10 HARLEQUIN_BABY 11 RAINBOW_BABY 12 ISAACS_HEAD 13 BLUE_BABY_SOUL 14 DEAD_BIRD 15 EVES_BIRD_FOOT 16 DADDY_LONGLEGS 17 PEEPER 20 BOMB_BAG 21 SACK_OF_PENNIES 22 LITTLE_CHAD 23 RELIC 24 BUM_FRIEND 25 HOLY_WATER 26 KEY_PIECE_1 27 KEY_PIECE_2 28 KEY_FULL 30 FOREVER_ALONE 31 DISTANT_ADMIRATION 32 GUARDIAN_ANGEL 33 FLY_ORBITAL 35 SACRIFICIAL_DAGGER 40 DEAD_CAT 41 ONE_UP 42 GUPPYS_HAIRBALL 43 BLUE_FLY 44 CUBE_OF_MEAT_1 45 CUBE_OF_MEAT_2 46 CUBE_OF_MEAT_3 47 CUBE_OF_MEAT_4 48 ISAACS_BODY 50 SMART_FLY 51 DRY_BABY 52 JUICY_SACK 53 ROBO_BABY_2 54 ROTTEN_BABY 55 HEADLESS_BABY 56 LEECH 57 MYSTERY_SACK 58 BBF 59 BOBS_BRAIN 60 BEST_BUD 61 LIL_BRIMSTONE 62 ISAACS_HEART 63 LIL_HAUNT 64 DARK_BUM 65 BIG_FAN 66 SISSY_LONGLEGS 67 PUNCHING_BAG 68 GUILLOTINE 69 BALL_OF_BANDAGES_1 70 BALL_OF_BANDAGES_2 71 BALL_OF_BANDAGES_3 72 BALL_OF_BANDAGES_4 73 BLUE_SPIDER 74 MONGO_BABY 75 SAMSONS_CHAINS 76 CAINS_OTHER_EYE 77 BLUEBABYS_ONLY_FRIEND 78 SCISSORS 79 GEMINI 80 INCUBUS 81 FATES_REWARD 82 LIL_CHEST 83 SWORN_PROTECTOR 84 FRIEND_ZONE 85 LOST_FLY 86 CHARGED_BABY 87 LIL_GURDY 88 BUMBO 89 CENSER 90 KEY_BUM 91 RUNE_BAG 92 SERAPHIM 93 GB_BUG 94 SPIDER_MOD 95 FARTING_BABY 96 SUCCUBUS 97 LIL_LOKI 98 OBSESSED_FAN 99 PAPA_FLY 100 MILK 101 MULTIDIMENSIONAL_BABY 102 SUPER_BUM 103 TONSIL 104 BIG_CHUBBY 105 DEPRESSION 106 SHADE 107 HUSHY 108 LIL_MONSTRO 109 KING_BABY 110 FINGER 111 YO_LISTEN 112 ACID_BABY 113 SPIDER_BABY 114 SACK_OF_SACKS 115 BROWN_NUGGET_POOTER 116 BLOODSHOT_EYE 117 MOMS_RAZOR 118 ANGRY_FLY Booster Pack #1 119 BUDDY_IN_A_BOX 120 SPRINKLER 121 LEPROCY Booster Pack #2 122 LIL_HARBINGERS Booster Pack #3 123 ANGELIC_PRISM 124 MYSTERY_EGG Booster Pack #5 125 LIL_SPEWER 126 SLIPPED_RIB 127 POINTY_RIB 128 BONE_ORBITAL 129 HALLOWED_GROUND 130 JAW_BONE","title":"FamiliarVariant"},{"location":"enums/FamiliarVariant/#enum-familiarvariant","text":"DLC Value Enumerator Comment 0 FAMILIAR_NULL 1 BROTHER_BOBBY 2 DEMON_BABY 3 LITTLE_CHUBBY 4 LITTLE_GISH 5 LITTLE_STEVEN 6 ROBO_BABY 7 SISTER_MAGGY 8 ABEL 9 GHOST_BABY 10 HARLEQUIN_BABY 11 RAINBOW_BABY 12 ISAACS_HEAD 13 BLUE_BABY_SOUL 14 DEAD_BIRD 15 EVES_BIRD_FOOT 16 DADDY_LONGLEGS 17 PEEPER 20 BOMB_BAG 21 SACK_OF_PENNIES 22 LITTLE_CHAD 23 RELIC 24 BUM_FRIEND 25 HOLY_WATER 26 KEY_PIECE_1 27 KEY_PIECE_2 28 KEY_FULL 30 FOREVER_ALONE 31 DISTANT_ADMIRATION 32 GUARDIAN_ANGEL 33 FLY_ORBITAL 35 SACRIFICIAL_DAGGER 40 DEAD_CAT 41 ONE_UP 42 GUPPYS_HAIRBALL 43 BLUE_FLY 44 CUBE_OF_MEAT_1 45 CUBE_OF_MEAT_2 46 CUBE_OF_MEAT_3 47 CUBE_OF_MEAT_4 48 ISAACS_BODY 50 SMART_FLY 51 DRY_BABY 52 JUICY_SACK 53 ROBO_BABY_2 54 ROTTEN_BABY 55 HEADLESS_BABY 56 LEECH 57 MYSTERY_SACK 58 BBF 59 BOBS_BRAIN 60 BEST_BUD 61 LIL_BRIMSTONE 62 ISAACS_HEART 63 LIL_HAUNT 64 DARK_BUM 65 BIG_FAN 66 SISSY_LONGLEGS 67 PUNCHING_BAG 68 GUILLOTINE 69 BALL_OF_BANDAGES_1 70 BALL_OF_BANDAGES_2 71 BALL_OF_BANDAGES_3 72 BALL_OF_BANDAGES_4 73 BLUE_SPIDER 74 MONGO_BABY 75 SAMSONS_CHAINS 76 CAINS_OTHER_EYE 77 BLUEBABYS_ONLY_FRIEND 78 SCISSORS 79 GEMINI 80 INCUBUS 81 FATES_REWARD 82 LIL_CHEST 83 SWORN_PROTECTOR 84 FRIEND_ZONE 85 LOST_FLY 86 CHARGED_BABY 87 LIL_GURDY 88 BUMBO 89 CENSER 90 KEY_BUM 91 RUNE_BAG 92 SERAPHIM 93 GB_BUG 94 SPIDER_MOD 95 FARTING_BABY 96 SUCCUBUS 97 LIL_LOKI 98 OBSESSED_FAN 99 PAPA_FLY 100 MILK 101 MULTIDIMENSIONAL_BABY 102 SUPER_BUM 103 TONSIL 104 BIG_CHUBBY 105 DEPRESSION 106 SHADE 107 HUSHY 108 LIL_MONSTRO 109 KING_BABY 110 FINGER 111 YO_LISTEN 112 ACID_BABY 113 SPIDER_BABY 114 SACK_OF_SACKS 115 BROWN_NUGGET_POOTER 116 BLOODSHOT_EYE 117 MOMS_RAZOR 118 ANGRY_FLY Booster Pack #1 119 BUDDY_IN_A_BOX 120 SPRINKLER 121 LEPROCY Booster Pack #2 122 LIL_HARBINGERS Booster Pack #3 123 ANGELIC_PRISM 124 MYSTERY_EGG Booster Pack #5 125 LIL_SPEWER 126 SLIPPED_RIB 127 POINTY_RIB 128 BONE_ORBITAL 129 HALLOWED_GROUND 130 JAW_BONE","title":"Enum \"FamiliarVariant\""},{"location":"enums/GameStateFlag/","text":"Enum \"GameStateFlag\" \u2693\ufe0e DLC Value Enumerator Comment 0 STATE_FAMINE_SPAWNED 1 STATE_PESTILENCE_SPAWNED 2 STATE_WAR_SPAWNED 3 STATE_DEATH_SPAWNED 4 STATE_BOSSPOOL_SWITCHED 5 STATE_DEVILROOM_SPAWNED 6 STATE_DEVILROOM_VISITED 7 STATE_BOOK_REVELATIONS_USED 8 STATE_BOOK_PICKED_UP 9 STATE_WRATH_SPAWNED 10 STATE_GLUTTONY_SPAWNED 11 STATE_LUST_SPAWNED 12 STATE_SLOTH_SPAWNED 13 STATE_ENVY_SPAWNED 14 STATE_PRIDE_SPAWNED 15 STATE_GREED_SPAWNED 16 STATE_SUPERGREED_SPAWNED 17 STATE_DONATION_SLOT_BROKEN 18 STATE_DONATION_SLOT_JAMMED 19 STATE_HEAVEN_PATH 20 STATE_REBIRTH_BOSS_SWITCHED 21 STATE_HAUNT_SELECTED 22 STATE_ADVERSARY_SELECTED 23 STATE_MR_FRED_SELECTED 24 STATE_MAMA_GURDY_SELECTED 25 STATE_URIEL_SPAWNED 26 STATE_GABRIEL_SPAWNED 27 STATE_FALLEN_SPAWNED 28 STATE_HEADLESS_HORSEMAN_SPAWNED 29 STATE_KRAMPUS_SPAWNED 30 STATE_DONATION_SLOT_BLOWN 31 STATE_SHOPKEEPER_KILLED 32 STATE_ULTRAPRIDE_SPAWNED 33 STATE_BOSSRUSH_DONE 34 STATE_GREED_SLOT_JAMMED 35 STATE_AFTERBIRTH_BOSS_SWITCHED 36 STATE_BROWNIE_SELECTED 37 STATE_SUPERBUM_APPEARED 38 STATE_BOSSRUSH_DOOR_SPAWNED 39 STATE_BLUEWOMB_DOOR_SPAWNED 40 STATE_BLUEWOMB_DONE 41 STATE_HEART_BOMB_COIN_PICKED 42 STATE_ABPLUS_BOSS_SWITCHED 43 STATE_SISTERS_VIS_SELECTED 44 NUM_STATE_FLAGS","title":"GameStateFlag"},{"location":"enums/GameStateFlag/#enum-gamestateflag","text":"DLC Value Enumerator Comment 0 STATE_FAMINE_SPAWNED 1 STATE_PESTILENCE_SPAWNED 2 STATE_WAR_SPAWNED 3 STATE_DEATH_SPAWNED 4 STATE_BOSSPOOL_SWITCHED 5 STATE_DEVILROOM_SPAWNED 6 STATE_DEVILROOM_VISITED 7 STATE_BOOK_REVELATIONS_USED 8 STATE_BOOK_PICKED_UP 9 STATE_WRATH_SPAWNED 10 STATE_GLUTTONY_SPAWNED 11 STATE_LUST_SPAWNED 12 STATE_SLOTH_SPAWNED 13 STATE_ENVY_SPAWNED 14 STATE_PRIDE_SPAWNED 15 STATE_GREED_SPAWNED 16 STATE_SUPERGREED_SPAWNED 17 STATE_DONATION_SLOT_BROKEN 18 STATE_DONATION_SLOT_JAMMED 19 STATE_HEAVEN_PATH 20 STATE_REBIRTH_BOSS_SWITCHED 21 STATE_HAUNT_SELECTED 22 STATE_ADVERSARY_SELECTED 23 STATE_MR_FRED_SELECTED 24 STATE_MAMA_GURDY_SELECTED 25 STATE_URIEL_SPAWNED 26 STATE_GABRIEL_SPAWNED 27 STATE_FALLEN_SPAWNED 28 STATE_HEADLESS_HORSEMAN_SPAWNED 29 STATE_KRAMPUS_SPAWNED 30 STATE_DONATION_SLOT_BLOWN 31 STATE_SHOPKEEPER_KILLED 32 STATE_ULTRAPRIDE_SPAWNED 33 STATE_BOSSRUSH_DONE 34 STATE_GREED_SLOT_JAMMED 35 STATE_AFTERBIRTH_BOSS_SWITCHED 36 STATE_BROWNIE_SELECTED 37 STATE_SUPERBUM_APPEARED 38 STATE_BOSSRUSH_DOOR_SPAWNED 39 STATE_BLUEWOMB_DOOR_SPAWNED 40 STATE_BLUEWOMB_DONE 41 STATE_HEART_BOMB_COIN_PICKED 42 STATE_ABPLUS_BOSS_SWITCHED 43 STATE_SISTERS_VIS_SELECTED 44 NUM_STATE_FLAGS","title":"Enum \"GameStateFlag\""},{"location":"enums/GridCollisionClass/","text":"Enum \"GridCollisionClass\" \u2693\ufe0e DLC Value Enumerator Comment 0 COLLISION_NONE 1 COLLISION_PIT 2 COLLISION_OBJECT 3 COLLISION_SOLID 4 COLLISION_WALL 5 COLLISION_WALL_EXCEPT_PLAYER","title":"GridCollisionClass"},{"location":"enums/GridCollisionClass/#enum-gridcollisionclass","text":"DLC Value Enumerator Comment 0 COLLISION_NONE 1 COLLISION_PIT 2 COLLISION_OBJECT 3 COLLISION_SOLID 4 COLLISION_WALL 5 COLLISION_WALL_EXCEPT_PLAYER","title":"Enum \"GridCollisionClass\""},{"location":"enums/GridEntityType/","text":"Enum \"GridEntityType\" \u2693\ufe0e DLC Value Enumerator Comment 0 GRID_NULL 1 GRID_DECORATION 2 GRID_ROCK 3 GRID_ROCKB 4 GRID_ROCKT 5 GRID_ROCK_BOMB 6 GRID_ROCK_ALT 7 GRID_PIT 8 GRID_SPIKES 9 GRID_SPIKES_ONOFF 10 GRID_SPIDERWEB 11 GRID_LOCK 12 GRID_TNT 13 GRID_FIREPLACE not used! 14 GRID_POOP 15 GRID_WALL 16 GRID_DOOR 17 GRID_TRAPDOOR 18 GRID_STAIRS 19 GRID_GRAVITY 20 GRID_PRESSURE_PLATE 21 GRID_STATUE 22 GRID_ROCK_SS","title":"GridEntityType"},{"location":"enums/GridEntityType/#enum-gridentitytype","text":"DLC Value Enumerator Comment 0 GRID_NULL 1 GRID_DECORATION 2 GRID_ROCK 3 GRID_ROCKB 4 GRID_ROCKT 5 GRID_ROCK_BOMB 6 GRID_ROCK_ALT 7 GRID_PIT 8 GRID_SPIKES 9 GRID_SPIKES_ONOFF 10 GRID_SPIDERWEB 11 GRID_LOCK 12 GRID_TNT 13 GRID_FIREPLACE not used! 14 GRID_POOP 15 GRID_WALL 16 GRID_DOOR 17 GRID_TRAPDOOR 18 GRID_STAIRS 19 GRID_GRAVITY 20 GRID_PRESSURE_PLATE 21 GRID_STATUE 22 GRID_ROCK_SS","title":"Enum \"GridEntityType\""},{"location":"enums/GridRooms/","text":"Enum \"GridRooms\" \u2693\ufe0e DLC Value Enumerator Comment 128 MAX_GRID_ROOMS -1 ROOM_DEVIL_IDX -2 ROOM_ERROR_IDX -3 ROOM_DEBUG_IDX -4 ROOM_DUNGEON_IDX -5 ROOM_BOSSRUSH_IDX -6 ROOM_BLACK_MARKET_IDX -7 ROOM_MEGA_SATAN_IDX -8 ROOM_BLUE_WOOM_IDX -9 ROOM_THE_VOID_IDX 9 NUM_OFF_GRID_ROOMS 137 MAX_ROOMS","title":"GridRooms"},{"location":"enums/GridRooms/#enum-gridrooms","text":"DLC Value Enumerator Comment 128 MAX_GRID_ROOMS -1 ROOM_DEVIL_IDX -2 ROOM_ERROR_IDX -3 ROOM_DEBUG_IDX -4 ROOM_DUNGEON_IDX -5 ROOM_BOSSRUSH_IDX -6 ROOM_BLACK_MARKET_IDX -7 ROOM_MEGA_SATAN_IDX -8 ROOM_BLUE_WOOM_IDX -9 ROOM_THE_VOID_IDX 9 NUM_OFF_GRID_ROOMS 137 MAX_ROOMS","title":"Enum \"GridRooms\""},{"location":"enums/HeartSubType/","text":"Enum \"HeartSubType\" \u2693\ufe0e DLC Value Enumerator Comment 1 HEART_FULL 2 HEART_HALF 3 HEART_SOUL 4 HEART_ETERNAL 5 HEART_DOUBLEPACK 6 HEART_BLACK 7 HEART_GOLDEN 8 HEART_HALF_SOUL 9 HEART_SCARED 10 HEART_BLENDED 11 HEART_BONE","title":"HeartSubType"},{"location":"enums/HeartSubType/#enum-heartsubtype","text":"DLC Value Enumerator Comment 1 HEART_FULL 2 HEART_HALF 3 HEART_SOUL 4 HEART_ETERNAL 5 HEART_DOUBLEPACK 6 HEART_BLACK 7 HEART_GOLDEN 8 HEART_HALF_SOUL 9 HEART_SCARED 10 HEART_BLENDED 11 HEART_BONE","title":"Enum \"HeartSubType\""},{"location":"enums/InputHook/","text":"Enum \"InputHook\" \u2693\ufe0e DLC Value Enumerator Comment 0 IS_ACTION_PRESSED 1 IS_ACTION_TRIGGERED 2 GET_ACTION_VALUE","title":"InputHook"},{"location":"enums/InputHook/#enum-inputhook","text":"DLC Value Enumerator Comment 0 IS_ACTION_PRESSED 1 IS_ACTION_TRIGGERED 2 GET_ACTION_VALUE","title":"Enum \"InputHook\""},{"location":"enums/ItemPoolType/","text":"Enum \"ItemPoolType\" \u2693\ufe0e DLC Value Enumerator Comment -1 POOL_NULL 0 POOL_TREASURE 1 POOL_SHOP 2 POOL_BOSS 3 POOL_DEVIL 4 POOL_ANGEL 5 POOL_SECRET 6 POOL_LIBRARY 7 POOL_CHALLENGE 8 POOL_GOLDEN_CHEST 9 POOL_RED_CHEST 10 POOL_BEGGAR 11 POOL_DEMON_BEGGAR 12 POOL_CURSE 13 POOL_KEY_MASTER 14 POOL_BOSSRUSH 15 POOL_DUNGEON 16 POOL_GREED_TREASURE 17 POOL_GREED_BOSS 18 POOL_GREED_SHOP 19 POOL_GREED_DEVIL 20 POOL_GREED_ANGEL 21 POOL_GREED_CURSE 22 POOL_GREED_SECRET 23 POOL_GREED_LIBRARY 24 POOL_GREED_GOLDEN_CHEST 25 POOL_BOMB_BUM 26 NUM_ITEMPOOLS","title":"ItemPoolType"},{"location":"enums/ItemPoolType/#enum-itempooltype","text":"DLC Value Enumerator Comment -1 POOL_NULL 0 POOL_TREASURE 1 POOL_SHOP 2 POOL_BOSS 3 POOL_DEVIL 4 POOL_ANGEL 5 POOL_SECRET 6 POOL_LIBRARY 7 POOL_CHALLENGE 8 POOL_GOLDEN_CHEST 9 POOL_RED_CHEST 10 POOL_BEGGAR 11 POOL_DEMON_BEGGAR 12 POOL_CURSE 13 POOL_KEY_MASTER 14 POOL_BOSSRUSH 15 POOL_DUNGEON 16 POOL_GREED_TREASURE 17 POOL_GREED_BOSS 18 POOL_GREED_SHOP 19 POOL_GREED_DEVIL 20 POOL_GREED_ANGEL 21 POOL_GREED_CURSE 22 POOL_GREED_SECRET 23 POOL_GREED_LIBRARY 24 POOL_GREED_GOLDEN_CHEST 25 POOL_BOMB_BUM 26 NUM_ITEMPOOLS","title":"Enum \"ItemPoolType\""},{"location":"enums/ItemType/","text":"Enum \"ItemType\" \u2693\ufe0e DLC Value Enumerator Comment 0 ITEM_NULL 1 ITEM_PASSIVE 2 ITEM_TRINKET 3 ITEM_ACTIVE 4 ITEM_FAMILIAR","title":"ItemType"},{"location":"enums/ItemType/#enum-itemtype","text":"DLC Value Enumerator Comment 0 ITEM_NULL 1 ITEM_PASSIVE 2 ITEM_TRINKET 3 ITEM_ACTIVE 4 ITEM_FAMILIAR","title":"Enum \"ItemType\""},{"location":"enums/KeySubType/","text":"Enum \"KeySubType\" \u2693\ufe0e DLC Value Enumerator Comment 1 KEY_NORMAL 2 KEY_GOLDEN 3 KEY_DOUBLEPACK 4 KEY_CHARGED","title":"KeySubType"},{"location":"enums/KeySubType/#enum-keysubtype","text":"DLC Value Enumerator Comment 1 KEY_NORMAL 2 KEY_GOLDEN 3 KEY_DOUBLEPACK 4 KEY_CHARGED","title":"Enum \"KeySubType\""},{"location":"enums/Keyboard/","text":"Enum \"Keyboard\" \u2693\ufe0e DLC Value Enumerator Comment 32 KEY_SPACE 39 KEY_APOSTROPHE 44 KEY_COMMA 45 KEY_MINUS 46 KEY_PERIOD 47 KEY_SLASH 48 KEY_0 49 KEY_1 50 KEY_2 51 KEY_3 52 KEY_4 53 KEY_5 54 KEY_6 55 KEY_7 56 KEY_8 57 KEY_9 59 KEY_SEMICOLON 61 KEY_EQUAL 65 KEY_A 66 KEY_B 67 KEY_C 68 KEY_D 69 KEY_E 70 KEY_F 71 KEY_G 72 KEY_H 73 KEY_I 74 KEY_J 75 KEY_K 76 KEY_L 77 KEY_M 78 KEY_N 79 KEY_O 80 KEY_P 81 KEY_Q 82 KEY_R 83 KEY_S 84 KEY_T 85 KEY_U 86 KEY_V 87 KEY_W 88 KEY_X 89 KEY_Y 90 KEY_Z 91 KEY_LEFT_BRACKET 92 KEY_BACKSLASH 93 KEY_RIGHT_BRACKET 96 KEY_GRAVE_ACCENT 161 KEY_WORLD_1 162 KEY_WORLD_2 256 KEY_ESCAPE 257 KEY_ENTER 258 KEY_TAB 259 KEY_BACKSPACE 260 KEY_INSERT 261 KEY_DELETE 262 KEY_RIGHT 263 KEY_LEFT 264 KEY_DOWN 265 KEY_UP 266 KEY_PAGE_UP 267 KEY_PAGE_DOWN 268 KEY_HOME 269 KEY_END 280 KEY_CAPS_LOCK 281 KEY_SCROLL_LOCK 282 KEY_NUM_LOCK 283 KEY_PRINT_SCREEN 284 KEY_PAUSE 290 KEY_F1 291 KEY_F2 292 KEY_F3 293 KEY_F4 294 KEY_F5 295 KEY_F6 296 KEY_F7 297 KEY_F8 298 KEY_F9 299 KEY_F10 300 KEY_F11 301 KEY_F12 302 KEY_F13 303 KEY_F14 304 KEY_F15 305 KEY_F16 306 KEY_F17 307 KEY_F18 308 KEY_F19 309 KEY_F20 310 KEY_F21 311 KEY_F22 312 KEY_F23 313 KEY_F24 314 KEY_F25 320 KEY_KP_0 321 KEY_KP_1 322 KEY_KP_2 323 KEY_KP_3 324 KEY_KP_4 325 KEY_KP_5 326 KEY_KP_6 327 KEY_KP_7 328 KEY_KP_8 329 KEY_KP_9 330 KEY_KP_DECIMAL 331 KEY_KP_DIVIDE 332 KEY_KP_MULTIPLY 333 KEY_KP_SUBTRACT 334 KEY_KP_ADD 335 KEY_KP_ENTER 336 KEY_KP_EQUAL 340 KEY_LEFT_SHIFT 341 KEY_LEFT_CONTROL 342 KEY_LEFT_ALT 343 KEY_LEFT_SUPER 344 KEY_RIGHT_SHIFT 345 KEY_RIGHT_CONTROL 346 KEY_RIGHT_ALT 347 KEY_RIGHT_SUPER 348 KEY_MENU","title":"Keyboard"},{"location":"enums/Keyboard/#enum-keyboard","text":"DLC Value Enumerator Comment 32 KEY_SPACE 39 KEY_APOSTROPHE 44 KEY_COMMA 45 KEY_MINUS 46 KEY_PERIOD 47 KEY_SLASH 48 KEY_0 49 KEY_1 50 KEY_2 51 KEY_3 52 KEY_4 53 KEY_5 54 KEY_6 55 KEY_7 56 KEY_8 57 KEY_9 59 KEY_SEMICOLON 61 KEY_EQUAL 65 KEY_A 66 KEY_B 67 KEY_C 68 KEY_D 69 KEY_E 70 KEY_F 71 KEY_G 72 KEY_H 73 KEY_I 74 KEY_J 75 KEY_K 76 KEY_L 77 KEY_M 78 KEY_N 79 KEY_O 80 KEY_P 81 KEY_Q 82 KEY_R 83 KEY_S 84 KEY_T 85 KEY_U 86 KEY_V 87 KEY_W 88 KEY_X 89 KEY_Y 90 KEY_Z 91 KEY_LEFT_BRACKET 92 KEY_BACKSLASH 93 KEY_RIGHT_BRACKET 96 KEY_GRAVE_ACCENT 161 KEY_WORLD_1 162 KEY_WORLD_2 256 KEY_ESCAPE 257 KEY_ENTER 258 KEY_TAB 259 KEY_BACKSPACE 260 KEY_INSERT 261 KEY_DELETE 262 KEY_RIGHT 263 KEY_LEFT 264 KEY_DOWN 265 KEY_UP 266 KEY_PAGE_UP 267 KEY_PAGE_DOWN 268 KEY_HOME 269 KEY_END 280 KEY_CAPS_LOCK 281 KEY_SCROLL_LOCK 282 KEY_NUM_LOCK 283 KEY_PRINT_SCREEN 284 KEY_PAUSE 290 KEY_F1 291 KEY_F2 292 KEY_F3 293 KEY_F4 294 KEY_F5 295 KEY_F6 296 KEY_F7 297 KEY_F8 298 KEY_F9 299 KEY_F10 300 KEY_F11 301 KEY_F12 302 KEY_F13 303 KEY_F14 304 KEY_F15 305 KEY_F16 306 KEY_F17 307 KEY_F18 308 KEY_F19 309 KEY_F20 310 KEY_F21 311 KEY_F22 312 KEY_F23 313 KEY_F24 314 KEY_F25 320 KEY_KP_0 321 KEY_KP_1 322 KEY_KP_2 323 KEY_KP_3 324 KEY_KP_4 325 KEY_KP_5 326 KEY_KP_6 327 KEY_KP_7 328 KEY_KP_8 329 KEY_KP_9 330 KEY_KP_DECIMAL 331 KEY_KP_DIVIDE 332 KEY_KP_MULTIPLY 333 KEY_KP_SUBTRACT 334 KEY_KP_ADD 335 KEY_KP_ENTER 336 KEY_KP_EQUAL 340 KEY_LEFT_SHIFT 341 KEY_LEFT_CONTROL 342 KEY_LEFT_ALT 343 KEY_LEFT_SUPER 344 KEY_RIGHT_SHIFT 345 KEY_RIGHT_CONTROL 346 KEY_RIGHT_ALT 347 KEY_RIGHT_SUPER 348 KEY_MENU","title":"Enum \"Keyboard\""},{"location":"enums/LaserOffset/","text":"Enum \"LaserOffset\" \u2693\ufe0e DLC Value Enumerator Comment 0 LASER_TECH1_OFFSET 1 LASER_TECH2_OFFSET 2 LASER_TECH5_OFFSET 3 LASER_SHOOP_OFFSET 4 LASER_BRIMSTONE_OFFSET 5 LASER_MOMS_EYE_OFFSET 6 LASER_TRACTOR_BEAM_OFFSET","title":"LaserOffset"},{"location":"enums/LaserOffset/#enum-laseroffset","text":"DLC Value Enumerator Comment 0 LASER_TECH1_OFFSET 1 LASER_TECH2_OFFSET 2 LASER_TECH5_OFFSET 3 LASER_SHOOP_OFFSET 4 LASER_BRIMSTONE_OFFSET 5 LASER_MOMS_EYE_OFFSET 6 LASER_TRACTOR_BEAM_OFFSET","title":"Enum \"LaserOffset\""},{"location":"enums/LevelCurse/","text":"Enum \"LevelCurse\" \u2693\ufe0e DLC Value Enumerator Comment 0 CURSE_NONE 1 CURSE_OF_DARKNESS 1<<1 CURSE_OF_LABYRINTH 1<<2 CURSE_OF_THE_LOST 1<<3 CURSE_OF_THE_UNKNOWN 1<<4 CURSE_OF_THE_CURSED 1<<5 CURSE_OF_MAZE 1<<6 CURSE_OF_BLIND 8 NUM_CURSES","title":"LevelCurse"},{"location":"enums/LevelCurse/#enum-levelcurse","text":"DLC Value Enumerator Comment 0 CURSE_NONE 1 CURSE_OF_DARKNESS 1<<1 CURSE_OF_LABYRINTH 1<<2 CURSE_OF_THE_LOST 1<<3 CURSE_OF_THE_UNKNOWN 1<<4 CURSE_OF_THE_CURSED 1<<5 CURSE_OF_MAZE 1<<6 CURSE_OF_BLIND 8 NUM_CURSES","title":"Enum \"LevelCurse\""},{"location":"enums/LevelStage/","text":"Enum \"LevelStage\" \u2693\ufe0e DLC Value Enumerator internal id possible stages Comment 0 STAGE_NULL 0 Special Rooms (Game crashes on entering this stage) 1 STAGE1_1 1 Basement 1, Cellar 1, Burning Basement 1 2 STAGE1_2 2 Basement 2, Cellar 2, Burning Basement 2 3 STAGE2_1 3 Caves 1, Catacombs 1, Flooded Caves 1 4 STAGE2_2 4 Caves 2, Catacombs 2, Flooded Caves 2 5 STAGE3_1 5 Depths 1, Necropolis 1, Dank Depths 1 6 STAGE3_2 6 Depths 2, Necropolis 2, Dank Depths 2 7 STAGE4_1 7 Womb 1, Utero 1, Scarred Womb 1 8 STAGE4_2 8 Womb 2, Utero 2, Scarred Womb 2 9 STAGE4_3 9 ??? (Blue Womb) 10 STAGE5 10 Sheol, Cathedral 11 STAGE6 11 Dark Room, Chest 12 STAGE7 12 The Void 13 NUM_STAGES 13 (No actual Level, but can be visited ingame. it is a stage full of greed mode rooms, but every wave is its own room.) 1 STAGE1_GREED 1 Basement (Greed) 2 STAGE2_GREED 2 Caves (Greed) 3 STAGE3_GREED 3 Depths (Greed) 4 STAGE4_GREED 4 Womb (Greed) 5 STAGE5_GREED 5 Sheol (Greed) 6 STAGE6_GREED 6 The Shop (Greed) 7 STAGE7_GREED 7 Ultra Greed","title":"LevelStage"},{"location":"enums/LevelStage/#enum-levelstage","text":"DLC Value Enumerator internal id possible stages Comment 0 STAGE_NULL 0 Special Rooms (Game crashes on entering this stage) 1 STAGE1_1 1 Basement 1, Cellar 1, Burning Basement 1 2 STAGE1_2 2 Basement 2, Cellar 2, Burning Basement 2 3 STAGE2_1 3 Caves 1, Catacombs 1, Flooded Caves 1 4 STAGE2_2 4 Caves 2, Catacombs 2, Flooded Caves 2 5 STAGE3_1 5 Depths 1, Necropolis 1, Dank Depths 1 6 STAGE3_2 6 Depths 2, Necropolis 2, Dank Depths 2 7 STAGE4_1 7 Womb 1, Utero 1, Scarred Womb 1 8 STAGE4_2 8 Womb 2, Utero 2, Scarred Womb 2 9 STAGE4_3 9 ??? (Blue Womb) 10 STAGE5 10 Sheol, Cathedral 11 STAGE6 11 Dark Room, Chest 12 STAGE7 12 The Void 13 NUM_STAGES 13 (No actual Level, but can be visited ingame. it is a stage full of greed mode rooms, but every wave is its own room.) 1 STAGE1_GREED 1 Basement (Greed) 2 STAGE2_GREED 2 Caves (Greed) 3 STAGE3_GREED 3 Depths (Greed) 4 STAGE4_GREED 4 Womb (Greed) 5 STAGE5_GREED 5 Sheol (Greed) 6 STAGE6_GREED 6 The Shop (Greed) 7 STAGE7_GREED 7 Ultra Greed","title":"Enum \"LevelStage\""},{"location":"enums/LevelStateFlag/","text":"Enum \"LevelStateFlag\" \u2693\ufe0e DLC Value Enumerator Comment 0 STATE_BUM_KILLED 1 STATE_EVIL_BUM_KILLED 2 STATE_REDHEART_DAMAGED 3 STATE_BUM_LEFT 4 STATE_EVIL_BUM_LEFT 5 STATE_DAMAGED 6 STATE_SHOPKEEPER_KILLED_LVL 7 STATE_COMPASS_EFFECT 8 STATE_MAP_EFFECT 9 STATE_BLUE_MAP_EFFECT 10 STATE_FULL_MAP_EFFECT 11 STATE_GREED_LOST_PENALTY 12 STATE_GREED_MONSTRO_SPAWNED 13 STATE_ITEM_DUNGEON_FOUND 14 STATE_MAMA_MEGA_USED 15 NUM_STATE_FLAGS","title":"LevelStateFlag"},{"location":"enums/LevelStateFlag/#enum-levelstateflag","text":"DLC Value Enumerator Comment 0 STATE_BUM_KILLED 1 STATE_EVIL_BUM_KILLED 2 STATE_REDHEART_DAMAGED 3 STATE_BUM_LEFT 4 STATE_EVIL_BUM_LEFT 5 STATE_DAMAGED 6 STATE_SHOPKEEPER_KILLED_LVL 7 STATE_COMPASS_EFFECT 8 STATE_MAP_EFFECT 9 STATE_BLUE_MAP_EFFECT 10 STATE_FULL_MAP_EFFECT 11 STATE_GREED_LOST_PENALTY 12 STATE_GREED_MONSTRO_SPAWNED 13 STATE_ITEM_DUNGEON_FOUND 14 STATE_MAMA_MEGA_USED 15 NUM_STATE_FLAGS","title":"Enum \"LevelStateFlag\""},{"location":"enums/LocustSubtypes/","text":"Enum \"LocustSubtypes\" \u2693\ufe0e DLC Value Enumerator Comment 1 LOCUST_OF_WRATH 2 LOCUST_OF_PESTILENCE 3 LOCUST_OF_FAMINE 4 LOCUST_OF_DEATH 5 LOCUST_OF_CONQUEST","title":"LocustSubtypes"},{"location":"enums/LocustSubtypes/#enum-locustsubtypes","text":"DLC Value Enumerator Comment 1 LOCUST_OF_WRATH 2 LOCUST_OF_PESTILENCE 3 LOCUST_OF_FAMINE 4 LOCUST_OF_DEATH 5 LOCUST_OF_CONQUEST","title":"Enum \"LocustSubtypes\""},{"location":"enums/ModCallbacks/","text":"Enum \"ModCallbacks\" \u2693\ufe0e Execution order diagram: Example Usage \u2693\ufe0e This code will print \"Hello World!\" for every NPC Update. If the NPC is of the type \"ENTITY_GAPER\", it will also print \"Gaper found\". 1 2 3 4 5 6 7 8 9 function mod : myFunction ( entity ) -- 'entity' contains a reference to the NPC print ( \"Hello World!\" ) end mod : AddCallback ( ModCallbacks . MC_NPC_UPDATE , mod . myFunction ) function mod : myFunction2 ( entity ) -- 'entity' contains a reference to the NPC print ( \"Gaper found!\" ) end mod : AddCallback ( ModCallbacks . MC_NPC_UPDATE , mod . myFunction2 , EntityType . ENTITY_GAPER ) DLC Value Enumerator Args Comment 0 MC_NPC_UPDATE Function Args : (EntityNPC) Optional callback Args : EntityType Called after an NPC is updated. Returning any value will have no effect on later callback executions. This callback will NOT fire when the NPC is playing the \"Appear\" animation. For example, when a Gaper spawns, it will fire on frame 1, then on frame 31 and onwards. 1 MC_POST_UPDATE Function Args : - Called after every game update. Returning any value will have no effect on later callback executions. This callback is called 30 times per second. It will not be called, when its paused (for example on screentransitions or on the pause menu). 2 MC_POST_RENDER Function Args : - Called after every game render (60 times per second). Returning any value will have no effect on later callback executions. It is highly recommended to only use this function when you want to render something. Its not recommended to use this function for things which are not frequently used or need constant recalculation. 3 MC_USE_ITEM Function Args : (CollectibleType, RNG) Optional callback Args : CollectibleType Called when a custom active item is used, after discharging it. The item RNG allows for the item's random events to be seeded. Return true to show the \"use item\" animation, otherwise false.Returning any value will have no effect on later callback executions. 4 MC_POST_PEFFECT_UPDATE Function Args : (EntityPlayer) Optional callback Args : PlayerType Called for each player, each frame, after the player evaluates the effects of items that must be constantly evaluated.Returning any value will have no effect on later callback executions. 5 MC_USE_CARD Function Args : (Card) Optional callback Args : Card Called when a card/rune is used.Returning any value will have no effect on later callback executions. 6 MC_FAMILIAR_UPDATE Function Args : (EntityFamiliar) Optional callback Args : FamiliarVariant Called every frame for each familiar. Returning any value will have no effect on later callback executions. 7 MC_FAMILIAR_INIT Function Args : (EntityFamiliar) Optional callback Args : FamiliarVariant Called just after a familiar is initialized. Returning any value will have no effect on later callback executions. This Callback provides incomplete data in the EntityFamiliar. For example, the Position is always equal to Vector(0,0). 8 MC_EVALUATE_CACHE Function Args : (EntityPlayer, CacheFlag) Optional callback Args : CacheFlag Called one or more times when a player's stats must be re-evaluated, such as after picking up an item, using certain pills or manually calling EvaluateItems() on an EntityPlayer. Returning any value will have no effect on later callback executions.Hint: Use this to let custom items change the player's stats, familiars, flying, weapons, etc. Items tell the game which stats they affect using cache values in items.xml. Then the callback should respond to the CacheFlag by setting the corresponding player stat. Other items' stat modifiers, multipliers, etc are applied before this callback is called. 9 MC_POST_PLAYER_INIT Function Args : (EntityPlayer) Optional callback Args : PlayerVariant* Called after a Player Entity is initialized. The optional parameter can be used to specify a Player Variant. 0 = Player, 1 = Co-Op-BabyReturning any value will have no effect on later callback executions. This Callback provides incomplete data in the EntityPlayer. For example, the Position is always equal to Vector(0,0). 10 MC_USE_PILL Function Args : (PillEffect) Optional callback Args : PillEffect Called when a pill is used.Returning any value will have no effect on later callback executions. 11 MC_ENTITY_TAKE_DMG Function Args : (TookDamage [Entity], DamageAmount [float], DamageFlags [int], DamageSource [EntityRef], DamageCountdownFrames [int]) Optional callback Args : EntityType Called before new damage is applied. If the entity has a DAMAGE_COUNTDOWN flag, it will ignore any other DAMAGE_COUNTDOWN hits for the duration specified. Return true or nil if the entity or player should sustain the damage, otherwise false to ignore it. If the entity is an EntityPlayer, the DamageAmount is the integer number of half-hearts of damage that the player will take. Otherwise, DamageAmount is a number of hit points. Returning any value besides nil will prevent later callbacks from being executed. 12 MC_POST_CURSE_EVAL Function Args : (Curses) Curses is a bitmask containing current curses. Called after the current Level applied it's curses. Returns the new curse bitmask. Use Isaac.GetCurseIdByName() to get the curseID.If a number is returned, it will be the \"Curses\" arg for later executed callbacks.Returning a value that is not an integer or nil will cause the game to crash.The last callback to return a valid return value wins out and overwrites previous callbacks' return values 13 MC_INPUT_ACTION Function Args : (Entity, InputHook, ButtonAction) Optional callback Args : InputHook It is called when game/game entities wants to read an action input. Entity can be nil if the input is not read from an entity class. The InputHook value can be used to determine if this callback was called through Input.IsActionTriggered(), Input.IsActionPressed(), or Input.GetActionValue() Return nil if you don't want to overwrite the input or value. The return value can be bool if it's a IS_ACTION_XXX hook or float if it's an GET_ACTION_VALUE hook. Float values should be in range of 0.0 and 1.0 Returning any value will have no effect on later callback executions. This callback is called roughly 1470 times a second. 14 MC_LEVEL_GENERATOR This callback doesn't work right now and will never be called by the game! 15 MC_POST_GAME_STARTED Function Args : (IsContinued [bool]) This function gets called when you start a game. The boolean value is true when you continue a run, false when you start a new one. This callback will be called after MC_POST_NEW_ROOM and after MC_POST_NEW_LEVEL. Returning any value will have no effect on later callback executions. local function onStart(_,bool) print(bool) end mod:AddCallback(ModCallbacks.MC_POST_GAME_STARTED, onStart) 16 MC_POST_GAME_END Function Args : (IsGameOver [bool]) This function gets called when the game over screen appears, or when the an ending starts playing. The boolean value is true when you died and got a game over, false when you won and got an ending. Returning any value will have no effect on later callback executions. local function onEnd(_,bool) print(bool) end mod:AddCallback(ModCallbacks.MC_POST_GAME_END, onEnd) 17 MC_PRE_GAME_EXIT Function Args : (ShouldSave [bool]) This function gets called when you quit a run. The boolean value is true when the game would normally create a continuable save, false when it wouldn't. Called twice when the game plays an ending. Returning any value will have no effect on later callback executions. local function onExit(_,bool) print(bool) end mod:AddCallback(ModCallbacks.MC_PRE_GAME_EXIT, onExit) 18 MC_POST_NEW_LEVEL Function Args : - This triggers after transitioning a level or stage. Its always called after MC_POST_NEW_ROOM. Returning any value will have no effect on later callback executions. 19 MC_POST_NEW_ROOM Function Args : - This triggers after entering a room. Returning any value will have no effect on later callback executions. 20 MC_GET_CARD Function Args : (RNG, Card, IncludePlayingCards [bool], IncludeRunes [bool], OnlyRunes [bool]) This callback is used for handling Card Pools. Because not all cards have the same chance to spawn, use RNG for a seeded random selection.You can use the boolean values as a filter for the selection. The return value determines, what Card will be spawned. Return nil to not replace the spawned card. Returned values will not update the \"Card\" arg of later executed callbacks.Returning a value that is not an integer or nil will cause the game to crash. The last callback to return a valid return value wins out and overwrites previous callbacks' return values 21 MC_GET_SHADER_PARAMS Function Args : (ShaderName [string]) Returns a table containing a key -> value pair for custom shader parameters. 22 MC_EXECUTE_CMD Function Args : (CMD [string], Parameters [string]) Returns a string separated by (newline) per output line CMD is the first word of the Console input. The parameters are the rest of the Input.This function is NOT called for default game commands like Spawn or Debug. Returning a string will print it to the console. Returning any value will have no effect on later callback executions. function mod.oncmd(_, command, args) print(command) print(args) end mod:AddCallback(ModCallbacks.MC_EXECUTE_CMD, mod.oncmd) -- executing command \"Test apple 1 Pear test\" prints -- Test -- apple 1 Pear test 23 MC_PRE_USE_ITEM Function Args : (CollectibleType, RNG) Optional callback Args : CollectibleType Called before an item is used. Return true to prevent the default code of an item to be triggered. This will still discharge the item. Returning any value besides nil will also prevent later callbacks from being executed. 24 MC_PRE_ENTITY_SPAWN Function Args : (EntityType, Variant [int], SubType [int], Position [Vector], Velocity [Vector], Spawner [Entity], Seed [int]) Called right before an entity is spawned. Optional: Return a table with new values { Type, Variant, Subtype, Seed } to override these values of the spawned entity.Returning a value that is not a table or nil will cause the game to crash. The last callback to return a valid return value wins out and overwrites previous callbacks' return values 25 MC_POST_FAMILIAR_RENDER Function Args : (EntityFamiliar, RenderOffset [Vector]) Optional callback Args : FamiliarVariant Returning any value will have no effect on later callback executions. 26 MC_PRE_FAMILIAR_COLLISION Function Args : (EntityFamiliar, Collider [Entity], Low [bool]) Optional callback Args : FamiliarVariant The Low value is true, when the entity collided with the collider first. Its false if the collider collides first.Return true to ignore collision, false to collide but not execute internal code and nil to continue with internal code (example: taking damage on contact). This Callback can only be used ONCE across all mods! It is highly recommended to not use this Callback without defining a FamiliarVariant unless its absolutely nessesary! 27 MC_POST_NPC_INIT Function Args : (EntityNPC) Optional callback Args : EntityType Returning any value will have no effect on later callback executions. This Callback provides incomplete data in the EntityNPC. For example, the Position is always equal to Vector(0,0). 28 MC_POST_NPC_RENDER Function Args : (EntityNPC, RenderOffset [Vector]) Optional callback Args : EntityType Returning any value will have no effect on later callback executions. 29 MC_POST_NPC_DEATH Function Args : (EntityNPC) Optional callback Args : EntityType Gets called after the Death animation is played.Returning any value will have no effect on later callback executions. 30 MC_PRE_NPC_COLLISION Function Args : (EntityNPC, Collider [Entity], Low [bool]) Optional callback Args : EntityType The Low value is true, when the entity collided with the collider first. Its false if the collider collides first.Return true to ignore collision, false to collide but not execute internal code and nil to continue with internal code (example: taking damage on contact). This Callback can only be used ONCE across all mods! It is highly recommended to not use this Callback without defining an EntityType unless its absolutely nessesary! 31 MC_POST_PLAYER_UPDATE Function Args : (EntityPlayer) Optional callback Args : PlayerVariant* The optional parameter can be used to specify a Player Variant. 0 = Player, 1 = Co-Op-Baby Returning any value will have no effect on later callback executions. This callback is called 60 times per second 32 MC_POST_PLAYER_RENDER Function Args : (EntityPlayer, RenderOffset [Vector]) Optional callback Args : PlayerVariant* The optional parameter can be used to specify a Player Variant. 0 = Player, 1 = Co-Op-Baby Returning any value will have no effect on later callback executions. 33 MC_PRE_PLAYER_COLLISION Function Args : (EntityPlayer, Collider [Entity], Low [bool]) Optional callback Args : PlayerVariant* The Low value is true, when the entity collided with the collider first. Its false if the collider collides first.Return true to ignore collision, false to collide but not execute internal code and nil to continue with internal code (example: taking damage on contact). The optional parameter can be used to specify a Player Variant. 0 = Player, 1 = Co-Op-Baby This Callback can only be used ONCE across all mods! It is highly recommended to not use this Callback unless its absolutely nessesary! 34 MC_POST_PICKUP_INIT Function Args : (EntityPickup) Optional callback Args : PickupVariant Returning any value will have no effect on later callback executions. This Callback provides incomplete data in the EntityPickup. For example, the Position is always equal to Vector(0,0). 35 MC_POST_PICKUP_UPDATE Function Args : (EntityPickup) Optional callback Args : PickupVariant Returning any value will have no effect on later callback executions. This callback will be called on the 1st frame that the entity exists. It will only be called on the 0th frame, when you enter a room that already contains a spawned pickup. 36 MC_POST_PICKUP_RENDER Function Args : (EntityPickup, RenderOffset [Vector]) Optional callback Args : PickupVariant Returning any value will have no effect on later callback executions. 37 MC_POST_PICKUP_SELECTION Function Args : (EntityPickup, Variant [int], Subtype [int]) Called after a Pickup was choosen from a list of random pickups to be spawned.Return nil to continue with default game code. Return a table { Variant, Subtype } to override the specified values. This does also affect later executed callbacks.Returning a value that is not a table or nil will cause the game to crash. The last callback to return a valid return value wins out and overwrites previous callbacks' return values EntityPickup does contain the Type/variant of the pickup to spawn, but is otherwise an empty class with empty / zeroed values. This Callback is also called when entering a room that contains pickups that are already selected. It is also called when the player drops a card. Those facts make this callback useless to use for handling pickup pools. 38 MC_PRE_PICKUP_COLLISION Function Args : (EntityPickup, Collider [Entity], Low [bool]) Optional callback Args : PickupVariant The Low value is true, when the entity collided with the collider first. Its false if the collider collides first.Return true to ignore collision, false to collide but not execute internal code and nil to continue with internal code (example: taking damage on contact). This Callback can only be used ONCE across all mods! It is highly recommended to not use this Callback without defining an PickupVariant unless its absolutely nessesary! 39 MC_POST_TEAR_INIT Function Args : (EntityTear) Optional callback Args : TearVariant Returning any value will have no effect on later callback executions. This Callback provides incomplete data in the EntityTear. For example, the Position is always equal to Vector(0,0). 40 MC_POST_TEAR_UPDATE Function Args : (EntityTear) Optional callback Args : TearVariant Returning any value will have no effect on later callback executions. 41 MC_POST_TEAR_RENDER Function Args : (EntityTear, RenderOffset [Vector]) Optional callback Args : TearVariant Returning any value will have no effect on later callback executions. 42 MC_PRE_TEAR_COLLISION Function Args : (EntityTear, Collider [Entity], Low [bool]) Optional callback Args : TearVariant The Low value is true, when the entity collided with the collider first. Its false if the collider collides first.Return true to ignore collision, false to collide but not execute internal code and nil to continue with internal code (example: taking damage on contact). This Callback can only be used ONCE across all mods! It is highly recommended to not use this Callback without defining an PickupVariant unless its absolutely nessesary! 43 MC_POST_PROJECTILE_INIT Function Args : (EntityProjectile) Optional callback Args : ProjectileVariant Returning any value will have no effect on later callback executions. This Callback provides incomplete data in the EntityProjectile. For example, the Position is always equal to Vector(0,0). 44 MC_POST_PROJECTILE_UPDATE Function Args : (EntityProjectile) Optional callback Args : ProjectileVariant Returning any value will have no effect on later callback executions. 45 MC_POST_PROJECTILE_RENDER Function Args : (EntityProjectile, RenderOffset [Vector]) Optional callback Args : ProjectileVariant Returning any value will have no effect on later callback executions. 46 MC_PRE_PROJECTILE_COLLISION Function Args : (EntityProjectile, Collider [Entity], Low [bool]) Optional callback Args : ProjectileVariant The Low value is true, when the entity collided with the collider first. Its false if the collider collides first.Return true to ignore collision, false to collide but not execute internal code and nil to continue with internal code (example: taking damage on contact). This Callback can only be used ONCE across all mods! It is highly recommended to not use this Callback without defining an ProjectileVariant unless its absolutely nessesary! 47 MC_POST_LASER_INIT Function Args : (EntityLaser) Optional callback Args : LaserVariant Returning any value will have no effect on later callback executions. This Callback provides incomplete data in the EntityLaser. For example, the Position is always equal to Vector(0,0). 48 MC_POST_LASER_UPDATE Function Args : (EntityLaser) Optional callback Args : LaserVariant Returning any value will have no effect on later callback executions. 49 MC_POST_LASER_RENDER Function Args : (EntityLaser, RenderOffset [Vector]) Optional callback Args : LaserVariant Returning any value will have no effect on later callback executions. 50 MC_POST_KNIFE_INIT Function Args : (EntityKnife) Optional callback Args : KnifeSubType * Returning any value will have no effect on later callback executions. The optional parameter is a SubType and NOT a Variant! This Callback provides incomplete data in the EntityKnife. For example, the Position is always equal to Vector(0,0). 51 MC_POST_KNIFE_UPDATE Function Args : (EntityKnife) Optional callback Args : KnifeSubType * Returning any value will have no effect on later callback executions. The optional parameter is a SubType and NOT a Variant! 52 MC_POST_KNIFE_RENDER Function Args : (EntityKnife, RenderOffset [Vector]) Optional callback Args : KnifeSubType * Returning any value will have no effect on later callback executions. The optional parameter is a SubType and NOT a Variant! 53 MC_PRE_KNIFE_COLLISION Function Args : (EntityKnife, Collider [Entity], Low [bool]) Optional callback Args : KnifeSubType * The Low value is true, when the entity collided with the collider first. Its false if the collider collides first.Return true to ignore collision, false to collide but not execute internal code and nil to continue with internal code (example: taking damage on contact). The optional parameter is a SubType and NOT a Variant! This Callback can only be used ONCE across all mods! It is highly recommended to not use this Callback without defining an KnifeSubType unless its absolutely nessesary! 54 MC_POST_EFFECT_INIT Function Args : (EntityEffect) Optional callback Args : EffectVariant Returning any value will have no effect on later callback executions. This Callback provides incomplete data in the EntityEffect. For example, the Position is always equal to Vector(0,0). 55 MC_POST_EFFECT_UPDATE Function Args : (EntityEffect) Optional callback Args : EffectVariant Returning any value will have no effect on later callback executions. 56 MC_POST_EFFECT_RENDER Function Args : (EntityEffect, RenderOffset [Vector]) Optional callback Args : EffectVariant Returning any value will have no effect on later callback executions. 57 MC_POST_BOMB_INIT Function Args : (EntityBomb) Optional callback Args : BombVariant Returning any value will have no effect on later callback executions. This Callback provides incomplete data in the EntityBomb. For example, the Position is always equal to Vector(0,0). 58 MC_POST_BOMB_UPDATE Function Args : (EntityBomb) Optional callback Args : BombVariant Returning any value will have no effect on later callback executions. 59 MC_POST_BOMB_RENDER Function Args : (EntityBomb, Offset [Vector]) Optional callback Args : BombVariant Returning any value will have no effect on later callback executions. 60 MC_PRE_BOMB_COLLISION Function Args : (EntityBomb, Collider [Entity], Low [bool]) Optional callback Args : BombVariant The Low value is true, when the entity collided with the collider first. Its false if the collider collides first.Return true to ignore collision, false to collide but not execute internal code and nil to continue with internal code (example: taking damage on contact). This Callback can only be used ONCE across all mods! It is highly recommended to not use this Callback unless its absolutely nessesary! 61 MC_POST_FIRE_TEAR Function Args : (EntityTear) Called when the player fires a tear.It is not called for other weapons or tears fired with Incubus.Returning any value will have no effect on later callback executions. 62 MC_PRE_GET_COLLECTIBLE Function Args :(ItemPoolType, Decrease [bool], Seed [int]) This callback is called when the game needs to get a new random item from an item pool. You can return an integer from this callback in order to change the returned collectible type. It is not called for \"scripted\" drops (like Mr. Boom from Wrath) and manually spawned items.Returned values will not alter args of later executed callbacks.Returning a value that is not an integer or nil will cause the game to crash. The last callback to return a valid return value wins out and overwrites previous callbacks' return values 63 MC_POST_GET_COLLECTIBLE Function Args :(SelectedCollectible [CollectibleType], ItemPoolType, Decrease [bool], Seed [int]) This function is called right after MC_PRE_GET_COLLECTIBLE and determines the Collectible that will be spawned from the given ItemPoolType. You can return an integer from this callback in order to change the returned collectible type.Returned values will not update the \"SelectedCollectible\" arg of later executed callbacks.Returning a value that is not an integer or nil will cause the game to crash. The last callback to return a valid return value wins out and overwrites previous callbacks' return values 64 MC_GET_PILL_COLOR Function Args :(Seed [int]) This function is called, when the game is spawning a pill and needs to determine its PillColor. Return a PillColor to specify a Pillcolor that needs to be choosen. Return nothing to let it be handled by the game.Returned values will not alter the args of later executed callbacks.Returning a value that is not an integer or nil will cause the game to crash. The last callback to return a valid return value wins out and overwrites previous callbacks' return values 65 MC_GET_PILL_EFFECT Function Args : (SelectedPillEffect [PillEffect], PillColor) Called every frames when the game get the PillEffect of a pill. The effect of the pill can be choosed by returning the chosen PillEffect. The effect is applied to every pill of the same PillColor, not to a single pill.Returned values will not update the \"SelectedPillEffect\" arg of later executed callbacks.Returning a value that is not an integer or nil will cause the game to crash. The last callback to return a valid return value wins out and overwrites previous callbacks' return values This code turn \"Bad Trip\" pills into \"Balls of Steel\" pills. function mod:getPillEffect(pillEffect, pillColor) if pillEffect == PillEffect.PILLEFFECT_BAD_TRIP then return PillEffect.PILLEFFECT_BALLS_OF_STEEL end end mod:AddCallback(ModCallbacks.MC_GET_PILL_EFFECT, mod.getPillEffect) 66 MC_GET_TRINKET Function Args : (SelectedTrinket [TrinketType], RNG) Called when a TrinketType of a Trinket needs to be determined. A TrinketType can be returned to change the SelectedTrinket.Returned values will not update the \"SelectedTrinket\" arg of later executed callbacks.Returning a value that is not an integer or nil will cause the game to crash. The last callback to return a valid return value wins out and overwrites previous callbacks' return values 67 MC_POST_ENTITY_REMOVE Function Args : (Entity) Optional callback Args : EntityType Called whenever an Entity gets removed by the game. This includes deaths, kills, removals and even unloading an entity on room transition or ending a run.Returning any value will have no effect on later callback executions. 68 MC_POST_ENTITY_KILL Function Args : (Entity) Optional callback Args : EntityType Called right before a death animation is triggered for an Entity.Returning any value will have no effect on later callback executions. 69 MC_PRE_NPC_UPDATE Function Args : (EntityNPC) Optional callback Args : EntityType Return true if the internal AI of an NPC should be ignored, false or nil/nothing otherwise. This Callback can only be used ONCE across all mods! It is highly recommended to not use this Callback unless its absolutely nessesary! 70 MC_PRE_SPAWN_CLEAN_AWARD Function Args : (RNG, SpawnPosition [Vector]) This function is triggered in every room that can be cleared, including boss and angel rooms, and even when it normally would not spawn a reward.This Callback also handles special spawns like the spawning of Trapdoors after a boss is killed, therefore returning true here will also cancel those events.Return true if the spawn routine should be ignored, false or nil/nothing otherwise. This Callback can only be used ONCE across all mods! It is highly recommended to not use this Callback unless its absolutely nessesary! 71 MC_PRE_ROOM_ENTITY_SPAWN Function Args : (EntityType, Variant [int], SubType [int], GridIndex [int], Seed [int]) This is called when entering a new room, before spawning entities which are part of its layout. Grid entities will also trigger this callback and their type will the same as the type used by the gridspawn command. Because of this, effects are assigned the type 999 instead of 1000 in this callback. Optional: Return a table with new values { Type, Variant, Subtype }. Returning such a table will override any replacements that might naturally occur i.e. enemy variants.Returning any value will have no effect on later callback executions.","title":"ModCallbacks"},{"location":"enums/ModCallbacks/#enum-modcallbacks","text":"Execution order diagram:","title":"Enum \"ModCallbacks\""},{"location":"enums/ModCallbacks/#example-usage","text":"This code will print \"Hello World!\" for every NPC Update. If the NPC is of the type \"ENTITY_GAPER\", it will also print \"Gaper found\". 1 2 3 4 5 6 7 8 9 function mod : myFunction ( entity ) -- 'entity' contains a reference to the NPC print ( \"Hello World!\" ) end mod : AddCallback ( ModCallbacks . MC_NPC_UPDATE , mod . myFunction ) function mod : myFunction2 ( entity ) -- 'entity' contains a reference to the NPC print ( \"Gaper found!\" ) end mod : AddCallback ( ModCallbacks . MC_NPC_UPDATE , mod . myFunction2 , EntityType . ENTITY_GAPER ) DLC Value Enumerator Args Comment 0 MC_NPC_UPDATE Function Args : (EntityNPC) Optional callback Args : EntityType Called after an NPC is updated. Returning any value will have no effect on later callback executions. This callback will NOT fire when the NPC is playing the \"Appear\" animation. For example, when a Gaper spawns, it will fire on frame 1, then on frame 31 and onwards. 1 MC_POST_UPDATE Function Args : - Called after every game update. Returning any value will have no effect on later callback executions. This callback is called 30 times per second. It will not be called, when its paused (for example on screentransitions or on the pause menu). 2 MC_POST_RENDER Function Args : - Called after every game render (60 times per second). Returning any value will have no effect on later callback executions. It is highly recommended to only use this function when you want to render something. Its not recommended to use this function for things which are not frequently used or need constant recalculation. 3 MC_USE_ITEM Function Args : (CollectibleType, RNG) Optional callback Args : CollectibleType Called when a custom active item is used, after discharging it. The item RNG allows for the item's random events to be seeded. Return true to show the \"use item\" animation, otherwise false.Returning any value will have no effect on later callback executions. 4 MC_POST_PEFFECT_UPDATE Function Args : (EntityPlayer) Optional callback Args : PlayerType Called for each player, each frame, after the player evaluates the effects of items that must be constantly evaluated.Returning any value will have no effect on later callback executions. 5 MC_USE_CARD Function Args : (Card) Optional callback Args : Card Called when a card/rune is used.Returning any value will have no effect on later callback executions. 6 MC_FAMILIAR_UPDATE Function Args : (EntityFamiliar) Optional callback Args : FamiliarVariant Called every frame for each familiar. Returning any value will have no effect on later callback executions. 7 MC_FAMILIAR_INIT Function Args : (EntityFamiliar) Optional callback Args : FamiliarVariant Called just after a familiar is initialized. Returning any value will have no effect on later callback executions. This Callback provides incomplete data in the EntityFamiliar. For example, the Position is always equal to Vector(0,0). 8 MC_EVALUATE_CACHE Function Args : (EntityPlayer, CacheFlag) Optional callback Args : CacheFlag Called one or more times when a player's stats must be re-evaluated, such as after picking up an item, using certain pills or manually calling EvaluateItems() on an EntityPlayer. Returning any value will have no effect on later callback executions.Hint: Use this to let custom items change the player's stats, familiars, flying, weapons, etc. Items tell the game which stats they affect using cache values in items.xml. Then the callback should respond to the CacheFlag by setting the corresponding player stat. Other items' stat modifiers, multipliers, etc are applied before this callback is called. 9 MC_POST_PLAYER_INIT Function Args : (EntityPlayer) Optional callback Args : PlayerVariant* Called after a Player Entity is initialized. The optional parameter can be used to specify a Player Variant. 0 = Player, 1 = Co-Op-BabyReturning any value will have no effect on later callback executions. This Callback provides incomplete data in the EntityPlayer. For example, the Position is always equal to Vector(0,0). 10 MC_USE_PILL Function Args : (PillEffect) Optional callback Args : PillEffect Called when a pill is used.Returning any value will have no effect on later callback executions. 11 MC_ENTITY_TAKE_DMG Function Args : (TookDamage [Entity], DamageAmount [float], DamageFlags [int], DamageSource [EntityRef], DamageCountdownFrames [int]) Optional callback Args : EntityType Called before new damage is applied. If the entity has a DAMAGE_COUNTDOWN flag, it will ignore any other DAMAGE_COUNTDOWN hits for the duration specified. Return true or nil if the entity or player should sustain the damage, otherwise false to ignore it. If the entity is an EntityPlayer, the DamageAmount is the integer number of half-hearts of damage that the player will take. Otherwise, DamageAmount is a number of hit points. Returning any value besides nil will prevent later callbacks from being executed. 12 MC_POST_CURSE_EVAL Function Args : (Curses) Curses is a bitmask containing current curses. Called after the current Level applied it's curses. Returns the new curse bitmask. Use Isaac.GetCurseIdByName() to get the curseID.If a number is returned, it will be the \"Curses\" arg for later executed callbacks.Returning a value that is not an integer or nil will cause the game to crash.The last callback to return a valid return value wins out and overwrites previous callbacks' return values 13 MC_INPUT_ACTION Function Args : (Entity, InputHook, ButtonAction) Optional callback Args : InputHook It is called when game/game entities wants to read an action input. Entity can be nil if the input is not read from an entity class. The InputHook value can be used to determine if this callback was called through Input.IsActionTriggered(), Input.IsActionPressed(), or Input.GetActionValue() Return nil if you don't want to overwrite the input or value. The return value can be bool if it's a IS_ACTION_XXX hook or float if it's an GET_ACTION_VALUE hook. Float values should be in range of 0.0 and 1.0 Returning any value will have no effect on later callback executions. This callback is called roughly 1470 times a second. 14 MC_LEVEL_GENERATOR This callback doesn't work right now and will never be called by the game! 15 MC_POST_GAME_STARTED Function Args : (IsContinued [bool]) This function gets called when you start a game. The boolean value is true when you continue a run, false when you start a new one. This callback will be called after MC_POST_NEW_ROOM and after MC_POST_NEW_LEVEL. Returning any value will have no effect on later callback executions. local function onStart(_,bool) print(bool) end mod:AddCallback(ModCallbacks.MC_POST_GAME_STARTED, onStart) 16 MC_POST_GAME_END Function Args : (IsGameOver [bool]) This function gets called when the game over screen appears, or when the an ending starts playing. The boolean value is true when you died and got a game over, false when you won and got an ending. Returning any value will have no effect on later callback executions. local function onEnd(_,bool) print(bool) end mod:AddCallback(ModCallbacks.MC_POST_GAME_END, onEnd) 17 MC_PRE_GAME_EXIT Function Args : (ShouldSave [bool]) This function gets called when you quit a run. The boolean value is true when the game would normally create a continuable save, false when it wouldn't. Called twice when the game plays an ending. Returning any value will have no effect on later callback executions. local function onExit(_,bool) print(bool) end mod:AddCallback(ModCallbacks.MC_PRE_GAME_EXIT, onExit) 18 MC_POST_NEW_LEVEL Function Args : - This triggers after transitioning a level or stage. Its always called after MC_POST_NEW_ROOM. Returning any value will have no effect on later callback executions. 19 MC_POST_NEW_ROOM Function Args : - This triggers after entering a room. Returning any value will have no effect on later callback executions. 20 MC_GET_CARD Function Args : (RNG, Card, IncludePlayingCards [bool], IncludeRunes [bool], OnlyRunes [bool]) This callback is used for handling Card Pools. Because not all cards have the same chance to spawn, use RNG for a seeded random selection.You can use the boolean values as a filter for the selection. The return value determines, what Card will be spawned. Return nil to not replace the spawned card. Returned values will not update the \"Card\" arg of later executed callbacks.Returning a value that is not an integer or nil will cause the game to crash. The last callback to return a valid return value wins out and overwrites previous callbacks' return values 21 MC_GET_SHADER_PARAMS Function Args : (ShaderName [string]) Returns a table containing a key -> value pair for custom shader parameters. 22 MC_EXECUTE_CMD Function Args : (CMD [string], Parameters [string]) Returns a string separated by (newline) per output line CMD is the first word of the Console input. The parameters are the rest of the Input.This function is NOT called for default game commands like Spawn or Debug. Returning a string will print it to the console. Returning any value will have no effect on later callback executions. function mod.oncmd(_, command, args) print(command) print(args) end mod:AddCallback(ModCallbacks.MC_EXECUTE_CMD, mod.oncmd) -- executing command \"Test apple 1 Pear test\" prints -- Test -- apple 1 Pear test 23 MC_PRE_USE_ITEM Function Args : (CollectibleType, RNG) Optional callback Args : CollectibleType Called before an item is used. Return true to prevent the default code of an item to be triggered. This will still discharge the item. Returning any value besides nil will also prevent later callbacks from being executed. 24 MC_PRE_ENTITY_SPAWN Function Args : (EntityType, Variant [int], SubType [int], Position [Vector], Velocity [Vector], Spawner [Entity], Seed [int]) Called right before an entity is spawned. Optional: Return a table with new values { Type, Variant, Subtype, Seed } to override these values of the spawned entity.Returning a value that is not a table or nil will cause the game to crash. The last callback to return a valid return value wins out and overwrites previous callbacks' return values 25 MC_POST_FAMILIAR_RENDER Function Args : (EntityFamiliar, RenderOffset [Vector]) Optional callback Args : FamiliarVariant Returning any value will have no effect on later callback executions. 26 MC_PRE_FAMILIAR_COLLISION Function Args : (EntityFamiliar, Collider [Entity], Low [bool]) Optional callback Args : FamiliarVariant The Low value is true, when the entity collided with the collider first. Its false if the collider collides first.Return true to ignore collision, false to collide but not execute internal code and nil to continue with internal code (example: taking damage on contact). This Callback can only be used ONCE across all mods! It is highly recommended to not use this Callback without defining a FamiliarVariant unless its absolutely nessesary! 27 MC_POST_NPC_INIT Function Args : (EntityNPC) Optional callback Args : EntityType Returning any value will have no effect on later callback executions. This Callback provides incomplete data in the EntityNPC. For example, the Position is always equal to Vector(0,0). 28 MC_POST_NPC_RENDER Function Args : (EntityNPC, RenderOffset [Vector]) Optional callback Args : EntityType Returning any value will have no effect on later callback executions. 29 MC_POST_NPC_DEATH Function Args : (EntityNPC) Optional callback Args : EntityType Gets called after the Death animation is played.Returning any value will have no effect on later callback executions. 30 MC_PRE_NPC_COLLISION Function Args : (EntityNPC, Collider [Entity], Low [bool]) Optional callback Args : EntityType The Low value is true, when the entity collided with the collider first. Its false if the collider collides first.Return true to ignore collision, false to collide but not execute internal code and nil to continue with internal code (example: taking damage on contact). This Callback can only be used ONCE across all mods! It is highly recommended to not use this Callback without defining an EntityType unless its absolutely nessesary! 31 MC_POST_PLAYER_UPDATE Function Args : (EntityPlayer) Optional callback Args : PlayerVariant* The optional parameter can be used to specify a Player Variant. 0 = Player, 1 = Co-Op-Baby Returning any value will have no effect on later callback executions. This callback is called 60 times per second 32 MC_POST_PLAYER_RENDER Function Args : (EntityPlayer, RenderOffset [Vector]) Optional callback Args : PlayerVariant* The optional parameter can be used to specify a Player Variant. 0 = Player, 1 = Co-Op-Baby Returning any value will have no effect on later callback executions. 33 MC_PRE_PLAYER_COLLISION Function Args : (EntityPlayer, Collider [Entity], Low [bool]) Optional callback Args : PlayerVariant* The Low value is true, when the entity collided with the collider first. Its false if the collider collides first.Return true to ignore collision, false to collide but not execute internal code and nil to continue with internal code (example: taking damage on contact). The optional parameter can be used to specify a Player Variant. 0 = Player, 1 = Co-Op-Baby This Callback can only be used ONCE across all mods! It is highly recommended to not use this Callback unless its absolutely nessesary! 34 MC_POST_PICKUP_INIT Function Args : (EntityPickup) Optional callback Args : PickupVariant Returning any value will have no effect on later callback executions. This Callback provides incomplete data in the EntityPickup. For example, the Position is always equal to Vector(0,0). 35 MC_POST_PICKUP_UPDATE Function Args : (EntityPickup) Optional callback Args : PickupVariant Returning any value will have no effect on later callback executions. This callback will be called on the 1st frame that the entity exists. It will only be called on the 0th frame, when you enter a room that already contains a spawned pickup. 36 MC_POST_PICKUP_RENDER Function Args : (EntityPickup, RenderOffset [Vector]) Optional callback Args : PickupVariant Returning any value will have no effect on later callback executions. 37 MC_POST_PICKUP_SELECTION Function Args : (EntityPickup, Variant [int], Subtype [int]) Called after a Pickup was choosen from a list of random pickups to be spawned.Return nil to continue with default game code. Return a table { Variant, Subtype } to override the specified values. This does also affect later executed callbacks.Returning a value that is not a table or nil will cause the game to crash. The last callback to return a valid return value wins out and overwrites previous callbacks' return values EntityPickup does contain the Type/variant of the pickup to spawn, but is otherwise an empty class with empty / zeroed values. This Callback is also called when entering a room that contains pickups that are already selected. It is also called when the player drops a card. Those facts make this callback useless to use for handling pickup pools. 38 MC_PRE_PICKUP_COLLISION Function Args : (EntityPickup, Collider [Entity], Low [bool]) Optional callback Args : PickupVariant The Low value is true, when the entity collided with the collider first. Its false if the collider collides first.Return true to ignore collision, false to collide but not execute internal code and nil to continue with internal code (example: taking damage on contact). This Callback can only be used ONCE across all mods! It is highly recommended to not use this Callback without defining an PickupVariant unless its absolutely nessesary! 39 MC_POST_TEAR_INIT Function Args : (EntityTear) Optional callback Args : TearVariant Returning any value will have no effect on later callback executions. This Callback provides incomplete data in the EntityTear. For example, the Position is always equal to Vector(0,0). 40 MC_POST_TEAR_UPDATE Function Args : (EntityTear) Optional callback Args : TearVariant Returning any value will have no effect on later callback executions. 41 MC_POST_TEAR_RENDER Function Args : (EntityTear, RenderOffset [Vector]) Optional callback Args : TearVariant Returning any value will have no effect on later callback executions. 42 MC_PRE_TEAR_COLLISION Function Args : (EntityTear, Collider [Entity], Low [bool]) Optional callback Args : TearVariant The Low value is true, when the entity collided with the collider first. Its false if the collider collides first.Return true to ignore collision, false to collide but not execute internal code and nil to continue with internal code (example: taking damage on contact). This Callback can only be used ONCE across all mods! It is highly recommended to not use this Callback without defining an PickupVariant unless its absolutely nessesary! 43 MC_POST_PROJECTILE_INIT Function Args : (EntityProjectile) Optional callback Args : ProjectileVariant Returning any value will have no effect on later callback executions. This Callback provides incomplete data in the EntityProjectile. For example, the Position is always equal to Vector(0,0). 44 MC_POST_PROJECTILE_UPDATE Function Args : (EntityProjectile) Optional callback Args : ProjectileVariant Returning any value will have no effect on later callback executions. 45 MC_POST_PROJECTILE_RENDER Function Args : (EntityProjectile, RenderOffset [Vector]) Optional callback Args : ProjectileVariant Returning any value will have no effect on later callback executions. 46 MC_PRE_PROJECTILE_COLLISION Function Args : (EntityProjectile, Collider [Entity], Low [bool]) Optional callback Args : ProjectileVariant The Low value is true, when the entity collided with the collider first. Its false if the collider collides first.Return true to ignore collision, false to collide but not execute internal code and nil to continue with internal code (example: taking damage on contact). This Callback can only be used ONCE across all mods! It is highly recommended to not use this Callback without defining an ProjectileVariant unless its absolutely nessesary! 47 MC_POST_LASER_INIT Function Args : (EntityLaser) Optional callback Args : LaserVariant Returning any value will have no effect on later callback executions. This Callback provides incomplete data in the EntityLaser. For example, the Position is always equal to Vector(0,0). 48 MC_POST_LASER_UPDATE Function Args : (EntityLaser) Optional callback Args : LaserVariant Returning any value will have no effect on later callback executions. 49 MC_POST_LASER_RENDER Function Args : (EntityLaser, RenderOffset [Vector]) Optional callback Args : LaserVariant Returning any value will have no effect on later callback executions. 50 MC_POST_KNIFE_INIT Function Args : (EntityKnife) Optional callback Args : KnifeSubType * Returning any value will have no effect on later callback executions. The optional parameter is a SubType and NOT a Variant! This Callback provides incomplete data in the EntityKnife. For example, the Position is always equal to Vector(0,0). 51 MC_POST_KNIFE_UPDATE Function Args : (EntityKnife) Optional callback Args : KnifeSubType * Returning any value will have no effect on later callback executions. The optional parameter is a SubType and NOT a Variant! 52 MC_POST_KNIFE_RENDER Function Args : (EntityKnife, RenderOffset [Vector]) Optional callback Args : KnifeSubType * Returning any value will have no effect on later callback executions. The optional parameter is a SubType and NOT a Variant! 53 MC_PRE_KNIFE_COLLISION Function Args : (EntityKnife, Collider [Entity], Low [bool]) Optional callback Args : KnifeSubType * The Low value is true, when the entity collided with the collider first. Its false if the collider collides first.Return true to ignore collision, false to collide but not execute internal code and nil to continue with internal code (example: taking damage on contact). The optional parameter is a SubType and NOT a Variant! This Callback can only be used ONCE across all mods! It is highly recommended to not use this Callback without defining an KnifeSubType unless its absolutely nessesary! 54 MC_POST_EFFECT_INIT Function Args : (EntityEffect) Optional callback Args : EffectVariant Returning any value will have no effect on later callback executions. This Callback provides incomplete data in the EntityEffect. For example, the Position is always equal to Vector(0,0). 55 MC_POST_EFFECT_UPDATE Function Args : (EntityEffect) Optional callback Args : EffectVariant Returning any value will have no effect on later callback executions. 56 MC_POST_EFFECT_RENDER Function Args : (EntityEffect, RenderOffset [Vector]) Optional callback Args : EffectVariant Returning any value will have no effect on later callback executions. 57 MC_POST_BOMB_INIT Function Args : (EntityBomb) Optional callback Args : BombVariant Returning any value will have no effect on later callback executions. This Callback provides incomplete data in the EntityBomb. For example, the Position is always equal to Vector(0,0). 58 MC_POST_BOMB_UPDATE Function Args : (EntityBomb) Optional callback Args : BombVariant Returning any value will have no effect on later callback executions. 59 MC_POST_BOMB_RENDER Function Args : (EntityBomb, Offset [Vector]) Optional callback Args : BombVariant Returning any value will have no effect on later callback executions. 60 MC_PRE_BOMB_COLLISION Function Args : (EntityBomb, Collider [Entity], Low [bool]) Optional callback Args : BombVariant The Low value is true, when the entity collided with the collider first. Its false if the collider collides first.Return true to ignore collision, false to collide but not execute internal code and nil to continue with internal code (example: taking damage on contact). This Callback can only be used ONCE across all mods! It is highly recommended to not use this Callback unless its absolutely nessesary! 61 MC_POST_FIRE_TEAR Function Args : (EntityTear) Called when the player fires a tear.It is not called for other weapons or tears fired with Incubus.Returning any value will have no effect on later callback executions. 62 MC_PRE_GET_COLLECTIBLE Function Args :(ItemPoolType, Decrease [bool], Seed [int]) This callback is called when the game needs to get a new random item from an item pool. You can return an integer from this callback in order to change the returned collectible type. It is not called for \"scripted\" drops (like Mr. Boom from Wrath) and manually spawned items.Returned values will not alter args of later executed callbacks.Returning a value that is not an integer or nil will cause the game to crash. The last callback to return a valid return value wins out and overwrites previous callbacks' return values 63 MC_POST_GET_COLLECTIBLE Function Args :(SelectedCollectible [CollectibleType], ItemPoolType, Decrease [bool], Seed [int]) This function is called right after MC_PRE_GET_COLLECTIBLE and determines the Collectible that will be spawned from the given ItemPoolType. You can return an integer from this callback in order to change the returned collectible type.Returned values will not update the \"SelectedCollectible\" arg of later executed callbacks.Returning a value that is not an integer or nil will cause the game to crash. The last callback to return a valid return value wins out and overwrites previous callbacks' return values 64 MC_GET_PILL_COLOR Function Args :(Seed [int]) This function is called, when the game is spawning a pill and needs to determine its PillColor. Return a PillColor to specify a Pillcolor that needs to be choosen. Return nothing to let it be handled by the game.Returned values will not alter the args of later executed callbacks.Returning a value that is not an integer or nil will cause the game to crash. The last callback to return a valid return value wins out and overwrites previous callbacks' return values 65 MC_GET_PILL_EFFECT Function Args : (SelectedPillEffect [PillEffect], PillColor) Called every frames when the game get the PillEffect of a pill. The effect of the pill can be choosed by returning the chosen PillEffect. The effect is applied to every pill of the same PillColor, not to a single pill.Returned values will not update the \"SelectedPillEffect\" arg of later executed callbacks.Returning a value that is not an integer or nil will cause the game to crash. The last callback to return a valid return value wins out and overwrites previous callbacks' return values This code turn \"Bad Trip\" pills into \"Balls of Steel\" pills. function mod:getPillEffect(pillEffect, pillColor) if pillEffect == PillEffect.PILLEFFECT_BAD_TRIP then return PillEffect.PILLEFFECT_BALLS_OF_STEEL end end mod:AddCallback(ModCallbacks.MC_GET_PILL_EFFECT, mod.getPillEffect) 66 MC_GET_TRINKET Function Args : (SelectedTrinket [TrinketType], RNG) Called when a TrinketType of a Trinket needs to be determined. A TrinketType can be returned to change the SelectedTrinket.Returned values will not update the \"SelectedTrinket\" arg of later executed callbacks.Returning a value that is not an integer or nil will cause the game to crash. The last callback to return a valid return value wins out and overwrites previous callbacks' return values 67 MC_POST_ENTITY_REMOVE Function Args : (Entity) Optional callback Args : EntityType Called whenever an Entity gets removed by the game. This includes deaths, kills, removals and even unloading an entity on room transition or ending a run.Returning any value will have no effect on later callback executions. 68 MC_POST_ENTITY_KILL Function Args : (Entity) Optional callback Args : EntityType Called right before a death animation is triggered for an Entity.Returning any value will have no effect on later callback executions. 69 MC_PRE_NPC_UPDATE Function Args : (EntityNPC) Optional callback Args : EntityType Return true if the internal AI of an NPC should be ignored, false or nil/nothing otherwise. This Callback can only be used ONCE across all mods! It is highly recommended to not use this Callback unless its absolutely nessesary! 70 MC_PRE_SPAWN_CLEAN_AWARD Function Args : (RNG, SpawnPosition [Vector]) This function is triggered in every room that can be cleared, including boss and angel rooms, and even when it normally would not spawn a reward.This Callback also handles special spawns like the spawning of Trapdoors after a boss is killed, therefore returning true here will also cancel those events.Return true if the spawn routine should be ignored, false or nil/nothing otherwise. This Callback can only be used ONCE across all mods! It is highly recommended to not use this Callback unless its absolutely nessesary! 71 MC_PRE_ROOM_ENTITY_SPAWN Function Args : (EntityType, Variant [int], SubType [int], GridIndex [int], Seed [int]) This is called when entering a new room, before spawning entities which are part of its layout. Grid entities will also trigger this callback and their type will the same as the type used by the gridspawn command. Because of this, effects are assigned the type 999 instead of 1000 in this callback. Optional: Return a table with new values { Type, Variant, Subtype }. Returning such a table will override any replacements that might naturally occur i.e. enemy variants.Returning any value will have no effect on later callback executions.","title":"Example Usage"},{"location":"enums/Mouse/","text":"Enum \"Mouse\" \u2693\ufe0e DLC Value Enumerator Comment 0 MOUSE_BUTTON_1 1 MOUSE_BUTTON_2 2 MOUSE_BUTTON_3 3 MOUSE_BUTTON_4 4 MOUSE_BUTTON_5 5 MOUSE_BUTTON_6 6 MOUSE_BUTTON_7 7 MOUSE_BUTTON_8 7 MOUSE_BUTTON_LAST 0 MOUSE_BUTTON_LEFT 1 MOUSE_BUTTON_RIGHT 2 MOUSE_BUTTON_MIDDLE","title":"Mouse"},{"location":"enums/Mouse/#enum-mouse","text":"DLC Value Enumerator Comment 0 MOUSE_BUTTON_1 1 MOUSE_BUTTON_2 2 MOUSE_BUTTON_3 3 MOUSE_BUTTON_4 4 MOUSE_BUTTON_5 5 MOUSE_BUTTON_6 6 MOUSE_BUTTON_7 7 MOUSE_BUTTON_8 7 MOUSE_BUTTON_LAST 0 MOUSE_BUTTON_LEFT 1 MOUSE_BUTTON_RIGHT 2 MOUSE_BUTTON_MIDDLE","title":"Enum \"Mouse\""},{"location":"enums/Music/","text":"Enum \"Music\" \u2693\ufe0e DLC Value Enumerator Comment 0 MUSIC_NULL 1 MUSIC_BASEMENT 2 MUSIC_CAVES 3 MUSIC_DEPTHS 4 MUSIC_CELLAR 5 MUSIC_CATACOMBS 6 MUSIC_NECROPOLIS 7 MUSIC_WOMB_UTERO 8 MUSIC_GAME_OVER 9 MUSIC_BOSS 10 MUSIC_CATHEDRAL 11 MUSIC_SHEOL 12 MUSIC_DARK_ROOM 13 MUSIC_CHEST 14 MUSIC_BURNING_BASEMENT 15 MUSIC_FLOODED_CAVES 16 MUSIC_DANK_DEPTHS 17 MUSIC_SCARRED_WOMB 18 MUSIC_BLUE_WOMB 20 MUSIC_MOM_BOSS 21 MUSIC_MOMS_HEART_BOSS 22 MUSIC_ISAAC_BOSS 23 MUSIC_SATAN_BOSS 24 MUSIC_DARKROOM_BOSS 25 MUSIC_BLUEBABY_BOSS 26 MUSIC_BOSS2 27 MUSIC_HUSH_BOSS 28 MUSIC_ULTRAGREED_BOSS 30 MUSIC_LIBRARY_ROOM 31 MUSIC_SECRET_ROOM 33 MUSIC_DEVIL_ROOM 34 MUSIC_ANGEL_ROOM 35 MUSIC_SHOP_ROOM 36 MUSIC_ARCADE_ROOM 37 MUSIC_BOSS_OVER 38 MUSIC_CHALLENGE_FIGHT 60 MUSIC_CREDITS 61 MUSIC_TITLE 62 MUSIC_TITLE_AFTERBIRTH 81 MUSIC_JINGLE_BOSS 83 MUSIC_JINGLE_BOSS_OVER 84 MUSIC_JINGLE_HOLYROOM_FIND 85 MUSIC_JINGLE_SECRETROOM_FIND 87 MUSIC_JINGLE_TREASUREROOM_ENTRY_0 88 MUSIC_JINGLE_TREASUREROOM_ENTRY_1 89 MUSIC_JINGLE_TREASUREROOM_ENTRY_2 90 MUSIC_JINGLE_TREASUREROOM_ENTRY_3 91 MUSIC_JINGLE_CHALLENGE_ENTRY 92 MUSIC_JINGLE_CHALLENGE_OUTRO 93 MUSIC_JINGLE_GAME_OVER 94 MUSIC_JINGLE_DEVILROOM_FIND 95 MUSIC_JINGLE_GAME_START 96 MUSIC_JINGLE_NIGHTMARE 97 MUSIC_JINGLE_BOSS_OVER2 98 MUSIC_JINGLE_HUSH_OVER 100 MUSIC_INTRO_VOICEOVER 101 MUSIC_EPILOGUE_VOICEOVER 102 MUSIC_VOID 103 MUSIC_VOID_BOSS 104 NUM_MUSIC","title":"Music"},{"location":"enums/Music/#enum-music","text":"DLC Value Enumerator Comment 0 MUSIC_NULL 1 MUSIC_BASEMENT 2 MUSIC_CAVES 3 MUSIC_DEPTHS 4 MUSIC_CELLAR 5 MUSIC_CATACOMBS 6 MUSIC_NECROPOLIS 7 MUSIC_WOMB_UTERO 8 MUSIC_GAME_OVER 9 MUSIC_BOSS 10 MUSIC_CATHEDRAL 11 MUSIC_SHEOL 12 MUSIC_DARK_ROOM 13 MUSIC_CHEST 14 MUSIC_BURNING_BASEMENT 15 MUSIC_FLOODED_CAVES 16 MUSIC_DANK_DEPTHS 17 MUSIC_SCARRED_WOMB 18 MUSIC_BLUE_WOMB 20 MUSIC_MOM_BOSS 21 MUSIC_MOMS_HEART_BOSS 22 MUSIC_ISAAC_BOSS 23 MUSIC_SATAN_BOSS 24 MUSIC_DARKROOM_BOSS 25 MUSIC_BLUEBABY_BOSS 26 MUSIC_BOSS2 27 MUSIC_HUSH_BOSS 28 MUSIC_ULTRAGREED_BOSS 30 MUSIC_LIBRARY_ROOM 31 MUSIC_SECRET_ROOM 33 MUSIC_DEVIL_ROOM 34 MUSIC_ANGEL_ROOM 35 MUSIC_SHOP_ROOM 36 MUSIC_ARCADE_ROOM 37 MUSIC_BOSS_OVER 38 MUSIC_CHALLENGE_FIGHT 60 MUSIC_CREDITS 61 MUSIC_TITLE 62 MUSIC_TITLE_AFTERBIRTH 81 MUSIC_JINGLE_BOSS 83 MUSIC_JINGLE_BOSS_OVER 84 MUSIC_JINGLE_HOLYROOM_FIND 85 MUSIC_JINGLE_SECRETROOM_FIND 87 MUSIC_JINGLE_TREASUREROOM_ENTRY_0 88 MUSIC_JINGLE_TREASUREROOM_ENTRY_1 89 MUSIC_JINGLE_TREASUREROOM_ENTRY_2 90 MUSIC_JINGLE_TREASUREROOM_ENTRY_3 91 MUSIC_JINGLE_CHALLENGE_ENTRY 92 MUSIC_JINGLE_CHALLENGE_OUTRO 93 MUSIC_JINGLE_GAME_OVER 94 MUSIC_JINGLE_DEVILROOM_FIND 95 MUSIC_JINGLE_GAME_START 96 MUSIC_JINGLE_NIGHTMARE 97 MUSIC_JINGLE_BOSS_OVER2 98 MUSIC_JINGLE_HUSH_OVER 100 MUSIC_INTRO_VOICEOVER 101 MUSIC_EPILOGUE_VOICEOVER 102 MUSIC_VOID 103 MUSIC_VOID_BOSS 104 NUM_MUSIC","title":"Enum \"Music\""},{"location":"enums/NpcState/","text":"Enum \"NpcState\" \u2693\ufe0e DLC Value Enumerator Comment 0 STATE_INIT 1 STATE_APPEAR 2 STATE_APPEAR_CUSTOM 3 STATE_IDLE 4 STATE_MOVE 5 STATE_SUICIDE 6 STATE_JUMP 7 STATE_STOMP 8 STATE_ATTACK 9 STATE_ATTACK2 10 STATE_ATTACK3 11 STATE_ATTACK4 12 STATE_SUMMON 13 STATE_SUMMON2 14 STATE_SUMMON3 15 STATE_SPECIAL 16 STATE_UNIQUE_DEATH 17 STATE_DEATH","title":"NpcState"},{"location":"enums/NpcState/#enum-npcstate","text":"DLC Value Enumerator Comment 0 STATE_INIT 1 STATE_APPEAR 2 STATE_APPEAR_CUSTOM 3 STATE_IDLE 4 STATE_MOVE 5 STATE_SUICIDE 6 STATE_JUMP 7 STATE_STOMP 8 STATE_ATTACK 9 STATE_ATTACK2 10 STATE_ATTACK3 11 STATE_ATTACK4 12 STATE_SUMMON 13 STATE_SUMMON2 14 STATE_SUMMON3 15 STATE_SPECIAL 16 STATE_UNIQUE_DEATH 17 STATE_DEATH","title":"Enum \"NpcState\""},{"location":"enums/NullItemID/","text":"Enum \"NullItemID\" \u2693\ufe0e DLC Value Enumerator Comment -1 ID_NULL 0 ID_EXPLOSIVE_DIARRHEA 1 ID_PUBERTY 2 ID_I_FOUND_PILLS 3 ID_LORD_OF_THE_FLIES 4 ID_STATUE 5 ID_GUPPY 6 ID_WIZARD 7 ID_MAGDALENE 8 ID_CAIN 9 ID_JUDAS 10 ID_EVE 11 ID_AZAZEL 12 ID_EDEN 13 ID_SAMSON 14 ID_BLINDFOLD 15 ID_BLANKFACE 16 ID_CHRISTMAS 17 ID_PURITY_GLOW 18 ID_EMPTY_VESSEL 19 ID_MAW_MARK 20 ID_MUSHROOM 21 ID_ANGEL 22 ID_BOB 23 ID_DRUGS 24 ID_MOM 25 ID_BABY 26 ID_EVIL_ANGEL 27 ID_POOP 28 ID_RELAX 29 ID_OVERDOSE 30 ID_BOOMERANG 31 ID_MEGABLAST 32 ID_LAZARUS 33 ID_LAZARUS2 34 ID_LILITH 35 ID_IWATA 36 ID_APOLLYON 37 ID_BOOKWORM 38 ID_ADULTHOOD 39 ID_SPIDERBABY 40 NUM_NULLITEMS","title":"NullItemID"},{"location":"enums/NullItemID/#enum-nullitemid","text":"DLC Value Enumerator Comment -1 ID_NULL 0 ID_EXPLOSIVE_DIARRHEA 1 ID_PUBERTY 2 ID_I_FOUND_PILLS 3 ID_LORD_OF_THE_FLIES 4 ID_STATUE 5 ID_GUPPY 6 ID_WIZARD 7 ID_MAGDALENE 8 ID_CAIN 9 ID_JUDAS 10 ID_EVE 11 ID_AZAZEL 12 ID_EDEN 13 ID_SAMSON 14 ID_BLINDFOLD 15 ID_BLANKFACE 16 ID_CHRISTMAS 17 ID_PURITY_GLOW 18 ID_EMPTY_VESSEL 19 ID_MAW_MARK 20 ID_MUSHROOM 21 ID_ANGEL 22 ID_BOB 23 ID_DRUGS 24 ID_MOM 25 ID_BABY 26 ID_EVIL_ANGEL 27 ID_POOP 28 ID_RELAX 29 ID_OVERDOSE 30 ID_BOOMERANG 31 ID_MEGABLAST 32 ID_LAZARUS 33 ID_LAZARUS2 34 ID_LILITH 35 ID_IWATA 36 ID_APOLLYON 37 ID_BOOKWORM 38 ID_ADULTHOOD 39 ID_SPIDERBABY 40 NUM_NULLITEMS","title":"Enum \"NullItemID\""},{"location":"enums/PickupPrice/","text":"Enum \"PickupPrice\" \u2693\ufe0e DLC Value Enumerator Value Comment -1 PRICE_ONE_HEART -1 -2 PRICE_TWO_HEARTS -2 -3 PRICE_THREE_SOULHEARTS -3 -1000 PRICE_FREE -1000","title":"PickupPrice"},{"location":"enums/PickupPrice/#enum-pickupprice","text":"DLC Value Enumerator Value Comment -1 PRICE_ONE_HEART -1 -2 PRICE_TWO_HEARTS -2 -3 PRICE_THREE_SOULHEARTS -3 -1000 PRICE_FREE -1000","title":"Enum \"PickupPrice\""},{"location":"enums/PickupVariant/","text":"Enum \"PickupVariant\" \u2693\ufe0e DLC Value Enumerator Comment 0 PICKUP_NULL 10 PICKUP_HEART 20 PICKUP_COIN 30 PICKUP_KEY 40 PICKUP_BOMB 50 PICKUP_CHEST 51 PICKUP_BOMBCHEST 52 PICKUP_SPIKEDCHEST 53 PICKUP_ETERNALCHEST 54 PICKUP_MIMICCHEST 60 PICKUP_LOCKEDCHEST 69 PICKUP_GRAB_BAG 70 PICKUP_PILL 90 PICKUP_LIL_BATTERY 100 PICKUP_COLLECTIBLE 150 PICKUP_SHOPITEM 300 PICKUP_TAROTCARD 340 PICKUP_BIGCHEST 350 PICKUP_TRINKET 360 PICKUP_REDCHEST 370 PICKUP_TROPHY 380 PICKUP_BED","title":"PickupVariant"},{"location":"enums/PickupVariant/#enum-pickupvariant","text":"DLC Value Enumerator Comment 0 PICKUP_NULL 10 PICKUP_HEART 20 PICKUP_COIN 30 PICKUP_KEY 40 PICKUP_BOMB 50 PICKUP_CHEST 51 PICKUP_BOMBCHEST 52 PICKUP_SPIKEDCHEST 53 PICKUP_ETERNALCHEST 54 PICKUP_MIMICCHEST 60 PICKUP_LOCKEDCHEST 69 PICKUP_GRAB_BAG 70 PICKUP_PILL 90 PICKUP_LIL_BATTERY 100 PICKUP_COLLECTIBLE 150 PICKUP_SHOPITEM 300 PICKUP_TAROTCARD 340 PICKUP_BIGCHEST 350 PICKUP_TRINKET 360 PICKUP_REDCHEST 370 PICKUP_TROPHY 380 PICKUP_BED","title":"Enum \"PickupVariant\""},{"location":"enums/PillColor/","text":"Enum \"PillColor\" \u2693\ufe0e DLC Value Enumerator Comment 0 PILL_NULL 1 PILL_BLUE_BLUE 2 PILL_WHITE_BLUE 3 PILL_ORANGE_ORANGE 4 PILL_WHITE_WHITE 5 PILL_REDDOTS_RED 6 PILL_PINK_RED 7 PILL_BLUE_CADETBLUE 8 PILL_YELLOW_ORANGE 9 PILL_ORANGEDOTS_WHITE 10 PILL_WHITE_AZURE 11 PILL_BLACK_YELLOW 12 PILL_WHITE_BLACK 13 PILL_WHITE_YELLOW 14 NUM_PILLS","title":"PillColor"},{"location":"enums/PillColor/#enum-pillcolor","text":"DLC Value Enumerator Comment 0 PILL_NULL 1 PILL_BLUE_BLUE 2 PILL_WHITE_BLUE 3 PILL_ORANGE_ORANGE 4 PILL_WHITE_WHITE 5 PILL_REDDOTS_RED 6 PILL_PINK_RED 7 PILL_BLUE_CADETBLUE 8 PILL_YELLOW_ORANGE 9 PILL_ORANGEDOTS_WHITE 10 PILL_WHITE_AZURE 11 PILL_BLACK_YELLOW 12 PILL_WHITE_BLACK 13 PILL_WHITE_YELLOW 14 NUM_PILLS","title":"Enum \"PillColor\""},{"location":"enums/PillEffect/","text":"Enum \"PillEffect\" \u2693\ufe0e DLC Value Enumerator Comment -1 PILLEFFECT_NULL 0 PILLEFFECT_BAD_GAS 1 PILLEFFECT_BAD_TRIP 2 PILLEFFECT_BALLS_OF_STEEL 3 PILLEFFECT_BOMBS_ARE_KEYS 4 PILLEFFECT_EXPLOSIVE_DIARRHEA 5 PILLEFFECT_FULL_HEALTH 6 PILLEFFECT_HEALTH_DOWN 7 PILLEFFECT_HEALTH_UP 8 PILLEFFECT_I_FOUND_PILLS 9 PILLEFFECT_PUBERTY 10 PILLEFFECT_PRETTY_FLY 11 PILLEFFECT_RANGE_DOWN 12 PILLEFFECT_RANGE_UP 13 PILLEFFECT_SPEED_DOWN 14 PILLEFFECT_SPEED_UP 15 PILLEFFECT_TEARS_DOWN 16 PILLEFFECT_TEARS_UP 17 PILLEFFECT_LUCK_DOWN 18 PILLEFFECT_LUCK_UP 19 PILLEFFECT_TELEPILLS 20 PILLEFFECT_48HOUR_ENERGY 21 PILLEFFECT_HEMATEMESIS 22 PILLEFFECT_PARALYSIS 23 PILLEFFECT_SEE_FOREVER 24 PILLEFFECT_PHEROMONES 25 PILLEFFECT_AMNESIA 26 PILLEFFECT_LEMON_PARTY 27 PILLEFFECT_WIZARD 28 PILLEFFECT_PERCS 29 PILLEFFECT_ADDICTED 30 PILLEFFECT_RELAX 31 PILLEFFECT_QUESTIONMARK 32 PILLEFFECT_LARGER 33 PILLEFFECT_SMALLER 34 PILLEFFECT_INFESTED_EXCLAMATION 35 PILLEFFECT_INFESTED_QUESTION 36 PILLEFFECT_POWER 37 PILLEFFECT_RETRO_VISION 38 PILLEFFECT_FRIENDS_TILL_THE_END 39 PILLEFFECT_X_LAX 40 PILLEFFECT_SOMETHINGS_WRONG 41 PILLEFFECT_IM_DROWSY 42 PILLEFFECT_IM_EXCITED 43 PILLEFFECT_GULP 44 PILLEFFECT_HORF 45 PILLEFFECT_SUNSHINE 46 PILLEFFECT_VURP 47 NUM_PILL_EFFECTS","title":"PillEffect"},{"location":"enums/PillEffect/#enum-pilleffect","text":"DLC Value Enumerator Comment -1 PILLEFFECT_NULL 0 PILLEFFECT_BAD_GAS 1 PILLEFFECT_BAD_TRIP 2 PILLEFFECT_BALLS_OF_STEEL 3 PILLEFFECT_BOMBS_ARE_KEYS 4 PILLEFFECT_EXPLOSIVE_DIARRHEA 5 PILLEFFECT_FULL_HEALTH 6 PILLEFFECT_HEALTH_DOWN 7 PILLEFFECT_HEALTH_UP 8 PILLEFFECT_I_FOUND_PILLS 9 PILLEFFECT_PUBERTY 10 PILLEFFECT_PRETTY_FLY 11 PILLEFFECT_RANGE_DOWN 12 PILLEFFECT_RANGE_UP 13 PILLEFFECT_SPEED_DOWN 14 PILLEFFECT_SPEED_UP 15 PILLEFFECT_TEARS_DOWN 16 PILLEFFECT_TEARS_UP 17 PILLEFFECT_LUCK_DOWN 18 PILLEFFECT_LUCK_UP 19 PILLEFFECT_TELEPILLS 20 PILLEFFECT_48HOUR_ENERGY 21 PILLEFFECT_HEMATEMESIS 22 PILLEFFECT_PARALYSIS 23 PILLEFFECT_SEE_FOREVER 24 PILLEFFECT_PHEROMONES 25 PILLEFFECT_AMNESIA 26 PILLEFFECT_LEMON_PARTY 27 PILLEFFECT_WIZARD 28 PILLEFFECT_PERCS 29 PILLEFFECT_ADDICTED 30 PILLEFFECT_RELAX 31 PILLEFFECT_QUESTIONMARK 32 PILLEFFECT_LARGER 33 PILLEFFECT_SMALLER 34 PILLEFFECT_INFESTED_EXCLAMATION 35 PILLEFFECT_INFESTED_QUESTION 36 PILLEFFECT_POWER 37 PILLEFFECT_RETRO_VISION 38 PILLEFFECT_FRIENDS_TILL_THE_END 39 PILLEFFECT_X_LAX 40 PILLEFFECT_SOMETHINGS_WRONG 41 PILLEFFECT_IM_DROWSY 42 PILLEFFECT_IM_EXCITED 43 PILLEFFECT_GULP 44 PILLEFFECT_HORF 45 PILLEFFECT_SUNSHINE 46 PILLEFFECT_VURP 47 NUM_PILL_EFFECTS","title":"Enum \"PillEffect\""},{"location":"enums/PlayerForm/","text":"Enum \"PlayerForm\" \u2693\ufe0e DLC Value Enumerator Comment 0 PLAYERFORM_GUPPY 1 PLAYERFORM_LORD_OF_THE_FLIES 2 PLAYERFORM_MUSHROOM 3 PLAYERFORM_ANGEL 4 PLAYERFORM_BOB 5 PLAYERFORM_DRUGS 6 PLAYERFORM_MOM 7 PLAYERFORM_BABY 8 PLAYERFORM_EVIL_ANGEL 9 PLAYERFORM_POOP 10 PLAYERFORM_BOOK_WORM 11 PLAYERFORM_ADULTHOOD 12 PLAYERFORM_SPIDERBABY 13 NUM_PLAYER_FORMS","title":"PlayerForm"},{"location":"enums/PlayerForm/#enum-playerform","text":"DLC Value Enumerator Comment 0 PLAYERFORM_GUPPY 1 PLAYERFORM_LORD_OF_THE_FLIES 2 PLAYERFORM_MUSHROOM 3 PLAYERFORM_ANGEL 4 PLAYERFORM_BOB 5 PLAYERFORM_DRUGS 6 PLAYERFORM_MOM 7 PLAYERFORM_BABY 8 PLAYERFORM_EVIL_ANGEL 9 PLAYERFORM_POOP 10 PLAYERFORM_BOOK_WORM 11 PLAYERFORM_ADULTHOOD 12 PLAYERFORM_SPIDERBABY 13 NUM_PLAYER_FORMS","title":"Enum \"PlayerForm\""},{"location":"enums/PlayerItemState/","text":"Enum \"PlayerItemState\" \u2693\ufe0e DLC Value Enumerator Comment 0 ITEMSTATE_NORMAL 1 ITEMSTATE_CANDLE 2 ITEMSTATE_SHOOP_DA_WHOOP 3 ITEMSTATE_BOBS_ROTTEN_HEAD 4 ITEMSTATE_DOCTORS_REMOTE 5 ITEMSTATE_PONY 6 ITEMSTATE_NOTCHEDAXE 7 ITEMSTATE_BOOMERANG 8 ITEMSTATE_CANNON 9 ITEMSTATE_FRIENDBALL","title":"PlayerItemState"},{"location":"enums/PlayerItemState/#enum-playeritemstate","text":"DLC Value Enumerator Comment 0 ITEMSTATE_NORMAL 1 ITEMSTATE_CANDLE 2 ITEMSTATE_SHOOP_DA_WHOOP 3 ITEMSTATE_BOBS_ROTTEN_HEAD 4 ITEMSTATE_DOCTORS_REMOTE 5 ITEMSTATE_PONY 6 ITEMSTATE_NOTCHEDAXE 7 ITEMSTATE_BOOMERANG 8 ITEMSTATE_CANNON 9 ITEMSTATE_FRIENDBALL","title":"Enum \"PlayerItemState\""},{"location":"enums/PlayerSpriteLayer/","text":"Enum \"PlayerSpriteLayer\" \u2693\ufe0e DLC Value Enumerator Comment 0 SPRITE_GLOW 1 SPRITE_BODY 2 SPRITE_BODY0 3 SPRITE_BODY1 4 SPRITE_HEAD 5 SPRITE_HEAD0 6 SPRITE_HEAD1 7 SPRITE_HEAD2 8 SPRITE_HEAD3 9 SPRITE_HEAD4 10 SPRITE_HEAD5 11 SPRITE_TOP0 12 SPRITE_EXTRA 13 NUM_SPRITE_LAYERS","title":"PlayerSpriteLayer"},{"location":"enums/PlayerSpriteLayer/#enum-playerspritelayer","text":"DLC Value Enumerator Comment 0 SPRITE_GLOW 1 SPRITE_BODY 2 SPRITE_BODY0 3 SPRITE_BODY1 4 SPRITE_HEAD 5 SPRITE_HEAD0 6 SPRITE_HEAD1 7 SPRITE_HEAD2 8 SPRITE_HEAD3 9 SPRITE_HEAD4 10 SPRITE_HEAD5 11 SPRITE_TOP0 12 SPRITE_EXTRA 13 NUM_SPRITE_LAYERS","title":"Enum \"PlayerSpriteLayer\""},{"location":"enums/PlayerType/","text":"Enum \"PlayerType\" \u2693\ufe0e DLC Value Enumerator Comment 0 PLAYER_ISAAC 1 PLAYER_MAGDALENA 2 PLAYER_CAIN 3 PLAYER_JUDAS 4 PLAYER_XXX 5 PLAYER_EVE 6 PLAYER_SAMSON 7 PLAYER_AZAZEL 8 PLAYER_LAZARUS 9 PLAYER_EDEN 10 PLAYER_THELOST 11 PLAYER_LAZARUS2 12 PLAYER_BLACKJUDAS 13 PLAYER_LILITH 14 PLAYER_KEEPER 15 PLAYER_APOLLYON 16 PLAYER_THEFORGOTTEN 17 PLAYER_THESOUL 18 NUM_PLAYER_TYPES","title":"PlayerType"},{"location":"enums/PlayerType/#enum-playertype","text":"DLC Value Enumerator Comment 0 PLAYER_ISAAC 1 PLAYER_MAGDALENA 2 PLAYER_CAIN 3 PLAYER_JUDAS 4 PLAYER_XXX 5 PLAYER_EVE 6 PLAYER_SAMSON 7 PLAYER_AZAZEL 8 PLAYER_LAZARUS 9 PLAYER_EDEN 10 PLAYER_THELOST 11 PLAYER_LAZARUS2 12 PLAYER_BLACKJUDAS 13 PLAYER_LILITH 14 PLAYER_KEEPER 15 PLAYER_APOLLYON 16 PLAYER_THEFORGOTTEN 17 PLAYER_THESOUL 18 NUM_PLAYER_TYPES","title":"Enum \"PlayerType\""},{"location":"enums/ProjectileFlags/","text":"Enum \"ProjectileFlags\" \u2693\ufe0e DLC Value Enumerator Comment 1 SMART follow player 1<<1 EXPLODE explode on impact 1<<2 ACID_GREEN acid splat on impact 1<<3 GOO goo splat on impact 1<<4 GHOST slide through solid entities 1<<5 WIGGLE 1<<6 BOOMERANG come back 1<<7 HIT_ENEMIES can hit enemies 1<<8 ACID_RED blood acid 1<<9 GREED Greed projectiles have same effect as Greed enemy's bullets. 1<<10 RED_CREEP Bullet leaves a red creep 1<<11 ORBIT_CW Bullet orbits a point clockwise and passes through walls similar to Tiny Planet 1<<12 ORBIT_CCW Bullet orbits a point counter-clockwise and passes through walls similar to Tiny Planet 1<<13 NO_WALL_COLLIDE 1<<14 CREEP_BROWN Bullet leaves a brown creep 1<<15 FIRE Projectile was cast by a fireplace 1<<16 BURST Bursts into more bullets 1<<17 ANY_HEIGHT_ENTITY_HIT Bullets that can hit at any height 1<<18 CURVE_LEFT Bullets curve slightly on a circular path 1<<19 CURVE_RIGHT Bullets curve slightly on a circular path 1<<20 TURN_HORIZONTAL Bullets turn and go horizontally and increase in speed when they pass the const static uint64_t player on either side 1<<21 SINE_VELOCITY Bullet velocity varies over time as a function of a wave 1<<22 MEGA_WIGGLE Like wiggle worm but the wiggling increases in amplitude over time 1<<23 SAWTOOTH_WIGGLE Bullets travel on a sawtooth shaped path 1<<24 SLOWED 1<<25 TRIANGLE 1<<26 MOVE_TO_PARENT 1<<27 ACCELERATE 1<<28 DECELERATE 1<<29 BURST3 1<<30 CONTINUUM Bullets reappear from the opposite side as they leave the screen 1<<31 CANT_HIT_PLAYER 1<<32 CHANGE_FLAGS_AFTER_TIMEOUT \"Change\" flags will change the bullet's behavior after a timeout. change m_ProjectileFlags to m_TimeoutProjectileFlags. 1<<33 CHANGE_VELOCITY_AFTER_TIMEOUT","title":"ProjectileFlags"},{"location":"enums/ProjectileFlags/#enum-projectileflags","text":"DLC Value Enumerator Comment 1 SMART follow player 1<<1 EXPLODE explode on impact 1<<2 ACID_GREEN acid splat on impact 1<<3 GOO goo splat on impact 1<<4 GHOST slide through solid entities 1<<5 WIGGLE 1<<6 BOOMERANG come back 1<<7 HIT_ENEMIES can hit enemies 1<<8 ACID_RED blood acid 1<<9 GREED Greed projectiles have same effect as Greed enemy's bullets. 1<<10 RED_CREEP Bullet leaves a red creep 1<<11 ORBIT_CW Bullet orbits a point clockwise and passes through walls similar to Tiny Planet 1<<12 ORBIT_CCW Bullet orbits a point counter-clockwise and passes through walls similar to Tiny Planet 1<<13 NO_WALL_COLLIDE 1<<14 CREEP_BROWN Bullet leaves a brown creep 1<<15 FIRE Projectile was cast by a fireplace 1<<16 BURST Bursts into more bullets 1<<17 ANY_HEIGHT_ENTITY_HIT Bullets that can hit at any height 1<<18 CURVE_LEFT Bullets curve slightly on a circular path 1<<19 CURVE_RIGHT Bullets curve slightly on a circular path 1<<20 TURN_HORIZONTAL Bullets turn and go horizontally and increase in speed when they pass the const static uint64_t player on either side 1<<21 SINE_VELOCITY Bullet velocity varies over time as a function of a wave 1<<22 MEGA_WIGGLE Like wiggle worm but the wiggling increases in amplitude over time 1<<23 SAWTOOTH_WIGGLE Bullets travel on a sawtooth shaped path 1<<24 SLOWED 1<<25 TRIANGLE 1<<26 MOVE_TO_PARENT 1<<27 ACCELERATE 1<<28 DECELERATE 1<<29 BURST3 1<<30 CONTINUUM Bullets reappear from the opposite side as they leave the screen 1<<31 CANT_HIT_PLAYER 1<<32 CHANGE_FLAGS_AFTER_TIMEOUT \"Change\" flags will change the bullet's behavior after a timeout. change m_ProjectileFlags to m_TimeoutProjectileFlags. 1<<33 CHANGE_VELOCITY_AFTER_TIMEOUT","title":"Enum \"ProjectileFlags\""},{"location":"enums/ProjectileVariant/","text":"Enum \"ProjectileVariant\" \u2693\ufe0e DLC Value Enumerator Comment 0 PROJECTILE_NORMAL 1 PROJECTILE_BONE 2 PROJECTILE_FIRE 3 PROJECTILE_PUKE 4 PROJECTILE_TEAR 5 PROJECTILE_CORN 6 PROJECTILE_HUSH 7 PROJECTILE_COIN","title":"ProjectileVariant"},{"location":"enums/ProjectileVariant/#enum-projectilevariant","text":"DLC Value Enumerator Comment 0 PROJECTILE_NORMAL 1 PROJECTILE_BONE 2 PROJECTILE_FIRE 3 PROJECTILE_PUKE 4 PROJECTILE_TEAR 5 PROJECTILE_CORN 6 PROJECTILE_HUSH 7 PROJECTILE_COIN","title":"Enum \"ProjectileVariant\""},{"location":"enums/RoomShape/","text":"Enum \"RoomShape\" \u2693\ufe0e DLC Value Enumerator Preview Possible Gridindicies Comment 1 ROOMSHAPE_1x1 0-134 2 ROOMSHAPE_IH 0-134 3 ROOMSHAPE_IV 0-134 4 ROOMSHAPE_1x2 0-239 5 ROOMSHAPE_IIV 0-239 6 ROOMSHAPE_2x1 0-251 7 ROOMSHAPE_IIH 0-251 8 ROOMSHAPE_2x2 0-447 9 ROOMSHAPE_LTL 0-447 10 ROOMSHAPE_LTR 0-447 11 ROOMSHAPE_LBL 0-447 12 ROOMSHAPE_LBR 0-447 13 NUM_ROOMSHAPES","title":"RoomShape"},{"location":"enums/RoomShape/#enum-roomshape","text":"DLC Value Enumerator Preview Possible Gridindicies Comment 1 ROOMSHAPE_1x1 0-134 2 ROOMSHAPE_IH 0-134 3 ROOMSHAPE_IV 0-134 4 ROOMSHAPE_1x2 0-239 5 ROOMSHAPE_IIV 0-239 6 ROOMSHAPE_2x1 0-251 7 ROOMSHAPE_IIH 0-251 8 ROOMSHAPE_2x2 0-447 9 ROOMSHAPE_LTL 0-447 10 ROOMSHAPE_LTR 0-447 11 ROOMSHAPE_LBL 0-447 12 ROOMSHAPE_LBR 0-447 13 NUM_ROOMSHAPES","title":"Enum \"RoomShape\""},{"location":"enums/RoomType/","text":"Enum \"RoomType\" \u2693\ufe0e DLC Value Enumerator Icon Comment 0 ROOM_NULL 1 ROOM_DEFAULT 2 ROOM_SHOP 3 ROOM_ERROR 4 ROOM_TREASURE 5 ROOM_BOSS 6 ROOM_MINIBOSS 7 ROOM_SECRET 8 ROOM_SUPERSECRET 9 ROOM_ARCADE 10 ROOM_CURSE 11 ROOM_CHALLENGE Normal Challenge: Boss Challenge: 12 ROOM_LIBRARY 13 ROOM_SACRIFICE 14 ROOM_DEVIL 15 ROOM_ANGEL 16 ROOM_DUNGEON aka. Crawlspaces 17 ROOM_BOSSRUSH 18 ROOM_ISAACS 19 ROOM_BARREN 20 ROOM_CHEST 21 ROOM_DICE 22 ROOM_BLACK_MARKET 23 ROOM_GREED_EXIT 24 NUM_ROOMTYPES","title":"RoomType"},{"location":"enums/RoomType/#enum-roomtype","text":"DLC Value Enumerator Icon Comment 0 ROOM_NULL 1 ROOM_DEFAULT 2 ROOM_SHOP 3 ROOM_ERROR 4 ROOM_TREASURE 5 ROOM_BOSS 6 ROOM_MINIBOSS 7 ROOM_SECRET 8 ROOM_SUPERSECRET 9 ROOM_ARCADE 10 ROOM_CURSE 11 ROOM_CHALLENGE Normal Challenge: Boss Challenge: 12 ROOM_LIBRARY 13 ROOM_SACRIFICE 14 ROOM_DEVIL 15 ROOM_ANGEL 16 ROOM_DUNGEON aka. Crawlspaces 17 ROOM_BOSSRUSH 18 ROOM_ISAACS 19 ROOM_BARREN 20 ROOM_CHEST 21 ROOM_DICE 22 ROOM_BLACK_MARKET 23 ROOM_GREED_EXIT 24 NUM_ROOMTYPES","title":"Enum \"RoomType\""},{"location":"enums/SeedEffect/","text":"Enum \"SeedEffect\" \u2693\ufe0e DLC Value Enumerator Comment 0 SEED_NORMAL 1 SEED_MOVEMENT_PITCH 2 SEED_HEALTH_PITCH 3 SEED_CAMO_ISAAC 4 SEED_CAMO_ENEMIES 5 SEED_CAMO_PICKUPS 6 SEED_CAMO_EVERYTHING 7 SEED_FART_SOUNDS 8 SEED_OLD_TV 9 SEED_DYSLEXIA 10 SEED_NO_HUD 11 SEED_PICKUPS_SLIDE 12 SEED_CONTROLS_REVERSED 13 SEED_ALL_CHAMPIONS 14 SEED_INVISIBLE_ISAAC 15 SEED_INVISIBLE_ENEMIES 16 SEED_INFINITE_BASEMENT 17 SEED_ALWAYS_CHARMED 18 SEED_ALWAYS_CONFUSED 19 SEED_ALWAYS_AFRAID 20 SEED_ALWAYS_ALTERNATING_FEAR 21 SEED_ALWAYS_CHARMED_AND_AFRAID 23 SEED_EXTRA_BLOOD 24 SEED_POOP_TRAIL 25 SEED_PACIFIST 26 SEED_DAMAGE_WHEN_STOPPED 27 SEED_DAMAGE_ON_INTERVAL 28 SEED_DAMAGE_ON_TIME_LIMIT 29 SEED_PILLS_NEVER_IDENTIFY 30 SEED_MYSTERY_TAROT_CARDS 32 SEED_ENEMIES_RESPAWN 33 SEED_ITEMS_COST_MONEY 35 SEED_BIG_HEAD 36 SEED_SMALL_HEAD 37 SEED_BLACK_ISAAC 38 SEED_GLOWING_TEARS 41 SEED_SLOW_MUSIC 42 SEED_ULTRA_SLOW_MUSIC 43 SEED_FAST_MUSIC 44 SEED_ULTRA_FAST_MUSIC 46 SEED_NO_FACE 47 SEED_ISAAC_TAKES_HIGH_DAMAGE 48 SEED_ISAAC_TAKES_MASSIVE_DAMAGE 52 SEED_ICE_PHYSICS 53 SEED_KAPPA 54 SEED_CHRISTMAS 55 SEED_KIDS_MODE 56 SEED_PERMANENT_CURSE_DARKNESS 57 SEED_PERMANENT_CURSE_LABYRINTH 58 SEED_PERMANENT_CURSE_LOST 59 SEED_PERMANENT_CURSE_UNKNOWN 60 SEED_PERMANENT_CURSE_MAZE 61 SEED_PERMANENT_CURSE_BLIND 62 SEED_PERMANENT_CURSE_CURSED 63 SEED_PREVENT_CURSE_DARKNESS 64 SEED_PREVENT_CURSE_LABYRINTH 65 SEED_PREVENT_CURSE_LOST 66 SEED_PREVENT_CURSE_UNKNOWN 67 SEED_PREVENT_CURSE_MAZE 68 SEED_PREVENT_CURSE_BLIND 70 SEED_PREVENT_ALL_CURSES 71 SEED_NO_BOSS_ROOM_EXITS 72 SEED_PICKUPS_TIMEOUT 73 SEED_INVINCIBLE 74 SEED_SHOOT_IN_MOVEMENT_DIRECTION 75 SEED_SHOOT_OPPOSITE_MOVEMENT_DIRECTION 76 SEED_AXIS_ALIGNED_CONTROLS 77 NUM_SEEDS","title":"SeedEffect"},{"location":"enums/SeedEffect/#enum-seedeffect","text":"DLC Value Enumerator Comment 0 SEED_NORMAL 1 SEED_MOVEMENT_PITCH 2 SEED_HEALTH_PITCH 3 SEED_CAMO_ISAAC 4 SEED_CAMO_ENEMIES 5 SEED_CAMO_PICKUPS 6 SEED_CAMO_EVERYTHING 7 SEED_FART_SOUNDS 8 SEED_OLD_TV 9 SEED_DYSLEXIA 10 SEED_NO_HUD 11 SEED_PICKUPS_SLIDE 12 SEED_CONTROLS_REVERSED 13 SEED_ALL_CHAMPIONS 14 SEED_INVISIBLE_ISAAC 15 SEED_INVISIBLE_ENEMIES 16 SEED_INFINITE_BASEMENT 17 SEED_ALWAYS_CHARMED 18 SEED_ALWAYS_CONFUSED 19 SEED_ALWAYS_AFRAID 20 SEED_ALWAYS_ALTERNATING_FEAR 21 SEED_ALWAYS_CHARMED_AND_AFRAID 23 SEED_EXTRA_BLOOD 24 SEED_POOP_TRAIL 25 SEED_PACIFIST 26 SEED_DAMAGE_WHEN_STOPPED 27 SEED_DAMAGE_ON_INTERVAL 28 SEED_DAMAGE_ON_TIME_LIMIT 29 SEED_PILLS_NEVER_IDENTIFY 30 SEED_MYSTERY_TAROT_CARDS 32 SEED_ENEMIES_RESPAWN 33 SEED_ITEMS_COST_MONEY 35 SEED_BIG_HEAD 36 SEED_SMALL_HEAD 37 SEED_BLACK_ISAAC 38 SEED_GLOWING_TEARS 41 SEED_SLOW_MUSIC 42 SEED_ULTRA_SLOW_MUSIC 43 SEED_FAST_MUSIC 44 SEED_ULTRA_FAST_MUSIC 46 SEED_NO_FACE 47 SEED_ISAAC_TAKES_HIGH_DAMAGE 48 SEED_ISAAC_TAKES_MASSIVE_DAMAGE 52 SEED_ICE_PHYSICS 53 SEED_KAPPA 54 SEED_CHRISTMAS 55 SEED_KIDS_MODE 56 SEED_PERMANENT_CURSE_DARKNESS 57 SEED_PERMANENT_CURSE_LABYRINTH 58 SEED_PERMANENT_CURSE_LOST 59 SEED_PERMANENT_CURSE_UNKNOWN 60 SEED_PERMANENT_CURSE_MAZE 61 SEED_PERMANENT_CURSE_BLIND 62 SEED_PERMANENT_CURSE_CURSED 63 SEED_PREVENT_CURSE_DARKNESS 64 SEED_PREVENT_CURSE_LABYRINTH 65 SEED_PREVENT_CURSE_LOST 66 SEED_PREVENT_CURSE_UNKNOWN 67 SEED_PREVENT_CURSE_MAZE 68 SEED_PREVENT_CURSE_BLIND 70 SEED_PREVENT_ALL_CURSES 71 SEED_NO_BOSS_ROOM_EXITS 72 SEED_PICKUPS_TIMEOUT 73 SEED_INVINCIBLE 74 SEED_SHOOT_IN_MOVEMENT_DIRECTION 75 SEED_SHOOT_OPPOSITE_MOVEMENT_DIRECTION 76 SEED_AXIS_ALIGNED_CONTROLS 77 NUM_SEEDS","title":"Enum \"SeedEffect\""},{"location":"enums/SortingLayer/","text":"Enum \"SortingLayer\" \u2693\ufe0e DLC Value Enumerator Comment 0 SORTING_BACKGROUND Background level, behind grid entities (creep, pitfalls) 1 SORTING_DOOR Used by door Xray animation 2 SORTING_NORMAL Uses Y position to determine Z sorting","title":"SortingLayer"},{"location":"enums/SortingLayer/#enum-sortinglayer","text":"DLC Value Enumerator Comment 0 SORTING_BACKGROUND Background level, behind grid entities (creep, pitfalls) 1 SORTING_DOOR Used by door Xray animation 2 SORTING_NORMAL Uses Y position to determine Z sorting","title":"Enum \"SortingLayer\""},{"location":"enums/SoundEffect/","text":"Enum \"SoundEffect\" \u2693\ufe0e DLC Value Enumerator Comment 0 SOUND_NULL 1 SOUND_1UP 2 SOUND_BIRD_FLAP 3 SOUND_BLOBBY_WIGGLE 4 SOUND_INSECT_SWARM_LOOP 5 SOUND_BLOOD_LASER 7 SOUND_BLOOD_LASER_LARGE 8 SOUND_BOOK_PAGE_TURN_12 9 SOUND_BOSS_BUG_HISS 11 SOUND_BOSS_GURGLE_ROAR 12 SOUND_BOSS_LITE_GURGLE 13 SOUND_BOSS_LITE_HISS 14 SOUND_BOSS_LITE_ROAR 15 SOUND_BOSS_LITE_SLOPPY_ROAR 16 SOUND_BOSS_SPIT_BLOB_BARF 21 SOUND_CHEST_DROP 22 SOUND_CHEST_OPEN 23 SOUND_CHOIR_UNLOCK 24 SOUND_COIN_SLOT 25 SOUND_CUTE_GRUNT 28 SOUND_DEATH_BURST_LARGE 30 SOUND_DEATH_BURST_SMALL 33 SOUND_DEATH_CARD 34 SOUND_DEVIL_CARD 35 SOUND_DOOR_HEAVY_CLOSE 36 SOUND_DOOR_HEAVY_OPEN 37 SOUND_FART 38 SOUND_FETUS_JUMP 40 SOUND_FETUS_LAND 43 SOUND_FIREDEATH_HISS 44 SOUND_FLOATY_BABY_ROAR 48 SOUND_FORESTBOSS_STOMPS 51 SOUND_GASCAN_POUR 52 SOUND_HELLBOSS_GROUNDPOUND 54 SOUND_HOLY 55 SOUND_ISAAC_HURT_GRUNT 56 SOUND_CHILD_HAPPY_ROAR_SHORT 57 SOUND_CHILD_ANGRY_ROAR 58 SOUND_KEYPICKUP_GAUNTLET 59 SOUND_KEY_DROP0 60 SOUND_BABY_HURT 64 SOUND_MAGGOT_BURST_OUT 66 SOUND_MAGGOT_ENTER_GROUND 68 SOUND_MEAT_FEET_SLOW0 69 SOUND_MEAT_IMPACTS 72 SOUND_MEAT_JUMPS 77 SOUND_MEATY_DEATHS 82 SOUND_MOM_VOX_DEATH 84 SOUND_MOM_VOX_EVILLAUGH 85 SOUND_MOM_VOX_FILTERED_DEATH_1 86 SOUND_MOM_VOX_FILTERED_EVILLAUGH 87 SOUND_MOM_VOX_FILTERED_HURT 90 SOUND_MOM_VOX_FILTERED_ISAAC 93 SOUND_MOM_VOX_GRUNT 97 SOUND_MOM_VOX_HURT 101 SOUND_MOM_VOX_ISAAC 104 SOUND_MONSTER_GRUNT_0 106 SOUND_MONSTER_GRUNT_1 108 SOUND_MONSTER_GRUNT_2 112 SOUND_MONSTER_GRUNT_4 114 SOUND_MONSTER_GRUNT_5 115 SOUND_MONSTER_ROAR_0 116 SOUND_MONSTER_ROAR_1 117 SOUND_MONSTER_ROAR_2 118 SOUND_MONSTER_ROAR_3 119 SOUND_MONSTER_YELL_A 122 SOUND_MONSTER_YELL_B 128 SOUND_POWERUP1 129 SOUND_POWERUP2 130 SOUND_POWERUP3 132 SOUND_POWERUP_SPEWER 133 SOUND_REDLIGHTNING_ZAP 137 SOUND_ROCK_CRUMBLE 138 SOUND_POT_BREAK 139 SOUND_MUSHROOM_POOF 141 SOUND_ROCKET_BLAST_DEATH 142 SOUND_SMB_LARGE_CHEWS_4 143 SOUND_SCARED_WHIMPER 146 SOUND_SHAKEY_KID_ROAR 149 SOUND_SINK_DRAIN_GURGLE 150 SOUND_TEARIMPACTS 153 SOUND_TEARS_FIRE 156 SOUND_UNLOCK00 157 SOUND_VAMP_GULP 158 SOUND_WHEEZY_COUGH 159 SOUND_SPIDER_COUGH 165 SOUND_ZOMBIE_WALKER_KID 166 SOUND_ANIMAL_SQUISH 167 SOUND_ANGRY_GURGLE 169 SOUND_BAND_AID_PICK_UP 170 SOUND_BATTERYCHARGE 171 SOUND_BEEP 175 SOUND_BLOODBANK_SPAWN 178 SOUND_BLOODSHOOT 181 SOUND_BOIL_HATCH 182 SOUND_BOSS1_EXPLOSIONS 185 SOUND_BOSS2_BUBBLES 187 SOUND_BOSS2INTRO_ERRORBUZZ 190 SOUND_CASTLEPORTCULLIS 194 SOUND_CHARACTER_SELECT_LEFT 195 SOUND_CHARACTER_SELECT_RIGHT 197 SOUND_DERP 198 SOUND_DIMEDROP 199 SOUND_DIMEPICKUP 201 SOUND_FETUS_FEET 204 SOUND_GOLDENKEY 205 SOUND_GOOATTACH0 207 SOUND_GOODEATH 211 SOUND_HAND_LASERS 212 SOUND_HEARTIN 213 SOUND_HEARTOUT 214 SOUND_HELL_PORTAL1 215 SOUND_HELL_PORTAL2 217 SOUND_ISAACDIES 218 SOUND_ITEMRECHARGE 219 SOUND_KISS_LIPS1 221 SOUND_LEECH 224 SOUND_MAGGOTCHARGE 226 SOUND_MEATHEADSHOOT 229 SOUND_METAL_BLOCKBREAK 231 SOUND_NICKELDROP 232 SOUND_NICKELPICKUP 233 SOUND_PENNYDROP 234 SOUND_PENNYPICKUP 237 SOUND_PLOP 238 SOUND_SATAN_APPEAR 239 SOUND_SATAN_BLAST 240 SOUND_SATAN_CHARGE_UP 241 SOUND_SATAN_GROW 242 SOUND_SATAN_HURT 243 SOUND_SATAN_RISE_UP 245 SOUND_SATAN_SPIT 246 SOUND_SATAN_STOMP 249 SOUND_SCAMPER 252 SOUND_SHELLGAME 255 SOUND_SLOTSPAWN 258 SOUND_SPLATTER 261 SOUND_STEAM_HALFSEC 262 SOUND_STONESHOOT 263 SOUND_WEIRD_WORM_SPIT 265 SOUND_SUMMONSOUND 266 SOUND_SUPERHOLY 267 SOUND_THUMBS_DOWN 268 SOUND_THUMBSUP 269 SOUND_FIRE_BURN 270 SOUND_HAPPY_RAINBOW 300 SOUND_BOO_MAD 301 SOUND_FART_GURG 302 SOUND_FAT_GRUNT 303 SOUND_FAT_WIGGLE 304 SOUND_FIRE_RUSH 305 SOUND_GHOST_ROAR 306 SOUND_GHOST_SHOOT 307 SOUND_GRROOWL 308 SOUND_GURG_BARF 309 SOUND_INHALE 310 SOUND_LOW_INHALE 311 SOUND_MEGA_PUKE 312 SOUND_MOUTH_FULL 313 SOUND_MULTI_SCREAM 314 SOUND_SKIN_PULL 315 SOUND_WHISTLE 316 SOUND_DEVILROOM_DEAL 317 SOUND_SPIDER_SPIT_ROAR 318 SOUND_WORM_SPIT 319 SOUND_LITTLE_SPIT 320 SOUND_SATAN_ROOM_APPEAR 321 SOUND_HEARTBEAT 322 SOUND_HEARTBEAT_FASTER 323 SOUND_HEARTBEAT_FASTEST 324 SOUND_48_HR_ENERGY 325 SOUND_ALGIZ 326 SOUND_AMNESIA 327 SOUND_ANZUS 328 SOUND_BAD_GAS 329 SOUND_BAD_TRIP 330 SOUND_BALLS_OF_STEEL 331 SOUND_BERKANO 332 SOUND_BOMBS_ARE_KEY 333 SOUND_CARD_VS_HUMAN 334 SOUND_CHAOS_CARD 335 SOUND_CREDIT_CARD 336 SOUND_DAGAZ 337 SOUND_DEATH 338 SOUND_EHWAZ 339 SOUND_EXPLOSIVE_DIAH 340 SOUND_FULL_HP 341 SOUND_HAGALAZ 342 SOUND_HP_DOWN 343 SOUND_HP_UP 344 SOUND_HEMATEMISIS 345 SOUND_I_FOUND_PILLS 346 SOUND_JERA 347 SOUND_JOKER 348 SOUND_JUDGEMENT 349 SOUND_JUSTICE 350 SOUND_LEMON_PARTY 351 SOUND_LUCK_DOWN 352 SOUND_LUCK_UP 353 SOUND_PARALYSIS 354 SOUND_PERTHRO 355 SOUND_PHEROMONES 356 SOUND_PRETTY_FLY 357 SOUND_PUBERTY 358 SOUND_RUA_WIZ 359 SOUND_RANGE_DOWN 360 SOUND_RANGE_UP 361 SOUND_RULES_CARD 362 SOUND_SEE_4EVER 363 SOUND_SPEED_DOWN 364 SOUND_SPEED_UP 365 SOUND_STRENGTH 366 SOUND_SUICIDE_KING 367 SOUND_TEARS_DOWN 368 SOUND_TEARS_UP 369 SOUND_TELEPILLS 370 SOUND_TEMPERANCE 371 SOUND_THE_CHARIOT 372 SOUND_THE_DEVIL 373 SOUND_THE_EMPEROR 374 SOUND_EMPRESS 375 SOUND_FOOL 376 SOUND_HANGED_MAN 377 SOUND_HERMIT 378 SOUND_HIEROPHANT 379 SOUND_HIGHT_PRIESTESS 380 SOUND_THE_LOVERS 381 SOUND_MAGICIAN 382 SOUND_MOON 383 SOUND_STARS 384 SOUND_SUN 385 SOUND_TOWER 386 SOUND_WORLD 387 SOUND_TWO_CLUBS 388 SOUND_TWO_DIAMONDS 389 SOUND_TWO_HEARTS 390 SOUND_TWO_SPADES 391 SOUND_WHEEL_OF_FORTUNE 392 SOUND_RAGMAN_1 393 SOUND_RAGMAN_2 394 SOUND_RAGMAN_3 395 SOUND_RAGMAN_4 396 SOUND_FLUSH 397 SOUND_WATER_DROP 398 SOUND_WET_FEET 399 SOUND_ADDICTED 400 SOUND_DICE_SHARD 401 SOUND_EMERGENCY 402 SOUND_INFESTED_EXCL 403 SOUND_INFESTED_QUEST 404 SOUND_JAIL_CARD 405 SOUND_LARGER 406 SOUND_PERCS 407 SOUND_POWER_PILL 408 SOUND_QUESTION_MARK 409 SOUND_RELAX 410 SOUND_RETRO 411 SOUND_SMALL 412 SOUND_QQQ 413 SOUND_DANGLE_WHISTLE 414 SOUND_LITTLE_HORN_COUGH 415 SOUND_LITTLE_HORN_GRUNT_1 416 SOUND_LITTLE_HORN_GRUNT_2 417 SOUND_THE_FORSAKEN_LAUGH 418 SOUND_THE_FORSAKEN_SCREAM 419 SOUND_THE_STAIN_BURST 420 SOUND_BROWNIE_LAUGH 421 SOUND_HUSH_ROAR 422 SOUND_HUSH_GROWL 423 SOUND_HUSH_LOW_ROAR 424 SOUND_FRAIL_CHARGE 425 SOUND_HUSH_CHARGE 426 SOUND_MAW_OF_VOID 427 SOUND_ULTRA_GREED_COIN_DESTROY 428 SOUND_ULTRA_GREED_COINS_FALLING 429 SOUND_ULTRA_GREED_DEATH_SCREAM 430 SOUND_ULTRA_GREED_TURN_GOLD_1 431 SOUND_ULTRA_GREED_TURN_GOLD_2 432 SOUND_ULTRA_GREED_ROAR_1 433 SOUND_ULTRA_GREED_ROAR_2 434 SOUND_ULTRA_GREED_SPIT 435 SOUND_ULTRA_GREED_PULL_SLOT 436 SOUND_ULTRA_GREED_SLOT_SPIN_LOOP 437 SOUND_ULTRA_GREED_SLOT_STOP 438 SOUND_ULTRA_GREED_SLOT_WIN_LOOP_END 439 SOUND_ULTRA_GREED_SLOT_WIN_LOOP 440 SOUND_ULTRA_GREED_SPINNING 441 SOUND_DOG_BARK 442 SOUND_DOG_HOWELL 443 SOUND_X_LAX 444 SOUND_WRONG 445 SOUND_VURP 446 SOUND_SUNSHINE 447 SOUND_SPADES 448 SOUND_HORF 449 SOUND_HOLY_CARD 450 SOUND_HEARTS 451 SOUND_GULP 452 SOUND_FRIENDS 453 SOUND_EXCITED 454 SOUND_DROWSY 455 SOUND_DIAMONDS 456 SOUND_CLUBS 457 SOUND_BLACK_RUNE 458 SOUND_PING_PONG 459 SOUND_SPEWER 460 SOUND_MOM_FOOTSTEPS 461 SOUND_BONE_HEART 462 SOUND_BONE_SNAP 463 SOUND_SHOVEL_DROP 464 SOUND_SHOVEL_DIG 465 SOUND_GOLD_HEART 466 SOUND_GOLD_HEART_DROP 467 SOUND_BONE_DROP 468 SOUND_UNHOLY 469 SOUND_BUTTON_PRESS 470 SOUND_GOLDENBOMB 471 NUM_SOUND_EFFECTS","title":"SoundEffect"},{"location":"enums/SoundEffect/#enum-soundeffect","text":"DLC Value Enumerator Comment 0 SOUND_NULL 1 SOUND_1UP 2 SOUND_BIRD_FLAP 3 SOUND_BLOBBY_WIGGLE 4 SOUND_INSECT_SWARM_LOOP 5 SOUND_BLOOD_LASER 7 SOUND_BLOOD_LASER_LARGE 8 SOUND_BOOK_PAGE_TURN_12 9 SOUND_BOSS_BUG_HISS 11 SOUND_BOSS_GURGLE_ROAR 12 SOUND_BOSS_LITE_GURGLE 13 SOUND_BOSS_LITE_HISS 14 SOUND_BOSS_LITE_ROAR 15 SOUND_BOSS_LITE_SLOPPY_ROAR 16 SOUND_BOSS_SPIT_BLOB_BARF 21 SOUND_CHEST_DROP 22 SOUND_CHEST_OPEN 23 SOUND_CHOIR_UNLOCK 24 SOUND_COIN_SLOT 25 SOUND_CUTE_GRUNT 28 SOUND_DEATH_BURST_LARGE 30 SOUND_DEATH_BURST_SMALL 33 SOUND_DEATH_CARD 34 SOUND_DEVIL_CARD 35 SOUND_DOOR_HEAVY_CLOSE 36 SOUND_DOOR_HEAVY_OPEN 37 SOUND_FART 38 SOUND_FETUS_JUMP 40 SOUND_FETUS_LAND 43 SOUND_FIREDEATH_HISS 44 SOUND_FLOATY_BABY_ROAR 48 SOUND_FORESTBOSS_STOMPS 51 SOUND_GASCAN_POUR 52 SOUND_HELLBOSS_GROUNDPOUND 54 SOUND_HOLY 55 SOUND_ISAAC_HURT_GRUNT 56 SOUND_CHILD_HAPPY_ROAR_SHORT 57 SOUND_CHILD_ANGRY_ROAR 58 SOUND_KEYPICKUP_GAUNTLET 59 SOUND_KEY_DROP0 60 SOUND_BABY_HURT 64 SOUND_MAGGOT_BURST_OUT 66 SOUND_MAGGOT_ENTER_GROUND 68 SOUND_MEAT_FEET_SLOW0 69 SOUND_MEAT_IMPACTS 72 SOUND_MEAT_JUMPS 77 SOUND_MEATY_DEATHS 82 SOUND_MOM_VOX_DEATH 84 SOUND_MOM_VOX_EVILLAUGH 85 SOUND_MOM_VOX_FILTERED_DEATH_1 86 SOUND_MOM_VOX_FILTERED_EVILLAUGH 87 SOUND_MOM_VOX_FILTERED_HURT 90 SOUND_MOM_VOX_FILTERED_ISAAC 93 SOUND_MOM_VOX_GRUNT 97 SOUND_MOM_VOX_HURT 101 SOUND_MOM_VOX_ISAAC 104 SOUND_MONSTER_GRUNT_0 106 SOUND_MONSTER_GRUNT_1 108 SOUND_MONSTER_GRUNT_2 112 SOUND_MONSTER_GRUNT_4 114 SOUND_MONSTER_GRUNT_5 115 SOUND_MONSTER_ROAR_0 116 SOUND_MONSTER_ROAR_1 117 SOUND_MONSTER_ROAR_2 118 SOUND_MONSTER_ROAR_3 119 SOUND_MONSTER_YELL_A 122 SOUND_MONSTER_YELL_B 128 SOUND_POWERUP1 129 SOUND_POWERUP2 130 SOUND_POWERUP3 132 SOUND_POWERUP_SPEWER 133 SOUND_REDLIGHTNING_ZAP 137 SOUND_ROCK_CRUMBLE 138 SOUND_POT_BREAK 139 SOUND_MUSHROOM_POOF 141 SOUND_ROCKET_BLAST_DEATH 142 SOUND_SMB_LARGE_CHEWS_4 143 SOUND_SCARED_WHIMPER 146 SOUND_SHAKEY_KID_ROAR 149 SOUND_SINK_DRAIN_GURGLE 150 SOUND_TEARIMPACTS 153 SOUND_TEARS_FIRE 156 SOUND_UNLOCK00 157 SOUND_VAMP_GULP 158 SOUND_WHEEZY_COUGH 159 SOUND_SPIDER_COUGH 165 SOUND_ZOMBIE_WALKER_KID 166 SOUND_ANIMAL_SQUISH 167 SOUND_ANGRY_GURGLE 169 SOUND_BAND_AID_PICK_UP 170 SOUND_BATTERYCHARGE 171 SOUND_BEEP 175 SOUND_BLOODBANK_SPAWN 178 SOUND_BLOODSHOOT 181 SOUND_BOIL_HATCH 182 SOUND_BOSS1_EXPLOSIONS 185 SOUND_BOSS2_BUBBLES 187 SOUND_BOSS2INTRO_ERRORBUZZ 190 SOUND_CASTLEPORTCULLIS 194 SOUND_CHARACTER_SELECT_LEFT 195 SOUND_CHARACTER_SELECT_RIGHT 197 SOUND_DERP 198 SOUND_DIMEDROP 199 SOUND_DIMEPICKUP 201 SOUND_FETUS_FEET 204 SOUND_GOLDENKEY 205 SOUND_GOOATTACH0 207 SOUND_GOODEATH 211 SOUND_HAND_LASERS 212 SOUND_HEARTIN 213 SOUND_HEARTOUT 214 SOUND_HELL_PORTAL1 215 SOUND_HELL_PORTAL2 217 SOUND_ISAACDIES 218 SOUND_ITEMRECHARGE 219 SOUND_KISS_LIPS1 221 SOUND_LEECH 224 SOUND_MAGGOTCHARGE 226 SOUND_MEATHEADSHOOT 229 SOUND_METAL_BLOCKBREAK 231 SOUND_NICKELDROP 232 SOUND_NICKELPICKUP 233 SOUND_PENNYDROP 234 SOUND_PENNYPICKUP 237 SOUND_PLOP 238 SOUND_SATAN_APPEAR 239 SOUND_SATAN_BLAST 240 SOUND_SATAN_CHARGE_UP 241 SOUND_SATAN_GROW 242 SOUND_SATAN_HURT 243 SOUND_SATAN_RISE_UP 245 SOUND_SATAN_SPIT 246 SOUND_SATAN_STOMP 249 SOUND_SCAMPER 252 SOUND_SHELLGAME 255 SOUND_SLOTSPAWN 258 SOUND_SPLATTER 261 SOUND_STEAM_HALFSEC 262 SOUND_STONESHOOT 263 SOUND_WEIRD_WORM_SPIT 265 SOUND_SUMMONSOUND 266 SOUND_SUPERHOLY 267 SOUND_THUMBS_DOWN 268 SOUND_THUMBSUP 269 SOUND_FIRE_BURN 270 SOUND_HAPPY_RAINBOW 300 SOUND_BOO_MAD 301 SOUND_FART_GURG 302 SOUND_FAT_GRUNT 303 SOUND_FAT_WIGGLE 304 SOUND_FIRE_RUSH 305 SOUND_GHOST_ROAR 306 SOUND_GHOST_SHOOT 307 SOUND_GRROOWL 308 SOUND_GURG_BARF 309 SOUND_INHALE 310 SOUND_LOW_INHALE 311 SOUND_MEGA_PUKE 312 SOUND_MOUTH_FULL 313 SOUND_MULTI_SCREAM 314 SOUND_SKIN_PULL 315 SOUND_WHISTLE 316 SOUND_DEVILROOM_DEAL 317 SOUND_SPIDER_SPIT_ROAR 318 SOUND_WORM_SPIT 319 SOUND_LITTLE_SPIT 320 SOUND_SATAN_ROOM_APPEAR 321 SOUND_HEARTBEAT 322 SOUND_HEARTBEAT_FASTER 323 SOUND_HEARTBEAT_FASTEST 324 SOUND_48_HR_ENERGY 325 SOUND_ALGIZ 326 SOUND_AMNESIA 327 SOUND_ANZUS 328 SOUND_BAD_GAS 329 SOUND_BAD_TRIP 330 SOUND_BALLS_OF_STEEL 331 SOUND_BERKANO 332 SOUND_BOMBS_ARE_KEY 333 SOUND_CARD_VS_HUMAN 334 SOUND_CHAOS_CARD 335 SOUND_CREDIT_CARD 336 SOUND_DAGAZ 337 SOUND_DEATH 338 SOUND_EHWAZ 339 SOUND_EXPLOSIVE_DIAH 340 SOUND_FULL_HP 341 SOUND_HAGALAZ 342 SOUND_HP_DOWN 343 SOUND_HP_UP 344 SOUND_HEMATEMISIS 345 SOUND_I_FOUND_PILLS 346 SOUND_JERA 347 SOUND_JOKER 348 SOUND_JUDGEMENT 349 SOUND_JUSTICE 350 SOUND_LEMON_PARTY 351 SOUND_LUCK_DOWN 352 SOUND_LUCK_UP 353 SOUND_PARALYSIS 354 SOUND_PERTHRO 355 SOUND_PHEROMONES 356 SOUND_PRETTY_FLY 357 SOUND_PUBERTY 358 SOUND_RUA_WIZ 359 SOUND_RANGE_DOWN 360 SOUND_RANGE_UP 361 SOUND_RULES_CARD 362 SOUND_SEE_4EVER 363 SOUND_SPEED_DOWN 364 SOUND_SPEED_UP 365 SOUND_STRENGTH 366 SOUND_SUICIDE_KING 367 SOUND_TEARS_DOWN 368 SOUND_TEARS_UP 369 SOUND_TELEPILLS 370 SOUND_TEMPERANCE 371 SOUND_THE_CHARIOT 372 SOUND_THE_DEVIL 373 SOUND_THE_EMPEROR 374 SOUND_EMPRESS 375 SOUND_FOOL 376 SOUND_HANGED_MAN 377 SOUND_HERMIT 378 SOUND_HIEROPHANT 379 SOUND_HIGHT_PRIESTESS 380 SOUND_THE_LOVERS 381 SOUND_MAGICIAN 382 SOUND_MOON 383 SOUND_STARS 384 SOUND_SUN 385 SOUND_TOWER 386 SOUND_WORLD 387 SOUND_TWO_CLUBS 388 SOUND_TWO_DIAMONDS 389 SOUND_TWO_HEARTS 390 SOUND_TWO_SPADES 391 SOUND_WHEEL_OF_FORTUNE 392 SOUND_RAGMAN_1 393 SOUND_RAGMAN_2 394 SOUND_RAGMAN_3 395 SOUND_RAGMAN_4 396 SOUND_FLUSH 397 SOUND_WATER_DROP 398 SOUND_WET_FEET 399 SOUND_ADDICTED 400 SOUND_DICE_SHARD 401 SOUND_EMERGENCY 402 SOUND_INFESTED_EXCL 403 SOUND_INFESTED_QUEST 404 SOUND_JAIL_CARD 405 SOUND_LARGER 406 SOUND_PERCS 407 SOUND_POWER_PILL 408 SOUND_QUESTION_MARK 409 SOUND_RELAX 410 SOUND_RETRO 411 SOUND_SMALL 412 SOUND_QQQ 413 SOUND_DANGLE_WHISTLE 414 SOUND_LITTLE_HORN_COUGH 415 SOUND_LITTLE_HORN_GRUNT_1 416 SOUND_LITTLE_HORN_GRUNT_2 417 SOUND_THE_FORSAKEN_LAUGH 418 SOUND_THE_FORSAKEN_SCREAM 419 SOUND_THE_STAIN_BURST 420 SOUND_BROWNIE_LAUGH 421 SOUND_HUSH_ROAR 422 SOUND_HUSH_GROWL 423 SOUND_HUSH_LOW_ROAR 424 SOUND_FRAIL_CHARGE 425 SOUND_HUSH_CHARGE 426 SOUND_MAW_OF_VOID 427 SOUND_ULTRA_GREED_COIN_DESTROY 428 SOUND_ULTRA_GREED_COINS_FALLING 429 SOUND_ULTRA_GREED_DEATH_SCREAM 430 SOUND_ULTRA_GREED_TURN_GOLD_1 431 SOUND_ULTRA_GREED_TURN_GOLD_2 432 SOUND_ULTRA_GREED_ROAR_1 433 SOUND_ULTRA_GREED_ROAR_2 434 SOUND_ULTRA_GREED_SPIT 435 SOUND_ULTRA_GREED_PULL_SLOT 436 SOUND_ULTRA_GREED_SLOT_SPIN_LOOP 437 SOUND_ULTRA_GREED_SLOT_STOP 438 SOUND_ULTRA_GREED_SLOT_WIN_LOOP_END 439 SOUND_ULTRA_GREED_SLOT_WIN_LOOP 440 SOUND_ULTRA_GREED_SPINNING 441 SOUND_DOG_BARK 442 SOUND_DOG_HOWELL 443 SOUND_X_LAX 444 SOUND_WRONG 445 SOUND_VURP 446 SOUND_SUNSHINE 447 SOUND_SPADES 448 SOUND_HORF 449 SOUND_HOLY_CARD 450 SOUND_HEARTS 451 SOUND_GULP 452 SOUND_FRIENDS 453 SOUND_EXCITED 454 SOUND_DROWSY 455 SOUND_DIAMONDS 456 SOUND_CLUBS 457 SOUND_BLACK_RUNE 458 SOUND_PING_PONG 459 SOUND_SPEWER 460 SOUND_MOM_FOOTSTEPS 461 SOUND_BONE_HEART 462 SOUND_BONE_SNAP 463 SOUND_SHOVEL_DROP 464 SOUND_SHOVEL_DIG 465 SOUND_GOLD_HEART 466 SOUND_GOLD_HEART_DROP 467 SOUND_BONE_DROP 468 SOUND_UNHOLY 469 SOUND_BUTTON_PRESS 470 SOUND_GOLDENBOMB 471 NUM_SOUND_EFFECTS","title":"Enum \"SoundEffect\""},{"location":"enums/StageType/","text":"Enum \"StageType\" \u2693\ufe0e DLC Value Enumerator Comment 0 STAGETYPE_ORIGINAL 1 STAGETYPE_WOTL 2 STAGETYPE_AFTERBIRTH 3 STAGETYPE_GREEDMODE","title":"StageType"},{"location":"enums/StageType/#enum-stagetype","text":"DLC Value Enumerator Comment 0 STAGETYPE_ORIGINAL 1 STAGETYPE_WOTL 2 STAGETYPE_AFTERBIRTH 3 STAGETYPE_GREEDMODE","title":"Enum \"StageType\""},{"location":"enums/TearFlags/","text":"Enum \"TearFlags\" \u2693\ufe0e DLC Value Enumerator Comment 0 TEAR_NORMAL Normal Tear 1 TEAR_SPECTRAL Ouija board type tear (goes thru obstacles) 1<<1 TEAR_PIERCING Cupid's arrow type tear (goes thru enemy) 1<<2 TEAR_HOMING Spoon bender type tear (homes to enemy) 1<<3 TEAR_SLOW Spider bite type tear (slows on contact) 1<<4 TEAR_POISON Common cold type tear (poisons on contact) 1<<5 TEAR_FREEZE Mom's contact type tear (freezes on contact) 1<<6 TEAR_SPLIT Parasite type tear (splits on collision) 1<<7 TEAR_GROW Lump of coal type tear (grows by range) 1<<8 TEAR_BOMBERANG My reflection type tear (returns back) 1<<9 TEAR_PERSISTENT Polyphemus type tear (Damages the entity and if the damage is more then enemy hp it continues with less damage) 1<<10 TEAR_WIGGLE Wiggle worm type tear (wiggles) 1<<11 TEAR_MIGAN Migan type tear (creates fly on hit) 1<<12 TEAR_EXPLOSIVE IPECAC type tear (explodes on hit) 1<<13 TEAR_CHARM Mom's Eyeshadow tear 1<<14 TEAR_CONFUSION Iron Bar tear 1<<15 TEAR_HP_DROP These tears cause enemy to drop hearts if killed (33% chance) 1<<16 TEAR_ORBIT Used for Little Planet (orbit arounds the player) 1<<17 TEAR_WAIT Anti gravity type tear (floats in place for some time before finally moving) (unset after first update) 1<<18 TEAR_QUADSPLIT Splits into 4 smaller tears if it hits the ground 1<<19 TEAR_BOUNCE Bounce off of enemies, walls, rocks (Higher priority than PERSISTENT & PIERCING) 1<<20 TEAR_FEAR Mom's Perfume type tear of fear (fear on contact) 1<<21 TEAR_SHRINK Proptosis tears start large and shrink 1<<22 TEAR_BURN Fire Mind tears cause Burn effect on enemies 1<<23 TEAR_ATTRACTOR Attracts enemies and pickups 1<<24 TEAR_KNOCKBACK Tear impact pushes enemies back further 1<<25 TEAR_PULSE Makes the tear pulse 1<<26 TEAR_SPIRAL Makes the tear path spiral 1<<27 TEAR_FLAT Makes the tear oval in the direction of travel 1<<28 TEAR_SAD_BOMB Used by Bombs (Sad Bomb) 1<<29 TEAR_BUTT_BOMB Used by Bombs (Butt Bomb) 1<<30 TEAR_GLITTER_BOMB Used by Bombs (Glitter Bomb) 1<<31 TEAR_SQUARE Used for Hook Worm 1<<32 TEAR_GLOW Used for GodHead (they will have a glow around them) 1<<33 TEAR_GISH Used for Gish player tears (to color enemy black on slowing) 1<<34 TEAR_SCATTER_BOMB Used for Scatter bombs 1<<35 TEAR_STICKY Used for Sticky bombs and Explosivo tears 1<<36 TEAR_CONTINUUM Tears loop around the screen 1<<37 TEAR_LIGHT_FROM_HEAVEN Create damaging light beam on hit 1<<38 TEAR_COIN_DROP Used by Bumbo, spawns a coin when tear hits 1<<39 TEAR_BLACK_HP_DROP Enemy drops a black hp when dies 1<<40 TEAR_TRACTOR_BEAM Tear with this flag will follow parent player's beam 1<<41 TEAR_GODS_FLESH God's flesh flag to minimize enemies 1<<42 TEAR_GREED_COIN Greed coin tears that has a chance to generate a coin when hit 1<<43 TEAR_MYSTERIOUS_LIQUID_CREEP 1<<44 TEAR_BIG_SPIRAL Ouroboros Worm, big radius oscilating tears 1<<45 TEAR_PERMANENT_CONFUSION Glaucoma tears, permanently confuses enemies 1<<46 TEAR_BOOGER Booger tears, stick and do damage over time 1<<47 TEAR_EGG Egg tears, leave creep and spawns spiders or flies 1<<48 TEAR_ACID Sulfuric Acid tears, can break grid entities 1<<49 TEAR_BONE Bone tears, splits in 2 1<<50 TEAR_BELIAL Belial tears, piecing tears gets double damage + homing 1<<51 TEAR_MIDAS Midas touch tears 1<<52 TEAR_NEEDLE Needle tears 1<<53 TEAR_JACOBS Jacobs ladder tears 1<<54 TEAR_HORN Little Horn tears 1<<55 TEAR_LASER Technology Zero 1<<56 TEAR_POP Pop! 1<<57 TEAR_ABSORB Lachryphagy 1<<58 TEAR_LASERSHOT Trisagion, generates a laser on top of the tear 1<<59 TEAR_HYDROBOUNCE Flat Stone 1<<60 TEAR_LUDOVICO Used as a weapon for Ludovico Technique","title":"TearFlags"},{"location":"enums/TearFlags/#enum-tearflags","text":"DLC Value Enumerator Comment 0 TEAR_NORMAL Normal Tear 1 TEAR_SPECTRAL Ouija board type tear (goes thru obstacles) 1<<1 TEAR_PIERCING Cupid's arrow type tear (goes thru enemy) 1<<2 TEAR_HOMING Spoon bender type tear (homes to enemy) 1<<3 TEAR_SLOW Spider bite type tear (slows on contact) 1<<4 TEAR_POISON Common cold type tear (poisons on contact) 1<<5 TEAR_FREEZE Mom's contact type tear (freezes on contact) 1<<6 TEAR_SPLIT Parasite type tear (splits on collision) 1<<7 TEAR_GROW Lump of coal type tear (grows by range) 1<<8 TEAR_BOMBERANG My reflection type tear (returns back) 1<<9 TEAR_PERSISTENT Polyphemus type tear (Damages the entity and if the damage is more then enemy hp it continues with less damage) 1<<10 TEAR_WIGGLE Wiggle worm type tear (wiggles) 1<<11 TEAR_MIGAN Migan type tear (creates fly on hit) 1<<12 TEAR_EXPLOSIVE IPECAC type tear (explodes on hit) 1<<13 TEAR_CHARM Mom's Eyeshadow tear 1<<14 TEAR_CONFUSION Iron Bar tear 1<<15 TEAR_HP_DROP These tears cause enemy to drop hearts if killed (33% chance) 1<<16 TEAR_ORBIT Used for Little Planet (orbit arounds the player) 1<<17 TEAR_WAIT Anti gravity type tear (floats in place for some time before finally moving) (unset after first update) 1<<18 TEAR_QUADSPLIT Splits into 4 smaller tears if it hits the ground 1<<19 TEAR_BOUNCE Bounce off of enemies, walls, rocks (Higher priority than PERSISTENT & PIERCING) 1<<20 TEAR_FEAR Mom's Perfume type tear of fear (fear on contact) 1<<21 TEAR_SHRINK Proptosis tears start large and shrink 1<<22 TEAR_BURN Fire Mind tears cause Burn effect on enemies 1<<23 TEAR_ATTRACTOR Attracts enemies and pickups 1<<24 TEAR_KNOCKBACK Tear impact pushes enemies back further 1<<25 TEAR_PULSE Makes the tear pulse 1<<26 TEAR_SPIRAL Makes the tear path spiral 1<<27 TEAR_FLAT Makes the tear oval in the direction of travel 1<<28 TEAR_SAD_BOMB Used by Bombs (Sad Bomb) 1<<29 TEAR_BUTT_BOMB Used by Bombs (Butt Bomb) 1<<30 TEAR_GLITTER_BOMB Used by Bombs (Glitter Bomb) 1<<31 TEAR_SQUARE Used for Hook Worm 1<<32 TEAR_GLOW Used for GodHead (they will have a glow around them) 1<<33 TEAR_GISH Used for Gish player tears (to color enemy black on slowing) 1<<34 TEAR_SCATTER_BOMB Used for Scatter bombs 1<<35 TEAR_STICKY Used for Sticky bombs and Explosivo tears 1<<36 TEAR_CONTINUUM Tears loop around the screen 1<<37 TEAR_LIGHT_FROM_HEAVEN Create damaging light beam on hit 1<<38 TEAR_COIN_DROP Used by Bumbo, spawns a coin when tear hits 1<<39 TEAR_BLACK_HP_DROP Enemy drops a black hp when dies 1<<40 TEAR_TRACTOR_BEAM Tear with this flag will follow parent player's beam 1<<41 TEAR_GODS_FLESH God's flesh flag to minimize enemies 1<<42 TEAR_GREED_COIN Greed coin tears that has a chance to generate a coin when hit 1<<43 TEAR_MYSTERIOUS_LIQUID_CREEP 1<<44 TEAR_BIG_SPIRAL Ouroboros Worm, big radius oscilating tears 1<<45 TEAR_PERMANENT_CONFUSION Glaucoma tears, permanently confuses enemies 1<<46 TEAR_BOOGER Booger tears, stick and do damage over time 1<<47 TEAR_EGG Egg tears, leave creep and spawns spiders or flies 1<<48 TEAR_ACID Sulfuric Acid tears, can break grid entities 1<<49 TEAR_BONE Bone tears, splits in 2 1<<50 TEAR_BELIAL Belial tears, piecing tears gets double damage + homing 1<<51 TEAR_MIDAS Midas touch tears 1<<52 TEAR_NEEDLE Needle tears 1<<53 TEAR_JACOBS Jacobs ladder tears 1<<54 TEAR_HORN Little Horn tears 1<<55 TEAR_LASER Technology Zero 1<<56 TEAR_POP Pop! 1<<57 TEAR_ABSORB Lachryphagy 1<<58 TEAR_LASERSHOT Trisagion, generates a laser on top of the tear 1<<59 TEAR_HYDROBOUNCE Flat Stone 1<<60 TEAR_LUDOVICO Used as a weapon for Ludovico Technique","title":"Enum \"TearFlags\""},{"location":"enums/TearVariant/","text":"Enum \"TearVariant\" \u2693\ufe0e DLC Value Enumerator Comment 0 BLUE 1 BLOOD 2 TOOTH 3 METALLIC 4 BOBS_HEAD 5 FIRE_MIND 6 DARK_MATTER 7 MYSTERIOUS 8 SCHYTHE 9 CHAOS_CARD 10 LOST_CONTACT 11 CUPID_BLUE 12 CUPID_BLOOD 13 NAIL 14 PUPULA 15 PUPULA_BLOOD 16 GODS_FLESH 17 GODS_FLESH_BLOOD 18 DIAMOND 19 EXPLOSIVO 20 COIN 21 MULTIDIMENSIONAL 22 STONE 23 NAIL_BLOOD 24 GLAUCOMA 25 GLAUCOMA_BLOOD 26 BOOGER 27 EGG 28 RAZOR 29 BONE 30 BLACK_TOOTH 31 NEEDLE 32 BELIAL 33 EYE 34 EYE_BLOOD 35 BALLOON 36 HUNGRY 37 BALLOON_BRIMSTONE 38 BALLOON_BOMB","title":"TearVariant"},{"location":"enums/TearVariant/#enum-tearvariant","text":"DLC Value Enumerator Comment 0 BLUE 1 BLOOD 2 TOOTH 3 METALLIC 4 BOBS_HEAD 5 FIRE_MIND 6 DARK_MATTER 7 MYSTERIOUS 8 SCHYTHE 9 CHAOS_CARD 10 LOST_CONTACT 11 CUPID_BLUE 12 CUPID_BLOOD 13 NAIL 14 PUPULA 15 PUPULA_BLOOD 16 GODS_FLESH 17 GODS_FLESH_BLOOD 18 DIAMOND 19 EXPLOSIVO 20 COIN 21 MULTIDIMENSIONAL 22 STONE 23 NAIL_BLOOD 24 GLAUCOMA 25 GLAUCOMA_BLOOD 26 BOOGER 27 EGG 28 RAZOR 29 BONE 30 BLACK_TOOTH 31 NEEDLE 32 BELIAL 33 EYE 34 EYE_BLOOD 35 BALLOON 36 HUNGRY 37 BALLOON_BRIMSTONE 38 BALLOON_BOMB","title":"Enum \"TearVariant\""},{"location":"enums/TrinketType/","text":"Enum \"TrinketType\" \u2693\ufe0e DLC Value Enumerator Comment 0 TRINKET_NULL 1 TRINKET_SWALLOWED_PENNY 2 TRINKET_PETRIFIED_POOP 3 TRINKET_AAA_BATTERY 4 TRINKET_BROKEN_REMOTE 5 TRINKET_PURPLE_HEART 6 TRINKET_BROKEN_MAGNET 7 TRINKET_ROSARY_BEAD 8 TRINKET_CARTRIDGE 9 TRINKET_PULSE_WORM 10 TRINKET_WIGGLE_WORM 11 TRINKET_RING_WORM 12 TRINKET_FLAT_WORM 13 TRINKET_STORE_CREDIT 14 TRINKET_CALLUS 15 TRINKET_LUCKY_ROCK 16 TRINKET_MOMS_TOENAIL 17 TRINKET_BLACK_LIPSTICK 18 TRINKET_BIBLE_TRACT 19 TRINKET_PAPER_CLIP 20 TRINKET_MONKEY_PAW 21 TRINKET_MYSTERIOUS_PAPER 22 TRINKET_DAEMONS_TAIL 23 TRINKET_MISSING_POSTER 24 TRINKET_BUTT_PENNY 25 TRINKET_MYSTERIOUS_CANDY 26 TRINKET_HOOK_WORM 27 TRINKET_WHIP_WORM 28 TRINKET_BROKEN_ANKH 29 TRINKET_FISH_HEAD 30 TRINKET_PINKY_EYE 31 TRINKET_PUSH_PIN 32 TRINKET_LIBERTY_CAP 33 TRINKET_UMBILICAL_CORD 34 TRINKET_CHILDS_HEART 35 TRINKET_CURVED_HORN 36 TRINKET_RUSTED_KEY 37 TRINKET_GOAT_HOOF 38 TRINKET_MOMS_PEARL 39 TRINKET_CANCER 40 TRINKET_RED_PATCH 41 TRINKET_MATCH_STICK 42 TRINKET_LUCKY_TOE 43 TRINKET_CURSED_SKULL 44 TRINKET_SAFETY_CAP 45 TRINKET_ACE_SPADES 46 TRINKET_ISAACS_FORK 47 TRINKET_POLAROID_OBSOLETE 48 TRINKET_MISSING_PAGE 49 TRINKET_BLOODY_PENNY 50 TRINKET_BURNT_PENNY 51 TRINKET_FLAT_PENNY 52 TRINKET_COUNTERFEIT_PENNY 53 TRINKET_TICK 54 TRINKET_ISAACS_HEAD 55 TRINKET_MAGGYS_FAITH 56 TRINKET_JUDAS_TONGUE 57 TRINKET_SOUL 58 TRINKET_SAMSONS_LOCK 59 TRINKET_CAINS_EYE 60 TRINKET_EVES_BIRD_FOOT 61 TRINKET_LEFT_HAND 62 TRINKET_SHINY_ROCK 63 TRINKET_SAFETY_SCISSORS 64 TRINKET_RAINBOW_WORM 65 TRINKET_TAPE_WORM 66 TRINKET_LAZY_WORM 67 TRINKET_CRACKED_DICE 68 TRINKET_SUPER_MAGNET 69 TRINKET_FADED_POLAROID 70 TRINKET_LOUSE 71 TRINKET_BOBS_BLADDER 72 TRINKET_WATCH_BATTERY 73 TRINKET_BLASTING_CAP 74 TRINKET_STUD_FINDER 75 TRINKET_ERROR 76 TRINKET_POKER_CHIP 77 TRINKET_BLISTER 78 TRINKET_SECOND_HAND 79 TRINKET_ENDLESS_NAMELESS 80 TRINKET_BLACK_FEATHER 81 TRINKET_BLIND_RAGE 82 TRINKET_GOLDEN_HORSE_SHOE 83 TRINKET_STORE_KEY 84 TRINKET_RIB_OF_GREED 85 TRINKET_KARMA 86 TRINKET_LIL_LARVA 87 TRINKET_MOMS_LOCKET 88 TRINKET_NO 89 TRINKET_CHILD_LEASH 90 TRINKET_BROWN_CAP 91 TRINKET_MECONIUM 92 TRINKET_CRACKED_CROWN 93 TRINKET_USED_DIAPER 94 TRINKET_FISH_TAIL 95 TRINKET_BLACK_TOOTH 96 TRINKET_OUROBOROS_WORM 97 TRINKET_TONSIL 98 TRINKET_NOSE_GOBLIN 99 TRINKET_SUPER_BALL 100 TRINKET_VIBRANT_BULB 101 TRINKET_DIM_BULB 102 TRINKET_FRAGMENTED_CARD 103 TRINKET_EQUALITY 104 TRINKET_WISH_BONE 105 TRINKET_BAG_LUNCH 106 TRINKET_LOST_CORK 107 TRINKET_CROW_HEART 108 TRINKET_WALNUT 109 TRINKET_DUCT_TAPE 110 TRINKET_SILVER_DOLLAR 111 TRINKET_BLOODY_CROWN 112 TRINKET_PAY_TO_WIN 113 TRINKET_LOCUST_OF_WRATH 114 TRINKET_LOCUST_OF_PESTILENCE 115 TRINKET_LOCUST_OF_FAMINE 116 TRINKET_LOCUST_OF_DEATH 117 TRINKET_LOCUST_OF_CONQUEST 118 TRINKET_BAT_WING 119 TRINKET_STEM_CELL 120 TRINKET_HAIRPIN Booster pack #1 121 TRINKET_WOODEN_CROSS 122 TRINKET_BUTTER 123 TRINKET_FILIGREE_FEATHERS Booster pack #2 124 TRINKET_DOOR_STOP Booster pack #3 125 TRINKET_EXTENSION_CORD Booster pack #4 126 TRINKET_ROTTEN_PENNY Booster pack #5 127 TRINKET_BABY_BENDER 128 TRINKET_FINGER_BONE 129 NUM_TRINKETS","title":"TrinketType"},{"location":"enums/TrinketType/#enum-trinkettype","text":"DLC Value Enumerator Comment 0 TRINKET_NULL 1 TRINKET_SWALLOWED_PENNY 2 TRINKET_PETRIFIED_POOP 3 TRINKET_AAA_BATTERY 4 TRINKET_BROKEN_REMOTE 5 TRINKET_PURPLE_HEART 6 TRINKET_BROKEN_MAGNET 7 TRINKET_ROSARY_BEAD 8 TRINKET_CARTRIDGE 9 TRINKET_PULSE_WORM 10 TRINKET_WIGGLE_WORM 11 TRINKET_RING_WORM 12 TRINKET_FLAT_WORM 13 TRINKET_STORE_CREDIT 14 TRINKET_CALLUS 15 TRINKET_LUCKY_ROCK 16 TRINKET_MOMS_TOENAIL 17 TRINKET_BLACK_LIPSTICK 18 TRINKET_BIBLE_TRACT 19 TRINKET_PAPER_CLIP 20 TRINKET_MONKEY_PAW 21 TRINKET_MYSTERIOUS_PAPER 22 TRINKET_DAEMONS_TAIL 23 TRINKET_MISSING_POSTER 24 TRINKET_BUTT_PENNY 25 TRINKET_MYSTERIOUS_CANDY 26 TRINKET_HOOK_WORM 27 TRINKET_WHIP_WORM 28 TRINKET_BROKEN_ANKH 29 TRINKET_FISH_HEAD 30 TRINKET_PINKY_EYE 31 TRINKET_PUSH_PIN 32 TRINKET_LIBERTY_CAP 33 TRINKET_UMBILICAL_CORD 34 TRINKET_CHILDS_HEART 35 TRINKET_CURVED_HORN 36 TRINKET_RUSTED_KEY 37 TRINKET_GOAT_HOOF 38 TRINKET_MOMS_PEARL 39 TRINKET_CANCER 40 TRINKET_RED_PATCH 41 TRINKET_MATCH_STICK 42 TRINKET_LUCKY_TOE 43 TRINKET_CURSED_SKULL 44 TRINKET_SAFETY_CAP 45 TRINKET_ACE_SPADES 46 TRINKET_ISAACS_FORK 47 TRINKET_POLAROID_OBSOLETE 48 TRINKET_MISSING_PAGE 49 TRINKET_BLOODY_PENNY 50 TRINKET_BURNT_PENNY 51 TRINKET_FLAT_PENNY 52 TRINKET_COUNTERFEIT_PENNY 53 TRINKET_TICK 54 TRINKET_ISAACS_HEAD 55 TRINKET_MAGGYS_FAITH 56 TRINKET_JUDAS_TONGUE 57 TRINKET_SOUL 58 TRINKET_SAMSONS_LOCK 59 TRINKET_CAINS_EYE 60 TRINKET_EVES_BIRD_FOOT 61 TRINKET_LEFT_HAND 62 TRINKET_SHINY_ROCK 63 TRINKET_SAFETY_SCISSORS 64 TRINKET_RAINBOW_WORM 65 TRINKET_TAPE_WORM 66 TRINKET_LAZY_WORM 67 TRINKET_CRACKED_DICE 68 TRINKET_SUPER_MAGNET 69 TRINKET_FADED_POLAROID 70 TRINKET_LOUSE 71 TRINKET_BOBS_BLADDER 72 TRINKET_WATCH_BATTERY 73 TRINKET_BLASTING_CAP 74 TRINKET_STUD_FINDER 75 TRINKET_ERROR 76 TRINKET_POKER_CHIP 77 TRINKET_BLISTER 78 TRINKET_SECOND_HAND 79 TRINKET_ENDLESS_NAMELESS 80 TRINKET_BLACK_FEATHER 81 TRINKET_BLIND_RAGE 82 TRINKET_GOLDEN_HORSE_SHOE 83 TRINKET_STORE_KEY 84 TRINKET_RIB_OF_GREED 85 TRINKET_KARMA 86 TRINKET_LIL_LARVA 87 TRINKET_MOMS_LOCKET 88 TRINKET_NO 89 TRINKET_CHILD_LEASH 90 TRINKET_BROWN_CAP 91 TRINKET_MECONIUM 92 TRINKET_CRACKED_CROWN 93 TRINKET_USED_DIAPER 94 TRINKET_FISH_TAIL 95 TRINKET_BLACK_TOOTH 96 TRINKET_OUROBOROS_WORM 97 TRINKET_TONSIL 98 TRINKET_NOSE_GOBLIN 99 TRINKET_SUPER_BALL 100 TRINKET_VIBRANT_BULB 101 TRINKET_DIM_BULB 102 TRINKET_FRAGMENTED_CARD 103 TRINKET_EQUALITY 104 TRINKET_WISH_BONE 105 TRINKET_BAG_LUNCH 106 TRINKET_LOST_CORK 107 TRINKET_CROW_HEART 108 TRINKET_WALNUT 109 TRINKET_DUCT_TAPE 110 TRINKET_SILVER_DOLLAR 111 TRINKET_BLOODY_CROWN 112 TRINKET_PAY_TO_WIN 113 TRINKET_LOCUST_OF_WRATH 114 TRINKET_LOCUST_OF_PESTILENCE 115 TRINKET_LOCUST_OF_FAMINE 116 TRINKET_LOCUST_OF_DEATH 117 TRINKET_LOCUST_OF_CONQUEST 118 TRINKET_BAT_WING 119 TRINKET_STEM_CELL 120 TRINKET_HAIRPIN Booster pack #1 121 TRINKET_WOODEN_CROSS 122 TRINKET_BUTTER 123 TRINKET_FILIGREE_FEATHERS Booster pack #2 124 TRINKET_DOOR_STOP Booster pack #3 125 TRINKET_EXTENSION_CORD Booster pack #4 126 TRINKET_ROTTEN_PENNY Booster pack #5 127 TRINKET_BABY_BENDER 128 TRINKET_FINGER_BONE 129 NUM_TRINKETS","title":"Enum \"TrinketType\""},{"location":"enums/WeaponType/","text":"Enum \"WeaponType\" \u2693\ufe0e DLC Value Enumerator Comment 1 WEAPON_TEARS 2 WEAPON_BRIMSTONE 3 WEAPON_LASER 4 WEAPON_KNIFE 5 WEAPON_BOMBS 6 WEAPON_ROCKETS 7 WEAPON_MONSTROS_LUNGS 8 WEAPON_LUDOVICO_TECHNIQUE 9 WEAPON_TECH_X 10 WEAPON_BONE 11 NUM_WEAPON_TYPES","title":"WeaponType"},{"location":"enums/WeaponType/#enum-weapontype","text":"DLC Value Enumerator Comment 1 WEAPON_TEARS 2 WEAPON_BRIMSTONE 3 WEAPON_LASER 4 WEAPON_KNIFE 5 WEAPON_BOMBS 6 WEAPON_ROCKETS 7 WEAPON_MONSTROS_LUNGS 8 WEAPON_LUDOVICO_TECHNIQUE 9 WEAPON_TECH_X 10 WEAPON_BONE 11 NUM_WEAPON_TYPES","title":"Enum \"WeaponType\""},{"location":"tutorials/AddingCostumesWithoutLUA/","text":"[Tutorial] Adding Costumes to items without LUA \u2693\ufe0e Example mod & code can be found here: \u2693\ufe0e \u2192 Download the example mod for this Tutorial \u2190 Default costume types \u2693\ufe0e Defining items \u2693\ufe0e Before adding a costume to an item or trinket, we first need to define items. This can be done by creating an empty \"items.xml\" file in your mods \"content\" folder. If that folder does not exist already, create it. Then add the desired amount of items to your items.xml file. It could then look like this: 1 2 3 4 5 6 7 <items gfxroot= \"gfx/items/\" version= \"1\" > <passive id= \"1\" name= \"test item 1\" description= \"Some passive item\" gfx= \"testitem_1.png\" /> <active id= \"2\" name= \"test item 2\" description= \"Some active item\" gfx= \"testitem_2.png\" /> <passive id= \"999\" name= \"test item 999\" description= \"Some passive item but high ID\" gfx= \"testitem_999.png\" /> <familiar id= \"3\" name= \"test item 3\" description= \"Some familiar item\" gfx= \"testitem_3.png\" /> <trinket id= \"4\" name= \"test item 4\" description= \"Some trinket\" gfx= \"testitem_4.png\" /> </items> Note that we also defined IDs for each item. Those IDs are used to assign the Items to their costume! IDs located in a \"content/items.xml\" file are only locally used by the mod. They dont affect other mods and will NOT override existing vanilla items! They will also not define their ingame ID! Defining the costumes \u2693\ufe0e Now that we defined some items, we now define our costumes in a \"costumes2.xml\" file. IMPORTANT: The costume ID and costume Type must be equal to the item id and item type! 1 2 3 4 5 6 7 8 <costumes anm2root= \"gfx/\" > <!-- Load order is top to bottom. It is NOT based on the id --> <costume id= \"1\" anm2path= \"characters/test_costume_1.anm2\" type= \"passive\" /> <costume id= \"2\" anm2path= \"characters/test_costume_2.anm2\" type= \"active\" /> <costume id= \"999\" anm2path= \"characters/test_costume_999.anm2\" type= \"passive\" /> <costume id= \"3\" anm2path= \"characters/test_costume_3.anm2\" type= \"familiar\" /> <costume id= \"4\" anm2path= \"characters/test_costume_4.anm2\" type= \"trinket\" /> </costumes> Effects of the item type to the costume: \u2693\ufe0e Itemtype Effect passive Costume gets added when the pickup animation is finished playing. Costumes gets removed, when the item is removed. active Costume gets added when the item is used. It gets removed when you change the room. trinket Costume gets added when the pickup animation is finished playing. Costumes gets removed, when the trinket is removed. familiar Costume gets added when the pickup animation is finished playing. Costumes gets removed, when the item is removed. Further Informations: \u2693\ufe0e If a costumeID can't be associated with an itemid, the game crashes. Transformations still must be added using the Null Costume method (LUA-based) Costumes of type none actually have a null item associated with it. These Nullcostumes can be added using LUA. Adding Nullcostumes \u2693\ufe0e Nullcostumes are costumes that dont have an actual item attached to them. Therefore, they can be used to add temporary costumes like for example Transformations. The following code adds a nullcostume to the player in two different ways. Choose the one that fits your neededs. costumes2.xml \u2693\ufe0e Define a null costume in the \"costumes2.xml\" file by setting the type to \"none\". DONT set an ID! 1 2 3 <costumes anm2root= \"gfx/\" > <costume anm2path= \"characters/some_null_costume.anm2\" type= \"none\" /> </costumes> main.lua \u2693\ufe0e Get the automatically generated CostumeID of the null-Costume, and then apply it to the player 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 -- get the internal costumeID NullItemID . ID_SOME_NULL_COSTUME = Isaac . GetCostumeIdByPath ( \"gfx/characters/some_null_costume.anm2\" ) -- adding a nullcostume using \"AddNullCostume\" (persistent till its removed / run is restarted) function mod : myFunction1 ( player ) print ( \"adding null costume\" ) if ( somethingHappend ) then player : AddNullCostume ( NullItemID . ID_SOME_NULL_COSTUME ) end -- removing the null costume if ( somethingDifferentHappend ) then player : TryRemoveNullCostume ( NullItemID . ID_SOME_NULL_COSTUME ) end end mod : AddCallback ( ModCallbacks . MC_POST_PLAYER_UPDATE , mod . myFunction1 , 0 ) -- adding a nullcostume using \"NullEffects\" (persists for current room and gets removed afterwards) function mod : myFunction2 ( player ) if not player : GetEffects (): HasNullEffect ( NullItemID . ID_SOME_NULL_COSTUME ) then print ( \"adding null costume\" ) -- will get triggered everytime the room is changed player : GetEffects (): AddNullEffect ( NullItemID . ID_SOME_NULL_COSTUME , true ) end end mod : AddCallback ( ModCallbacks . MC_POST_PLAYER_UPDATE , mod . myFunction2 , 0 ) Special thanks to Piber20 and JSG for figuring out these methods!","title":"Adding Costumes to items without LUA"},{"location":"tutorials/AddingCostumesWithoutLUA/#tutorial-adding-costumes-to-items-without-lua","text":"","title":"[Tutorial] Adding Costumes to items without LUA"},{"location":"tutorials/AddingCostumesWithoutLUA/#default-costume-types","text":"","title":"Default costume types"},{"location":"tutorials/AddingCostumesWithoutLUA/#defining-items","text":"Before adding a costume to an item or trinket, we first need to define items. This can be done by creating an empty \"items.xml\" file in your mods \"content\" folder. If that folder does not exist already, create it. Then add the desired amount of items to your items.xml file. It could then look like this: 1 2 3 4 5 6 7 <items gfxroot= \"gfx/items/\" version= \"1\" > <passive id= \"1\" name= \"test item 1\" description= \"Some passive item\" gfx= \"testitem_1.png\" /> <active id= \"2\" name= \"test item 2\" description= \"Some active item\" gfx= \"testitem_2.png\" /> <passive id= \"999\" name= \"test item 999\" description= \"Some passive item but high ID\" gfx= \"testitem_999.png\" /> <familiar id= \"3\" name= \"test item 3\" description= \"Some familiar item\" gfx= \"testitem_3.png\" /> <trinket id= \"4\" name= \"test item 4\" description= \"Some trinket\" gfx= \"testitem_4.png\" /> </items> Note that we also defined IDs for each item. Those IDs are used to assign the Items to their costume! IDs located in a \"content/items.xml\" file are only locally used by the mod. They dont affect other mods and will NOT override existing vanilla items! They will also not define their ingame ID!","title":"Defining items"},{"location":"tutorials/AddingCostumesWithoutLUA/#defining-the-costumes","text":"Now that we defined some items, we now define our costumes in a \"costumes2.xml\" file. IMPORTANT: The costume ID and costume Type must be equal to the item id and item type! 1 2 3 4 5 6 7 8 <costumes anm2root= \"gfx/\" > <!-- Load order is top to bottom. It is NOT based on the id --> <costume id= \"1\" anm2path= \"characters/test_costume_1.anm2\" type= \"passive\" /> <costume id= \"2\" anm2path= \"characters/test_costume_2.anm2\" type= \"active\" /> <costume id= \"999\" anm2path= \"characters/test_costume_999.anm2\" type= \"passive\" /> <costume id= \"3\" anm2path= \"characters/test_costume_3.anm2\" type= \"familiar\" /> <costume id= \"4\" anm2path= \"characters/test_costume_4.anm2\" type= \"trinket\" /> </costumes>","title":"Defining the costumes"},{"location":"tutorials/AddingCostumesWithoutLUA/#effects-of-the-item-type-to-the-costume","text":"Itemtype Effect passive Costume gets added when the pickup animation is finished playing. Costumes gets removed, when the item is removed. active Costume gets added when the item is used. It gets removed when you change the room. trinket Costume gets added when the pickup animation is finished playing. Costumes gets removed, when the trinket is removed. familiar Costume gets added when the pickup animation is finished playing. Costumes gets removed, when the item is removed.","title":"Effects of the item type to the costume:"},{"location":"tutorials/AddingCostumesWithoutLUA/#adding-nullcostumes","text":"Nullcostumes are costumes that dont have an actual item attached to them. Therefore, they can be used to add temporary costumes like for example Transformations. The following code adds a nullcostume to the player in two different ways. Choose the one that fits your neededs.","title":"Adding Nullcostumes"},{"location":"tutorials/AddingCostumesWithoutLUA/#costumes2xml","text":"Define a null costume in the \"costumes2.xml\" file by setting the type to \"none\". DONT set an ID! 1 2 3 <costumes anm2root= \"gfx/\" > <costume anm2path= \"characters/some_null_costume.anm2\" type= \"none\" /> </costumes>","title":" costumes2.xml"},{"location":"tutorials/AddingCostumesWithoutLUA/#mainlua","text":"Get the automatically generated CostumeID of the null-Costume, and then apply it to the player 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 -- get the internal costumeID NullItemID . ID_SOME_NULL_COSTUME = Isaac . GetCostumeIdByPath ( \"gfx/characters/some_null_costume.anm2\" ) -- adding a nullcostume using \"AddNullCostume\" (persistent till its removed / run is restarted) function mod : myFunction1 ( player ) print ( \"adding null costume\" ) if ( somethingHappend ) then player : AddNullCostume ( NullItemID . ID_SOME_NULL_COSTUME ) end -- removing the null costume if ( somethingDifferentHappend ) then player : TryRemoveNullCostume ( NullItemID . ID_SOME_NULL_COSTUME ) end end mod : AddCallback ( ModCallbacks . MC_POST_PLAYER_UPDATE , mod . myFunction1 , 0 ) -- adding a nullcostume using \"NullEffects\" (persists for current room and gets removed afterwards) function mod : myFunction2 ( player ) if not player : GetEffects (): HasNullEffect ( NullItemID . ID_SOME_NULL_COSTUME ) then print ( \"adding null costume\" ) -- will get triggered everytime the room is changed player : GetEffects (): AddNullEffect ( NullItemID . ID_SOME_NULL_COSTUME , true ) end end mod : AddCallback ( ModCallbacks . MC_POST_PLAYER_UPDATE , mod . myFunction2 , 0 ) Special thanks to Piber20 and JSG for figuring out these methods!","title":" main.lua"},{"location":"tutorials/DebugConsole/","text":"Tutorial: DebugConsole \u2693\ufe0e To access the debug console, at least 1 mod must be enabled. If you don't have any mods to enable, download one from Steam Workshop, or create an empty folder in your mods. To show the console , while in a run press the grave/tilde (`~) key. On english (American) keyboardlayouts, it should be below Esc. Language Keyboard Key English QWERTY ` or ~ French AZERTY \u00f9 German QWERTZ \u00f6 Spanish QWERTY \u00f1 Italian QWERTY > Danish QWERTY \u00e6 Portuguese QWERTY \u00e7 To hide the console , just hit Enter without typing anything. Beware of spoilers! You can easily learn things accidentally via the debug console that you might have wanted to learn from regular gameplay! The debug console is a feature of Isaac that's been around since Rebirth, but until AB+ it's only been enabled in developer builds. Now modders can finally unleash its power! It can be a big time saver for testing your changes during development of mods. The debug console is not completely stable, so if you enter commands like numbers outside certain ranges, it may crash. Some of the crashes are documented below, but there are likely others. If you're testing a specific item or item combo, it's useful to enter your commands and then exit and continue so your items are reloaded when you continue and you don't need to keep retyping the same command. Also, try the clipboard! You can paste multiple commands at once or copy the last few commands you entered using the copy command. Some commands that are still in the game aren't listed here since they're only useful for Nicalis developers, or are no longer useful. For instance, the achievement and eggs commands unlock stuff in your game save, but saving your persistent data is disabled when mods are turned on. Commands \u2693\ufe0e spawn \u2693\ufe0e Syntax: 1 2 3 4 spawn mega maw spawn 20 spawn 10.1 spawn 10.2.0.4 Very similar names are incredibly common among entities, so you'll likely need to type the name to figure out the number, then delete it and type the number manually. The decimal syntax lets you specify: 1 Type.Variant.Subtype.Champion spawn 10.2.0.4 will get you a gaper(10)'s flaming variant(.2) with a blue champion type(.4). goto \u2693\ufe0e Syntax: 1 2 3 goto s.boss.1010 goto s.error.21 goto d.10 s is for special room types, and d is for normal room types. The rooms will be different depending on what floor you're on, so goto d.10 will take you to a different room on stage 1 than it will on stage 3. stage \u2693\ufe0e Syntax: 1 2 3 stage 1 stage 10a stage 3b Move to another floor on the same seed. You can use this to skip ahead to a later floor, go backwards to an earlier floor, or reset the current floor by entering the current floor's id. Entering nonexistent floors can crash the game. gridspawn \u2693\ufe0e Syntax: 1 2 3 4 gridspawn 1000 gridspawn 1494 gridspawn 9000 gridspawn 9100 Spawns the grid entity with the given ID at a random place in the room. For some reason it doesn't always do something, possibly because of failing to overwrite other grid entities or trying to spawn outside the room or something. Pits won't look right until you leave the room and come back. debug \u2693\ufe0e Various cheats that are useful for testing. Some of the ones not listed here are obsolete, not very useful, or possibly broken. Here are the ones that are still useful. debug 3 Complete invincibility debug 4 +40 damage. Good with Soy Milk. debug 7 Display damage values, similar to the Spider Mod item debug 8 Your active item always has max charge. debug 9 Your luck is very high, so luck-based random events like random tear effects happen more often. debug 10 All enemies take rapid damage at all times, so rooms are usually cleared in under a second. giveitem \u2693\ufe0e aliases: g \u2693\ufe0e Item and trinket syntax: 1 2 3 4 5 6 7 giveitem dr. fetus giveitem c15 giveitem Petrified Poop giveitem t15 giveitem ipec g mutant sp g soy milk Name collisions are somewhat common among items, so you'll likely need to type the name to figure out the number, then delete it and type the number manually. For items, use \"c15\" to give the item by number instead of name. For trinkets numbers, use \"t15\" Notice how it can autocomplete if you don't type the full name. It doesn't work with some odd item names like \"<3\" so you'll have to figure out the collectible number and use \"c15\" instead. Pill syntax: 1 2 giveitem p0 g p22 Card syntax: 1 2 giveitem k1 g k45 Unfortunately you can't type pills or cards by name, so you have to figure out the number. You can give yourself pills even if that pill's effect is not in the rotation. It won't subsequently appear in rotation afterwards. remove \u2693\ufe0e aliases: r \u2693\ufe0e Syntax: 1 2 3 4 5 6 remove t53 remove soy milk remove cursed eye r bob's brain r experi remove * remove * is a special version of the command that should remove all items. costumetest \u2693\ufe0e Syntax: 1 2 costumetest costumetest 33 Gives Isaac a number of totally random costumes, without having the associated items. restart \u2693\ufe0e Same as holding R. Resets the game back to the beginning of a new run. listcollectibles Prints a list of all items in your possession, and how many of each repeat \u2693\ufe0e Syntax: 1 2 3 4 5 spawn 10 repeat 50 giveitem meat! repeat 100 repeat 100 The commands above will spawn one, then fifty gapers, and then give you one MEAT! and then two hundred more MEAT!s. repeat looks back up the previous console command. The last one that wasn't a repeat command is re-entered as many times as requested. You can use this to give yourself tons of items or spawn tons of enemies. Exercise restraint! Remember that an extreme number of repetitions of some commands might crash the game or leave it hanging for a long time. clearseeds \u2693\ufe0e Removes all easter egg effects from the current run. seed \u2693\ufe0e Syntax: 1 2 seed GGGG GGGG seed T1MM AY48 It's much easier just to exit to the character select and type the seed the normal way. Easter egg seeds won't work. It's case-sensitive (uppercase only) and doesn't replace \"i\" with \"1,\" etc. challenge \u2693\ufe0e Syntax: 1 challenge 20 Starts a new run on a random seed on the given challenge number. Numbers greater than the number of challenges included in the base game will cause the game to crash. combo \u2693\ufe0e Syntax: 1 combo 0.69 Gives you an item combo, taking 69 random items from the specified item pool (in this case, 0 is the treasure room item pool). macro \u2693\ufe0e This command wasn't designed for general consumption, as macros can only be added in C++ code. Sorry! If there's enough demand we can consider adding a similar feature for modder access. It just pastes a bunch of hardcoded console commands one after another using an abbrevition that's quick to type. You can use the clipboard to similar effect. curse \u2693\ufe0e Syntax: 1 2 3 curse 2 curse 16 curse 127 Set a value corresponding to a sum of the desired curses. Darkness (1) + Labyrinth (2) + Lost (4) + Unknown (8) + Cursed (16) + Maze (32) + Blind (64) = 127 The stage or reseed commands are useful after adding curse of the labyrinth to force the floor to be re-generated. reseed \u2693\ufe0e Generates a new layout for the current floor with a new floor seed. This floor will no longer match other people playing the same seed. copy \u2693\ufe0e Copies the last three console commands to your clipboard. Paste one or more commands with ctrl+v, or command+v on mac. clear \u2693\ufe0e Clears the console. Useful for video recording purposes or if you want to dispose of incriminating evidence. lua \u2693\ufe0e Examples: 1 2 3 lua print(\"Hello World!\") l for _,v in pairs(Isaac.GetRoomEntities()) do if v:IsVulnerableEnemy() then print(v.HitPoints..\"/\"..v.MaxHitPoints) end end Directly runs a line of Lua code. The first example simply prints \"Hello World!\" to the console, while the second prints the current HP and max HP of every vulnerable enemy in the room. luarun \u2693\ufe0e Examples: 1 2 luarun /full_path/hello.lua luarun relative_path/hello.lua Takes a path to a lua file and runs it immediately. Paths are relative to the folder where the game is installed. luamod \u2693\ufe0e Examples: 1 luamod mygreatmod Takes a mod folder name and runs the main.lua for it. This can be used to reload a mod without relaunching the game. luarun \u2693\ufe0e Reports memory usage for Lua","title":"Debug Console"},{"location":"tutorials/DebugConsole/#tutorial-debugconsole","text":"To access the debug console, at least 1 mod must be enabled. If you don't have any mods to enable, download one from Steam Workshop, or create an empty folder in your mods. To show the console , while in a run press the grave/tilde (`~) key. On english (American) keyboardlayouts, it should be below Esc. Language Keyboard Key English QWERTY ` or ~ French AZERTY \u00f9 German QWERTZ \u00f6 Spanish QWERTY \u00f1 Italian QWERTY > Danish QWERTY \u00e6 Portuguese QWERTY \u00e7 To hide the console , just hit Enter without typing anything. Beware of spoilers! You can easily learn things accidentally via the debug console that you might have wanted to learn from regular gameplay! The debug console is a feature of Isaac that's been around since Rebirth, but until AB+ it's only been enabled in developer builds. Now modders can finally unleash its power! It can be a big time saver for testing your changes during development of mods. The debug console is not completely stable, so if you enter commands like numbers outside certain ranges, it may crash. Some of the crashes are documented below, but there are likely others. If you're testing a specific item or item combo, it's useful to enter your commands and then exit and continue so your items are reloaded when you continue and you don't need to keep retyping the same command. Also, try the clipboard! You can paste multiple commands at once or copy the last few commands you entered using the copy command. Some commands that are still in the game aren't listed here since they're only useful for Nicalis developers, or are no longer useful. For instance, the achievement and eggs commands unlock stuff in your game save, but saving your persistent data is disabled when mods are turned on.","title":"Tutorial: DebugConsole"},{"location":"tutorials/DebugConsole/#commands","text":"","title":"Commands"},{"location":"tutorials/DebugConsole/#spawn","text":"Syntax: 1 2 3 4 spawn mega maw spawn 20 spawn 10.1 spawn 10.2.0.4 Very similar names are incredibly common among entities, so you'll likely need to type the name to figure out the number, then delete it and type the number manually. The decimal syntax lets you specify: 1 Type.Variant.Subtype.Champion spawn 10.2.0.4 will get you a gaper(10)'s flaming variant(.2) with a blue champion type(.4).","title":"spawn"},{"location":"tutorials/DebugConsole/#goto","text":"Syntax: 1 2 3 goto s.boss.1010 goto s.error.21 goto d.10 s is for special room types, and d is for normal room types. The rooms will be different depending on what floor you're on, so goto d.10 will take you to a different room on stage 1 than it will on stage 3.","title":"goto"},{"location":"tutorials/DebugConsole/#stage","text":"Syntax: 1 2 3 stage 1 stage 10a stage 3b Move to another floor on the same seed. You can use this to skip ahead to a later floor, go backwards to an earlier floor, or reset the current floor by entering the current floor's id. Entering nonexistent floors can crash the game.","title":"stage"},{"location":"tutorials/DebugConsole/#gridspawn","text":"Syntax: 1 2 3 4 gridspawn 1000 gridspawn 1494 gridspawn 9000 gridspawn 9100 Spawns the grid entity with the given ID at a random place in the room. For some reason it doesn't always do something, possibly because of failing to overwrite other grid entities or trying to spawn outside the room or something. Pits won't look right until you leave the room and come back.","title":"gridspawn"},{"location":"tutorials/DebugConsole/#debug","text":"Various cheats that are useful for testing. Some of the ones not listed here are obsolete, not very useful, or possibly broken. Here are the ones that are still useful. debug 3 Complete invincibility debug 4 +40 damage. Good with Soy Milk. debug 7 Display damage values, similar to the Spider Mod item debug 8 Your active item always has max charge. debug 9 Your luck is very high, so luck-based random events like random tear effects happen more often. debug 10 All enemies take rapid damage at all times, so rooms are usually cleared in under a second.","title":"debug"},{"location":"tutorials/DebugConsole/#giveitem","text":"","title":"giveitem"},{"location":"tutorials/DebugConsole/#remove","text":"","title":"remove"},{"location":"tutorials/DebugConsole/#costumetest","text":"Syntax: 1 2 costumetest costumetest 33 Gives Isaac a number of totally random costumes, without having the associated items.","title":"costumetest"},{"location":"tutorials/DebugConsole/#restart","text":"Same as holding R. Resets the game back to the beginning of a new run. listcollectibles Prints a list of all items in your possession, and how many of each","title":"restart"},{"location":"tutorials/DebugConsole/#repeat","text":"Syntax: 1 2 3 4 5 spawn 10 repeat 50 giveitem meat! repeat 100 repeat 100 The commands above will spawn one, then fifty gapers, and then give you one MEAT! and then two hundred more MEAT!s. repeat looks back up the previous console command. The last one that wasn't a repeat command is re-entered as many times as requested. You can use this to give yourself tons of items or spawn tons of enemies. Exercise restraint! Remember that an extreme number of repetitions of some commands might crash the game or leave it hanging for a long time.","title":"repeat"},{"location":"tutorials/DebugConsole/#clearseeds","text":"Removes all easter egg effects from the current run.","title":"clearseeds"},{"location":"tutorials/DebugConsole/#seed","text":"Syntax: 1 2 seed GGGG GGGG seed T1MM AY48 It's much easier just to exit to the character select and type the seed the normal way. Easter egg seeds won't work. It's case-sensitive (uppercase only) and doesn't replace \"i\" with \"1,\" etc.","title":"seed"},{"location":"tutorials/DebugConsole/#challenge","text":"Syntax: 1 challenge 20 Starts a new run on a random seed on the given challenge number. Numbers greater than the number of challenges included in the base game will cause the game to crash.","title":"challenge"},{"location":"tutorials/DebugConsole/#combo","text":"Syntax: 1 combo 0.69 Gives you an item combo, taking 69 random items from the specified item pool (in this case, 0 is the treasure room item pool).","title":"combo"},{"location":"tutorials/DebugConsole/#macro","text":"This command wasn't designed for general consumption, as macros can only be added in C++ code. Sorry! If there's enough demand we can consider adding a similar feature for modder access. It just pastes a bunch of hardcoded console commands one after another using an abbrevition that's quick to type. You can use the clipboard to similar effect.","title":"macro"},{"location":"tutorials/DebugConsole/#curse","text":"Syntax: 1 2 3 curse 2 curse 16 curse 127 Set a value corresponding to a sum of the desired curses. Darkness (1) + Labyrinth (2) + Lost (4) + Unknown (8) + Cursed (16) + Maze (32) + Blind (64) = 127 The stage or reseed commands are useful after adding curse of the labyrinth to force the floor to be re-generated.","title":"curse"},{"location":"tutorials/DebugConsole/#reseed","text":"Generates a new layout for the current floor with a new floor seed. This floor will no longer match other people playing the same seed.","title":"reseed"},{"location":"tutorials/DebugConsole/#copy","text":"Copies the last three console commands to your clipboard. Paste one or more commands with ctrl+v, or command+v on mac.","title":"copy"},{"location":"tutorials/DebugConsole/#clear","text":"Clears the console. Useful for video recording purposes or if you want to dispose of incriminating evidence.","title":"clear"},{"location":"tutorials/DebugConsole/#lua","text":"Examples: 1 2 3 lua print(\"Hello World!\") l for _,v in pairs(Isaac.GetRoomEntities()) do if v:IsVulnerableEnemy() then print(v.HitPoints..\"/\"..v.MaxHitPoints) end end Directly runs a line of Lua code. The first example simply prints \"Hello World!\" to the console, while the second prints the current HP and max HP of every vulnerable enemy in the room.","title":"lua"},{"location":"tutorials/DebugConsole/#luarun","text":"Examples: 1 2 luarun /full_path/hello.lua luarun relative_path/hello.lua Takes a path to a lua file and runs it immediately. Paths are relative to the folder where the game is installed.","title":"luarun"},{"location":"tutorials/DebugConsole/#luamod","text":"Examples: 1 luamod mygreatmod Takes a mod folder name and runs the main.lua for it. This can be used to reload a mod without relaunching the game.","title":"luamod"},{"location":"tutorials/DebugConsole/#luarun_1","text":"Reports memory usage for Lua","title":"luarun"},{"location":"tutorials/ExampleProject/","text":"Tutorial: Example Project \u2693\ufe0e Example project \u2693\ufe0e Example project: To make a new mod, you have to create a new folder, named as the mod you want to create, in the following directory: 1 C : \\ Users \\ [ YOURUSERNAME ] \\ Documents \\ My Games \\ Binding of Isaac Afterbirth + Mods Then, you have to create a new main . lua file in the newly created folder. This file can then be used to contain the logic behind your mod. For Linux \u2693\ufe0e Mod tools aren't available in the native version. You need to run the game with Proton, the folder location is going to be inside your Steam folder 1 / Steam / steamapps / compatdata / 250900 / pfx / drive_c / users / steamuser / Documents / My Games / Binding of Isaac Afterbirth + Mods Example \"main.lua\" \u2693\ufe0e This code creates a mod, that turns tears into dark matter tears (slowing black tears). It also adds one coin to the player every shot. 1 2 3 4 5 6 7 8 9 10 local mod = RegisterMod ( \"Dark Matter tears\" , 1 ) -- Register the mod in the API (dont change anything here, except the name) function mod : onTear ( tear ) local player = Isaac . GetPlayer ( 0 ) --get the player entity player : AddCoins ( 1 ) -- add a coin tear . TearFlags = tear . TearFlags | TearFlags . TEAR_SLOW -- add slowing effect to the tear tear : ChangeVariant ( TearVariant . DARK_MATTER ) -- change appearance of the tear end mod : AddCallback ( ModCallbacks . MC_POST_FIRE_TEAR , mod . onTear ) -- Trigger the function \"onTear()\", when the \"POST_FIRE_TEAR\" callback is triggered. Local function example \u2693\ufe0e 1 2 3 4 5 6 7 8 9 10 local mod = RegisterMod ( \"Dark Matter tears\" , 1 ) -- Register the mod in the API (don't change anything here, except the name) local function onTear ( _ , tear ) local player = Isaac . GetPlayer ( 0 ) -- get the player entity player : AddCoins ( 1 ) -- add a coin tear . TearFlags = tear . TearFlags | TearFlags . TEAR_SLOW -- add slowing effect to the tear tear : ChangeVariant ( TearVariant . DARK_MATTER ) -- change appearance of the tear end mod : AddCallback ( ModCallbacks . MC_POST_FIRE_TEAR , onTear ) -- Trigger the function \"onTear()\", when the \"POST_FIRE_TEAR\" callback is triggered. Differences to the other method: \u2693\ufe0e Instead of the function being stored inside of the mod variable it is it's own variable local to the level of creation. When creating a local function the first parameter looks for itself and this argument is commonly disregarded by storing it as an underscore. When calling/triggering this function only the function name is necessary, as it is not stored within the mod variable. Local functions are able to be stored within a table just like any other variable, for example: 1 2 3 4 5 local functions = { [ 1 ] = function ( _ , tear ) end , } where this function would be called via functions[1], and is used in place of onTear in the AddCallback function of the main example Example code: \"Inline\" definition of functions example \u2693\ufe0e 1 2 3 4 5 6 7 8 local mod = RegisterMod ( \"Dark Matter tears\" , 1 ) -- Register the mod in the API (don't change anything here, except the name) mod : AddCallback ( ModCallbacks . MC_POST_FIRE_TEAR , function ( _ , tear ) local player = Isaac . GetPlayer ( 0 ) -- get the player entity player : AddCoins ( 1 ) -- add a coin tear . TearFlags = tear . TearFlags | TearFlags . TEAR_SLOW -- add slowing effect to the tear tear : ChangeVariant ( TearVariant . DARK_MATTER ) -- change appearance of the tear end ) -- Trigger the function created within the function argument of the AddCallback function, when the \"POST_FIRE_TEAR\" callback is triggered. Differences: \u2693\ufe0e In this example the function being triggered by the callback is defined within the AddCallback function. This method of creation removes the need for storing and referencing your function from a variable, similarly to the local function example the function given will attempt to pass itself has the first argument so it is disregarded with an underscore. Since this function is not stored within your code it is not possible to call it from other places, so this method should only be used if it is to only be triggered by the callback","title":"Example Project"},{"location":"tutorials/ExampleProject/#tutorial-example-project","text":"","title":"Tutorial: Example Project"},{"location":"tutorials/ExampleProject/#example-project","text":"Example project: To make a new mod, you have to create a new folder, named as the mod you want to create, in the following directory: 1 C : \\ Users \\ [ YOURUSERNAME ] \\ Documents \\ My Games \\ Binding of Isaac Afterbirth + Mods Then, you have to create a new main . lua file in the newly created folder. This file can then be used to contain the logic behind your mod.","title":"Example project"},{"location":"tutorials/ExampleProject/#for-linux","text":"Mod tools aren't available in the native version. You need to run the game with Proton, the folder location is going to be inside your Steam folder 1 / Steam / steamapps / compatdata / 250900 / pfx / drive_c / users / steamuser / Documents / My Games / Binding of Isaac Afterbirth + Mods","title":" For Linux"},{"location":"tutorials/ExampleProject/#example-mainlua","text":"This code creates a mod, that turns tears into dark matter tears (slowing black tears). It also adds one coin to the player every shot. 1 2 3 4 5 6 7 8 9 10 local mod = RegisterMod ( \"Dark Matter tears\" , 1 ) -- Register the mod in the API (dont change anything here, except the name) function mod : onTear ( tear ) local player = Isaac . GetPlayer ( 0 ) --get the player entity player : AddCoins ( 1 ) -- add a coin tear . TearFlags = tear . TearFlags | TearFlags . TEAR_SLOW -- add slowing effect to the tear tear : ChangeVariant ( TearVariant . DARK_MATTER ) -- change appearance of the tear end mod : AddCallback ( ModCallbacks . MC_POST_FIRE_TEAR , mod . onTear ) -- Trigger the function \"onTear()\", when the \"POST_FIRE_TEAR\" callback is triggered.","title":" Example \"main.lua\""},{"location":"tutorials/ExampleProject/#local-function-example","text":"1 2 3 4 5 6 7 8 9 10 local mod = RegisterMod ( \"Dark Matter tears\" , 1 ) -- Register the mod in the API (don't change anything here, except the name) local function onTear ( _ , tear ) local player = Isaac . GetPlayer ( 0 ) -- get the player entity player : AddCoins ( 1 ) -- add a coin tear . TearFlags = tear . TearFlags | TearFlags . TEAR_SLOW -- add slowing effect to the tear tear : ChangeVariant ( TearVariant . DARK_MATTER ) -- change appearance of the tear end mod : AddCallback ( ModCallbacks . MC_POST_FIRE_TEAR , onTear ) -- Trigger the function \"onTear()\", when the \"POST_FIRE_TEAR\" callback is triggered.","title":" Local function example"},{"location":"tutorials/ExampleProject/#inline-definition-of-functions-example","text":"1 2 3 4 5 6 7 8 local mod = RegisterMod ( \"Dark Matter tears\" , 1 ) -- Register the mod in the API (don't change anything here, except the name) mod : AddCallback ( ModCallbacks . MC_POST_FIRE_TEAR , function ( _ , tear ) local player = Isaac . GetPlayer ( 0 ) -- get the player entity player : AddCoins ( 1 ) -- add a coin tear . TearFlags = tear . TearFlags | TearFlags . TEAR_SLOW -- add slowing effect to the tear tear : ChangeVariant ( TearVariant . DARK_MATTER ) -- change appearance of the tear end ) -- Trigger the function created within the function argument of the AddCallback function, when the \"POST_FIRE_TEAR\" callback is triggered.","title":" \"Inline\" definition of functions example"},{"location":"tutorials/Tools/","text":"Modding Tools \u2693\ufe0e General \u2693\ufe0e Basement Renovator : Powerful and intuitive Level and Room Editor Backdrop Previewer : Tool to preview Room-Backdrops Log Viewer : Tool to display a live - view the Logfile Rebirth Item Tracker : External tool that displays Item-informations about your current run AB+ Mod Merger : A Python script to merge AB+ Mods. This can improve performance. Anm2 Scaling Helper : Scales .anm2 files with a specific factor. Useful to create HD sprites. ( Source ) Drawstic Online : Online tool to edit BoI sprites quickly Color Usage Visualizer : Interactive 3D tool to display color usage frequencies in Isaac Sprites Config & Mod Management Tool : UI to edit the game config and enable/ disable mods or modpacks PC -> Console Mod Converter : Converts Rebirth and Afterbirth mods to be useable on consoles. DOES NOT WORK FOR AFTERBIRTH+ MODS! Coding Tools \u2693\ufe0e Visual Studio Code : Free Coding environment Plug-In: \"Lua\" Provides a lot of QoL features, syntax Check, Reference checks, IntelliSense, Auto complete, ... Plug-In: vscode-isaac-afterbirth-plus Auto-complete for Isaac Enums Notepad++ : Free Coding environment ZeroBrane Studio : Free Coding environment Plug-In: Afterbirth-API-for-ZeroBrane (outdated) Autocomplete for Isaac API functions and enums IsaacScript : Coding mods easily using Typescript Afterbirth + \u2693\ufe0e Savegame Editor : Savegame Editor for AB+ Afterbirth \u2693\ufe0e Missing Hud 2 Overlay : Displays Stats of the character on the left side of the screen Rick's Unpacker : Tool to extract the Game files Savegame Editor : Savegame Editor for Afterbirth Basement Renovator : Level / Room Editor simple mod loader : Tool to install and manage Mods Challenge Creator : Tool to create custom challenges Custom Challenge Launcher : Creates Custom gameplay scenarios Itempool Editor+ : Itempool editor with graphics based UI Itempool Editor (alternative) : Itempool editor with text based UI Rebirth \u2693\ufe0e Missing Hud 2 Overlay : Displays Stats of the character on the left side of the screen Rick's Unpacker : Tool to extract the Game files Basement Renovator : Level / Room Editor simple mod loader : Tool to install and manage Mods Itempool Editor+ : Itempool editor with graphics based UI Misc \u2693\ufe0e Run Tracker : Provides informations about your Runs and your savegames","title":"Tools"},{"location":"tutorials/Tools/#modding-tools","text":"","title":"Modding Tools"},{"location":"tutorials/Tools/#general","text":"Basement Renovator : Powerful and intuitive Level and Room Editor Backdrop Previewer : Tool to preview Room-Backdrops Log Viewer : Tool to display a live - view the Logfile Rebirth Item Tracker : External tool that displays Item-informations about your current run AB+ Mod Merger : A Python script to merge AB+ Mods. This can improve performance. Anm2 Scaling Helper : Scales .anm2 files with a specific factor. Useful to create HD sprites. ( Source ) Drawstic Online : Online tool to edit BoI sprites quickly Color Usage Visualizer : Interactive 3D tool to display color usage frequencies in Isaac Sprites Config & Mod Management Tool : UI to edit the game config and enable/ disable mods or modpacks PC -> Console Mod Converter : Converts Rebirth and Afterbirth mods to be useable on consoles. DOES NOT WORK FOR AFTERBIRTH+ MODS!","title":"General"},{"location":"tutorials/Tools/#coding-tools","text":"Visual Studio Code : Free Coding environment Plug-In: \"Lua\" Provides a lot of QoL features, syntax Check, Reference checks, IntelliSense, Auto complete, ... Plug-In: vscode-isaac-afterbirth-plus Auto-complete for Isaac Enums Notepad++ : Free Coding environment ZeroBrane Studio : Free Coding environment Plug-In: Afterbirth-API-for-ZeroBrane (outdated) Autocomplete for Isaac API functions and enums IsaacScript : Coding mods easily using Typescript","title":"Coding Tools"},{"location":"tutorials/Tools/#afterbirth","text":"Savegame Editor : Savegame Editor for AB+","title":"Afterbirth +"},{"location":"tutorials/Tools/#afterbirth_1","text":"Missing Hud 2 Overlay : Displays Stats of the character on the left side of the screen Rick's Unpacker : Tool to extract the Game files Savegame Editor : Savegame Editor for Afterbirth Basement Renovator : Level / Room Editor simple mod loader : Tool to install and manage Mods Challenge Creator : Tool to create custom challenges Custom Challenge Launcher : Creates Custom gameplay scenarios Itempool Editor+ : Itempool editor with graphics based UI Itempool Editor (alternative) : Itempool editor with text based UI","title":"Afterbirth"},{"location":"tutorials/Tools/#rebirth","text":"Missing Hud 2 Overlay : Displays Stats of the character on the left side of the screen Rick's Unpacker : Tool to extract the Game files Basement Renovator : Level / Room Editor simple mod loader : Tool to install and manage Mods Itempool Editor+ : Itempool editor with graphics based UI","title":"Rebirth"},{"location":"tutorials/Tools/#misc","text":"Run Tracker : Provides informations about your Runs and your savegames","title":"Misc"},{"location":"tutorials/Tutorial-Rendertext/","text":"Tutorial: Render text ingame \u2693\ufe0e Fonts used by the game \u2693\ufe0e The Following fonts are used by the game and can be used with the Font() class: Font Name Ingame Name/s Ingame Example Ingame Usage Link to font Droid Sans droid Example Droid (Not used ingame) Droid Sans PF Tempesta Seven (Condensed) pftempestasevencondensed Example PF Tempesta Seven HUD Elements like coin/key counters PF Tempesta Seven Team Meat Font teammeatfont10 teammeatfont12 teammeatfont16 teammeatfont16bold Example teammeatfont10 Example teammeatfont12 Example teammeatfont16 Example teammeatfont16bold Main Menu Elements Pop-Ups Timer / Score Elements Team Meat Font without Bold Terminus terminus terminus8 Example Terminus Example Terminus8 Debug Console / Isaac.RenderText() Terminus Upheaval upheaval Example Upheaval Streak text Upheaval mplus (Japanese) mplus_10r mplus_12b Example mplus_10r Example mplus_12b Replacement for all fonts aboth for Japanese translation. 10r is pf \"Tempesta seven\" / \"Team Meat\" replacement 12b is \"Upheaval\" replacement PixelMplus (M+ Fonts) kr Font (Korean) kr_font12 kr_font14 Example kr_font12 Example kr_font14 TBD No source found right now Team Meat Font (Korean) kr_meatfont14 Example kr_meatfont14 TBD - Not available - Basics of rendering a text \u2693\ufe0e First we need to have a look at the basic process of writing on the screen. here is a sample code: 1 2 3 4 5 6 7 local testmod = RegisterMod ( \"testmod\" , 1 ); local function onRender ( t ) Isaac . RenderText ( \"Sample text\" , 50 , 30 , 1 , 1 , 1 , 255 ) end testmod : AddCallback ( ModCallbacks . MC_POST_RENDER , onRender ) Result: The game uses the font-file \"terminus.fnt\" in order to render and display this text. this cant be changed. Luckily for us, this file contains \"sprites\" for all normal ASCII characters that exist out there (256 to be precise). Rendering text with a different font \u2693\ufe0e We can render any kind of text with a different font as well. This can be done by using the \"Font()\" class and its functions. Example code: \u2693\ufe0e 1 2 3 local f = Font () -- init font object f : Load ( \"font/droid.fnt\" ) -- load a font into the font object f : DrawString ( \"droid\" , 60 , 50 , KColor ( 1 , 1 , 1 , 1 , 0 , 0 , 0 ), 0 , true ) -- render string with loaded font on position 60x50y All possible Fonts that can be drawn: \u2693\ufe0e Render Special Characters \u2693\ufe0e The game allows us to write anything into the \"displayed text\" argument that is part of the ASCII standard for characters. For characters a-z, 0-9 and ,.#+;:_'*~\u00b0 this works without any problems and without using any kind of \"hack\". Now if we just strait up try to type in ' \u00e4 ' or ' \u00df ' to let it render as text, it will not look as intended. In order to fix this problem we have to use the \"raw\" version of said characters. Example: \\197 prints: \u00c4 So in order to print special characters, just replace them in the code like this: 1 Isaac . RenderText ( \"S \\228 mple text\" , 50 , 30 , 1 , 1 , 1 , 255 ) prints: S\u00e4mple text List of all supported characters and their counterpart \u2693\ufe0e Creating .fnt files \u2693\ufe0e The Developer __Kilburn_ mentioned that fonts can be created using this Tool: https://www.angelcode.com/products/bmfont . The best results can be made by converting Bitmap fonts, since they allow for smaller fontsizes. Font Settings: Font - choose a font thats very readable in small sizes (~8-10px height) Charset - Unicode Size - the general size of the characters in pixels. normal values are between 10 and 16 Height - can be used to squish/strech the Match char height - the charactersize will be choosen based on the character, and not the size defined in Size Bold / Italic - What font styling should be used Output invalid char glyph - Characters that dont have a sprite will be put on the spritesheet, too. This can create holes in the spritesheet Do not include kerning pairs - ? Rasterization - used to smooth the font sprites. Not recommended for Isaac since we want pixel-perfect fonts! Outline thickness - Define if an outline should be drawn around the character. In Isaac, this is always ~1px Export Options: Padding - Padding around each character, in pixels Spacing - Space between characters, in pixels Equalize the cell heights - will align all characters in a way, so they take up the least space vertically. off = they group in more uniform rows Width / Height - Width and Height of each character spritesheet. If spritesheet isnt big enough, multiple files will be created Bit depth - how many Bits should be used per color. ALWAYS choose 32 bit! Pack chars in multiple Channels - Dont use this. We need all channels for out font because of transparencies! File format - Choose Binary to create \".fnt\" files Textures - always set it to \"png\" Compression - (only one option available)","title":"Tutorial - Render text"},{"location":"tutorials/Tutorial-Rendertext/#tutorial-render-text-ingame","text":"","title":"Tutorial: Render text ingame"},{"location":"tutorials/Tutorial-Rendertext/#fonts-used-by-the-game","text":"The Following fonts are used by the game and can be used with the Font() class: Font Name Ingame Name/s Ingame Example Ingame Usage Link to font Droid Sans droid Example Droid (Not used ingame) Droid Sans PF Tempesta Seven (Condensed) pftempestasevencondensed Example PF Tempesta Seven HUD Elements like coin/key counters PF Tempesta Seven Team Meat Font teammeatfont10 teammeatfont12 teammeatfont16 teammeatfont16bold Example teammeatfont10 Example teammeatfont12 Example teammeatfont16 Example teammeatfont16bold Main Menu Elements Pop-Ups Timer / Score Elements Team Meat Font without Bold Terminus terminus terminus8 Example Terminus Example Terminus8 Debug Console / Isaac.RenderText() Terminus Upheaval upheaval Example Upheaval Streak text Upheaval mplus (Japanese) mplus_10r mplus_12b Example mplus_10r Example mplus_12b Replacement for all fonts aboth for Japanese translation. 10r is pf \"Tempesta seven\" / \"Team Meat\" replacement 12b is \"Upheaval\" replacement PixelMplus (M+ Fonts) kr Font (Korean) kr_font12 kr_font14 Example kr_font12 Example kr_font14 TBD No source found right now Team Meat Font (Korean) kr_meatfont14 Example kr_meatfont14 TBD - Not available -","title":"Fonts used by the game"},{"location":"tutorials/Tutorial-Rendertext/#basics-of-rendering-a-text","text":"First we need to have a look at the basic process of writing on the screen. here is a sample code: 1 2 3 4 5 6 7 local testmod = RegisterMod ( \"testmod\" , 1 ); local function onRender ( t ) Isaac . RenderText ( \"Sample text\" , 50 , 30 , 1 , 1 , 1 , 255 ) end testmod : AddCallback ( ModCallbacks . MC_POST_RENDER , onRender ) Result: The game uses the font-file \"terminus.fnt\" in order to render and display this text. this cant be changed. Luckily for us, this file contains \"sprites\" for all normal ASCII characters that exist out there (256 to be precise).","title":"Basics of rendering a text"},{"location":"tutorials/Tutorial-Rendertext/#rendering-text-with-a-different-font","text":"We can render any kind of text with a different font as well. This can be done by using the \"Font()\" class and its functions.","title":"Rendering text with a different font"},{"location":"tutorials/Tutorial-Rendertext/#example-code","text":"1 2 3 local f = Font () -- init font object f : Load ( \"font/droid.fnt\" ) -- load a font into the font object f : DrawString ( \"droid\" , 60 , 50 , KColor ( 1 , 1 , 1 , 1 , 0 , 0 , 0 ), 0 , true ) -- render string with loaded font on position 60x50y","title":"Example code:"},{"location":"tutorials/Tutorial-Rendertext/#all-possible-fonts-that-can-be-drawn","text":"","title":"All possible Fonts that can be drawn:"},{"location":"tutorials/Tutorial-Rendertext/#render-special-characters","text":"The game allows us to write anything into the \"displayed text\" argument that is part of the ASCII standard for characters. For characters a-z, 0-9 and ,.#+;:_'*~\u00b0 this works without any problems and without using any kind of \"hack\". Now if we just strait up try to type in ' \u00e4 ' or ' \u00df ' to let it render as text, it will not look as intended. In order to fix this problem we have to use the \"raw\" version of said characters. Example: \\197 prints: \u00c4 So in order to print special characters, just replace them in the code like this: 1 Isaac . RenderText ( \"S \\228 mple text\" , 50 , 30 , 1 , 1 , 1 , 255 ) prints: S\u00e4mple text","title":"Render Special Characters"},{"location":"tutorials/Tutorial-Rendertext/#list-of-all-supported-characters-and-their-counterpart","text":"","title":"List of all supported characters and their counterpart"},{"location":"tutorials/Tutorial-Rendertext/#creating-fnt-files","text":"The Developer __Kilburn_ mentioned that fonts can be created using this Tool: https://www.angelcode.com/products/bmfont . The best results can be made by converting Bitmap fonts, since they allow for smaller fontsizes. Font Settings: Font - choose a font thats very readable in small sizes (~8-10px height) Charset - Unicode Size - the general size of the characters in pixels. normal values are between 10 and 16 Height - can be used to squish/strech the Match char height - the charactersize will be choosen based on the character, and not the size defined in Size Bold / Italic - What font styling should be used Output invalid char glyph - Characters that dont have a sprite will be put on the spritesheet, too. This can create holes in the spritesheet Do not include kerning pairs - ? Rasterization - used to smooth the font sprites. Not recommended for Isaac since we want pixel-perfect fonts! Outline thickness - Define if an outline should be drawn around the character. In Isaac, this is always ~1px Export Options: Padding - Padding around each character, in pixels Spacing - Space between characters, in pixels Equalize the cell heights - will align all characters in a way, so they take up the least space vertically. off = they group in more uniform rows Width / Height - Width and Height of each character spritesheet. If spritesheet isnt big enough, multiple files will be created Bit depth - how many Bits should be used per color. ALWAYS choose 32 bit! Pack chars in multiple Channels - Dont use this. We need all channels for out font because of transparencies! File format - Choose Binary to create \".fnt\" files Textures - always set it to \"png\" Compression - (only one option available)","title":"Creating .fnt files"},{"location":"tutorials/Usingadditional.luaFiles/","text":"Tutorial: Using additional .lua Files \u2693\ufe0e If you want to load an additional .lua file besides your main.lua file, you can use the \"require\" function. Note Reloading a mod that uses this method of loading additional files using the command \"luamod\" will not load the extra files correctly. Content \"secondFile.lua\": \u2693\ufe0e 1 x = \"Hello world\" --define a new global variable x Content \"main.lua\": \u2693\ufe0e 1 2 require ( \"secondFile\" ) print ( x ) This prints: \u2693\ufe0e 1 \"Hello world\" Navigating into folders \u2693\ufe0e You can navigate into folders, by seperating the path with a \".\" Content \"folder1/folder2/secondFile.lua\": \u2693\ufe0e 1 x = \"Hello world\" --define a new global variable x Content \"main.lua\": \u2693\ufe0e 1 2 require ( \"folder1.folder2.secondFile\" ) print ( x ) This prints: \u2693\ufe0e 1 \"Hello world\" Load extra files with \"luamod\"-command consistency \u2693\ufe0e If you want to load additional files the most correct way, you have to intentionally cause an error in the extra file and catch it in the main file. The following code is an example for this method: Content \"secondFile.lua\": \u2693\ufe0e 1 2 3 x = \"Hello world\" --define a new global variable x --end of the file Err : ForceError () --call a nonexistent function to throw an error intentionally Content \"main.lua\": \u2693\ufe0e 1 2 3 4 5 6 7 8 9 10 11 12 local _ , err = pcall ( require , \"filename\" ) --change filename here --The following code catches errors and handles them nicely. err = tostring ( err ) if not string.match ( err , \"attempt to call a nil value %(method 'ForceError'%)\" ) then if string.match ( err , \"true\" ) then err = \"Error: require passed in config\" end Isaac . DebugString ( err ) print ( err ) end -- end of errorhandling print ( x ) This prints: \u2693\ufe0e 1 \"Hello world\" Using Sockets and other general lua-modules \u2693\ufe0e The following functions/objects are available from within the lua-api: Always Available Only available with --luadebug json (with require(\"json\") ) socket (with require(\"socket\") ) assert debug collectgarbage io coroutine os dofile package error require (not modified*) getmetatable ipairs load loadfile math next pairs pcall print rawequal rawget rawlen rawset require (modified*) select setmetatable string table tonumber tostring type utf8 xpcall --luadebug \u2693\ufe0e --luadebug is an argument that can be defined as a launchparameter of the game. It enables additional and potential harmful features of the lua interpreter. To enable it, navigate in steam to \"Library -> Right click on Isaac -> Preferences -> General -> launchoptions\" and then write --luadebug inside the textfield. What it does \u2693\ufe0e The flag enables the packages listed on the right side of the table aboth and propably enables the original require function to be called instead of the altered version, which transforms the filepath into a path ending with \".lua\". Networking and socket \u2693\ufe0e To enable network and socket features, the --luadebug needs to be set. otherwise, the module cant be loaded. Possible problems using --luadebug \u2693\ufe0e In general, --luadebug enables all features of the lua language, including extremely harmful features like \"os\". With that, it is possible to open, write or even delete any file on the system even if it is not related to the game itself. The game's \"main.lua\" file \u2693\ufe0e Inside the \"scripts\" folder of the game, a unique \"main.lua\" file can be found which acts independently from the rest of the other mods. The file will always the loaded and executed even if the modding api is turned off (at least one mod activated). This allows us to execute lua code even in scenarios its normally not possible, like in daily runs. Nice to know: if you use \"ModData\" inside this \"main.lua\" file, the \"saveX.dat\" files get placed next to this file inside the games resources/scripts folder.","title":"Using additional .lua Files"},{"location":"tutorials/Usingadditional.luaFiles/#tutorial-using-additional-lua-files","text":"If you want to load an additional .lua file besides your main.lua file, you can use the \"require\" function. Note Reloading a mod that uses this method of loading additional files using the command \"luamod\" will not load the extra files correctly.","title":"Tutorial: Using additional .lua Files"},{"location":"tutorials/Usingadditional.luaFiles/#navigating-into-folders","text":"You can navigate into folders, by seperating the path with a \".\"","title":"Navigating into folders"},{"location":"tutorials/Usingadditional.luaFiles/#load-extra-files-with-luamod-command-consistency","text":"If you want to load additional files the most correct way, you have to intentionally cause an error in the extra file and catch it in the main file. The following code is an example for this method:","title":"Load extra files with \"luamod\"-command consistency"},{"location":"tutorials/Usingadditional.luaFiles/#using-sockets-and-other-general-lua-modules","text":"The following functions/objects are available from within the lua-api: Always Available Only available with --luadebug json (with require(\"json\") ) socket (with require(\"socket\") ) assert debug collectgarbage io coroutine os dofile package error require (not modified*) getmetatable ipairs load loadfile math next pairs pcall print rawequal rawget rawlen rawset require (modified*) select setmetatable string table tonumber tostring type utf8 xpcall","title":"Using Sockets and other general lua-modules"},{"location":"tutorials/Usingadditional.luaFiles/#-luadebug","text":"--luadebug is an argument that can be defined as a launchparameter of the game. It enables additional and potential harmful features of the lua interpreter. To enable it, navigate in steam to \"Library -> Right click on Isaac -> Preferences -> General -> launchoptions\" and then write --luadebug inside the textfield.","title":"--luadebug"},{"location":"tutorials/Usingadditional.luaFiles/#the-games-mainlua-file","text":"Inside the \"scripts\" folder of the game, a unique \"main.lua\" file can be found which acts independently from the rest of the other mods. The file will always the loaded and executed even if the modding api is turned off (at least one mod activated). This allows us to execute lua code even in scenarios its normally not possible, like in daily runs. Nice to know: if you use \"ModData\" inside this \"main.lua\" file, the \"saveX.dat\" files get placed next to this file inside the games resources/scripts folder.","title":"The game's \"main.lua\" file"},{"location":"tutorials/Writingscreenshaders/","text":"Tutorial: Writing screen shaders \u2693\ufe0e In order to write your screen shader you need to create ' shaders.xml ' in the ' content ' folder that is part of your Mod folder . shaders.xml should have the following structure: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <shaders> <shader name= \"SHADER_NAME\" > <parameters> <param name= \"PARAMETER_NAME\" type= \"PARAMETER_TYPE\" /> ... </parameters> <vertex> <![CDATA[ VERTEX_SHADER ]]> </vertex> <fragment> <![CDATA[ FRAGMENT_SHADER ]]> </fragment> </shader> <shader name= \"...\" > ... </shader> </shaders> where: SHADER_NAME is the shader name PARAMETER_NAME is the name of each custom parameter you want to pass from Lua PARAMETER_TYPE is one of the following: float , vec2 , vec3 , vec4 VERTEX_SHADER is your vertex shader which should always include these attributes: 1 2 3 4 5 6 7 8 attribute vec3 Position; attribute vec4 Color; attribute vec2 TexCoord; attribute vec4 RenderData; attribute float Scale; ...your attributes... uniform mat4 Transform; ... FRAGMENT_SHADER is your fragment shader which again should contain at least these: 1 2 3 4 5 varying lowp vec4 Color0; varying mediump vec2 TexCoord0; varying lowp vec4 RenderDataOut; varying lowp float ScaleOut; uniform sampler2D Texture0; RenderData.xy contains the window size, while RenderData.zw is the texture size. Scale contains Isaac's room scale based on the window size. You can see the scale in action when you resize the window and the game keeps its content fixed for a certain amount of pixels then snaps to another zoom level. Because of engine limitation we can only pass data through the vertex shader. An example of a shader with custom parameters: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 <shaders> <shader name= \"RandomColors\" > <parameters> <param name= \"PlayerPos\" type= \"vec2\" /> <param name= \"Time\" type= \"float\" /> </parameters> <vertex> <![CDATA[ attribute vec3 Position; attribute vec4 Color; attribute vec2 TexCoord; attribute vec4 RenderData; attribute float Scale; attribute vec2 PlayerPos; attribute float Time; varying vec4 Color0; varying vec2 TexCoord0; varying vec4 RenderDataOut; varying float ScaleOut; varying vec2 PlayerPosOut; varying float TimeOut; uniform mat4 Transform; void main(void) { RenderDataOut = RenderData; ScaleOut = Scale; // Passing data to fragment shader PlayerPosOut = PlayerPos; // Passing data to fragment shader TimeOut = Time; // Passing data to fragment shader Color0 = Color; TexCoord0 = TexCoord; gl_Position = Transform * vec4(Position.xyz, 1.0); } ]]> </vertex> <fragment> <![CDATA[ varying lowp vec4 Color0; varying mediump vec2 TexCoord0; varying lowp vec4 RenderDataOut; varying lowp float ScaleOut; varying mediump vec2 PlayerPosOut; varying lowp float TimeOut; uniform sampler2D Texture0; void main(void) { vec4 Color = Color0 * texture2D(Texture0, TexCoord0); Color.r *= PlayerPosOut.x * 0.5f; Color.g *= PlayerPosOut.y * 0.5f; Color.b *= sin(TimeOut * 0.1f); gl_FragColor = Color; } ]]> </fragment> </shader> </shaders> To pass the parameters we use the following Lua code: 1 2 3 4 5 6 7 8 9 10 local mod = RegisterMod ( \"ShaderMod\" , 1 ) function mod : GetShaderParams ( shaderName ) local params = { PlayerPos = { Isaac . GetPlayer ( 0 ). Position . X / 100.0 , Isaac . GetPlayer ( 0 ). Position . Y / 100.0 }, Time = Isaac . GetFrameCount () } return params ; end mod : AddCallback ( ModCallbacks . MC_GET_SHADER_PARAMS , mod . GetShaderParams )","title":"Writing screen shaders"},{"location":"tutorials/Writingscreenshaders/#tutorial-writing-screen-shaders","text":"In order to write your screen shader you need to create ' shaders.xml ' in the ' content ' folder that is part of your Mod folder . shaders.xml should have the following structure: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <shaders> <shader name= \"SHADER_NAME\" > <parameters> <param name= \"PARAMETER_NAME\" type= \"PARAMETER_TYPE\" /> ... </parameters> <vertex> <![CDATA[ VERTEX_SHADER ]]> </vertex> <fragment> <![CDATA[ FRAGMENT_SHADER ]]> </fragment> </shader> <shader name= \"...\" > ... </shader> </shaders> where: SHADER_NAME is the shader name PARAMETER_NAME is the name of each custom parameter you want to pass from Lua PARAMETER_TYPE is one of the following: float , vec2 , vec3 , vec4 VERTEX_SHADER is your vertex shader which should always include these attributes: 1 2 3 4 5 6 7 8 attribute vec3 Position; attribute vec4 Color; attribute vec2 TexCoord; attribute vec4 RenderData; attribute float Scale; ...your attributes... uniform mat4 Transform; ... FRAGMENT_SHADER is your fragment shader which again should contain at least these: 1 2 3 4 5 varying lowp vec4 Color0; varying mediump vec2 TexCoord0; varying lowp vec4 RenderDataOut; varying lowp float ScaleOut; uniform sampler2D Texture0; RenderData.xy contains the window size, while RenderData.zw is the texture size. Scale contains Isaac's room scale based on the window size. You can see the scale in action when you resize the window and the game keeps its content fixed for a certain amount of pixels then snaps to another zoom level. Because of engine limitation we can only pass data through the vertex shader. An example of a shader with custom parameters: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 <shaders> <shader name= \"RandomColors\" > <parameters> <param name= \"PlayerPos\" type= \"vec2\" /> <param name= \"Time\" type= \"float\" /> </parameters> <vertex> <![CDATA[ attribute vec3 Position; attribute vec4 Color; attribute vec2 TexCoord; attribute vec4 RenderData; attribute float Scale; attribute vec2 PlayerPos; attribute float Time; varying vec4 Color0; varying vec2 TexCoord0; varying vec4 RenderDataOut; varying float ScaleOut; varying vec2 PlayerPosOut; varying float TimeOut; uniform mat4 Transform; void main(void) { RenderDataOut = RenderData; ScaleOut = Scale; // Passing data to fragment shader PlayerPosOut = PlayerPos; // Passing data to fragment shader TimeOut = Time; // Passing data to fragment shader Color0 = Color; TexCoord0 = TexCoord; gl_Position = Transform * vec4(Position.xyz, 1.0); } ]]> </vertex> <fragment> <![CDATA[ varying lowp vec4 Color0; varying mediump vec2 TexCoord0; varying lowp vec4 RenderDataOut; varying lowp float ScaleOut; varying mediump vec2 PlayerPosOut; varying lowp float TimeOut; uniform sampler2D Texture0; void main(void) { vec4 Color = Color0 * texture2D(Texture0, TexCoord0); Color.r *= PlayerPosOut.x * 0.5f; Color.g *= PlayerPosOut.y * 0.5f; Color.b *= sin(TimeOut * 0.1f); gl_FragColor = Color; } ]]> </fragment> </shader> </shaders> To pass the parameters we use the following Lua code: 1 2 3 4 5 6 7 8 9 10 local mod = RegisterMod ( \"ShaderMod\" , 1 ) function mod : GetShaderParams ( shaderName ) local params = { PlayerPos = { Isaac . GetPlayer ( 0 ). Position . X / 100.0 , Isaac . GetPlayer ( 0 ). Position . Y / 100.0 }, Time = Isaac . GetFrameCount () } return params ; end mod : AddCallback ( ModCallbacks . MC_GET_SHADER_PARAMS , mod . GetShaderParams )","title":"Tutorial: Writing screen shaders"},{"location":"tutorials/ZeroBraneStudio/","text":"[Tutorial] Debugging with ZeroBrane Studio \u2693\ufe0e Debuggers are very valuable tools to diagnose problems with your code when you don't know exactly what your program is doing! You can get by with simple debug print statements, but some things are easier to track down with a debugger. Download and install ZeroBrane Studio for your platform of choice. Add --luadebug to your launch options for Isaac on Steam. Properties > General > Set Launch Options. The debugger will not work without this command line option. In Zerobrane, Open your Lua file. Go to the Project menu > Project Directory > Set from Current File. Project > Start debugger server. You may get a popup to allow ZeroBrane to have network access. Add this line at the top of your main.lua file: StartDebug() Start the game. The game will freeze up when the debugger triggers an automatic breakpoint. Now you can hit the green arrow button to continue execution. Check the ZeroBrane documentation if you need help with its debugging features. We strongly advise disabling --luadebug after you're done if you don't need access to the debug features!","title":"Debugging with ZeroBrane Studio"},{"location":"tutorials/ZeroBraneStudio/#tutorial-debugging-with-zerobrane-studio","text":"Debuggers are very valuable tools to diagnose problems with your code when you don't know exactly what your program is doing! You can get by with simple debug print statements, but some things are easier to track down with a debugger. Download and install ZeroBrane Studio for your platform of choice. Add --luadebug to your launch options for Isaac on Steam. Properties > General > Set Launch Options. The debugger will not work without this command line option. In Zerobrane, Open your Lua file. Go to the Project menu > Project Directory > Set from Current File. Project > Start debugger server. You may get a popup to allow ZeroBrane to have network access. Add this line at the top of your main.lua file: StartDebug() Start the game. The game will freeze up when the debugger triggers an automatic breakpoint. Now you can hit the green arrow button to continue execution. Check the ZeroBrane documentation if you need help with its debugging features. We strongly advise disabling --luadebug after you're done if you don't need access to the debug features!","title":"[Tutorial] Debugging with ZeroBrane Studio"},{"location":"tutorials/faq/","text":"Modding FAQ \u2693\ufe0e Afterbirth+ \u2693\ufe0e Do mods disable Achievements? \u2693\ufe0e Mods don't disable achievements , as long as you have killed mom (Endboss of Necropolis or Depths 2) at least once on the savefile. Killing her on challenges or dailies doesnt count. How do i install a mod? \u2693\ufe0e Simply press the \" subscribe \" button on the Workshop page. This will automatically download and install the mod. Just start your game again afterwards, and the mod will be listed in the \"mods\" menu in the main menu where it can be activated/deactivated. Do i need to have all DLCs installed to use mods? \u2693\ufe0e Yes , you need the basegame \"Rebirth\", the first DLC \"Afterbirth\" and the second DLC \"Afterbirth+\" installed to use mods. Do Rebirth / Afterbirth mods work with Afterbirth+? \u2693\ufe0e This depends on the mod, but in most cases, they don't work. How do i open the Debug console? \u2693\ufe0e The Debug console is accessable as long as you have at least one mod activated. To open the console, press the grave/tilde (~) key while in a run, or the appropriate key according to the keyboard used, as listed HERE . For a list of console commands, take a look at the wiki: BoI Wiki Where can i find the mod files? \u2693\ufe0e All mods are located in this location: Windows : 1 C : \\ Users \\ [ YOURUSERNAME ] \\ Documents \\ My Games \\ Binding of Isaac Afterbirth + Mods \\ Linux : 1 / Steam / steamapps / compatdata / 250900 / pfx / drive_c / users / steamuser / Documents / My Games / Binding of Isaac Afterbirth + Mods Mods are not visible in \"mods\" menu after subscription \u2693\ufe0e if mods are not visible in the mods folder even after you subscribed to the mod on the Steam Workshop, it could be caused by the following: You dont own all DLCs (Afterbirth and Afterbirth+). All Steam Workshop mods require those two DLCs to be installed in order for them to work correctly. Your Windows / Mac Username does contain special characters, that are not part of the standard english alphabet. Since the game is not able to interpret those correctly, it cant find the mods folder. In order to fix this issue, you sadly have to create a new Windows User on your computer which name only contains english characters. A mod doesn't work correctly \u2693\ufe0e If a mod doesn`t work for you, there are multiple possible solutions: Check if the mod is listed and enabled in the \"mods\" menu. See the question aboth if that is not the case. Close the game, unsubscribe from the mod on the Workshop, delete the Mod Check if the Debug Console contains any Error messages. How to open the Console . If the error message reads ... attempt to call a nil value (global 'RegisterMod') , your game files are corrupt and you need to do Step 5 . Disable all other mods you have installed and see if one of those caused any errors. Execute the \"Verify Game cache files\" function in steam for the Game. Step by step guide can be found here Verify Game Cache Files [inxile.zendesk.com] A big mod has invisible enemies, and everything seems broken \u2693\ufe0e It is highly likely that this is due to Steam not downloading all of the mod's files, rather than any error in the mod. Here are a couple of steps you can take to try to fix it: Close the game Unsubscribe from the mod on Steam Find your Binding of Isaac Afterbirth+ Mods folder (See here ) Delete the folder of the broken mod Open the game, then close it after it finished loading (intro cutscene plays) Resubscribe to the mod Open the game again. DON'T close the game when it seems to not respond anymore This process will delete all instances of the mod files, allowing steam to try and download them all again.","title":"FAQ"},{"location":"tutorials/faq/#modding-faq","text":"","title":"Modding FAQ"},{"location":"tutorials/faq/#afterbirth","text":"","title":"Afterbirth+"},{"location":"tutorials/faq/#do-mods-disable-achievements","text":"Mods don't disable achievements , as long as you have killed mom (Endboss of Necropolis or Depths 2) at least once on the savefile. Killing her on challenges or dailies doesnt count.","title":"Do mods disable Achievements?"},{"location":"tutorials/faq/#how-do-i-install-a-mod","text":"Simply press the \" subscribe \" button on the Workshop page. This will automatically download and install the mod. Just start your game again afterwards, and the mod will be listed in the \"mods\" menu in the main menu where it can be activated/deactivated.","title":"How do i install a mod?"},{"location":"tutorials/faq/#do-i-need-to-have-all-dlcs-installed-to-use-mods","text":"Yes , you need the basegame \"Rebirth\", the first DLC \"Afterbirth\" and the second DLC \"Afterbirth+\" installed to use mods.","title":"Do i need to have all DLCs installed to use mods?"},{"location":"tutorials/faq/#do-rebirth-afterbirth-mods-work-with-afterbirth","text":"This depends on the mod, but in most cases, they don't work.","title":"Do Rebirth / Afterbirth mods work with Afterbirth+?"},{"location":"tutorials/faq/#how-do-i-open-the-debug-console","text":"The Debug console is accessable as long as you have at least one mod activated. To open the console, press the grave/tilde (~) key while in a run, or the appropriate key according to the keyboard used, as listed HERE . For a list of console commands, take a look at the wiki: BoI Wiki","title":"How do i open the Debug console?"},{"location":"tutorials/faq/#where-can-i-find-the-mod-files","text":"All mods are located in this location: Windows : 1 C : \\ Users \\ [ YOURUSERNAME ] \\ Documents \\ My Games \\ Binding of Isaac Afterbirth + Mods \\ Linux : 1 / Steam / steamapps / compatdata / 250900 / pfx / drive_c / users / steamuser / Documents / My Games / Binding of Isaac Afterbirth + Mods","title":"Where can i find the mod files?"},{"location":"tutorials/faq/#mods-are-not-visible-in-mods-menu-after-subscription","text":"if mods are not visible in the mods folder even after you subscribed to the mod on the Steam Workshop, it could be caused by the following: You dont own all DLCs (Afterbirth and Afterbirth+). All Steam Workshop mods require those two DLCs to be installed in order for them to work correctly. Your Windows / Mac Username does contain special characters, that are not part of the standard english alphabet. Since the game is not able to interpret those correctly, it cant find the mods folder. In order to fix this issue, you sadly have to create a new Windows User on your computer which name only contains english characters.","title":"Mods are not visible in \"mods\" menu after subscription"},{"location":"tutorials/faq/#a-mod-doesnt-work-correctly","text":"If a mod doesn`t work for you, there are multiple possible solutions: Check if the mod is listed and enabled in the \"mods\" menu. See the question aboth if that is not the case. Close the game, unsubscribe from the mod on the Workshop, delete the Mod Check if the Debug Console contains any Error messages. How to open the Console . If the error message reads ... attempt to call a nil value (global 'RegisterMod') , your game files are corrupt and you need to do Step 5 . Disable all other mods you have installed and see if one of those caused any errors. Execute the \"Verify Game cache files\" function in steam for the Game. Step by step guide can be found here Verify Game Cache Files [inxile.zendesk.com]","title":"A mod doesn't work correctly"},{"location":"tutorials/faq/#a-big-mod-has-invisible-enemies-and-everything-seems-broken","text":"It is highly likely that this is due to Steam not downloading all of the mod's files, rather than any error in the mod. Here are a couple of steps you can take to try to fix it: Close the game Unsubscribe from the mod on Steam Find your Binding of Isaac Afterbirth+ Mods folder (See here ) Delete the folder of the broken mod Open the game, then close it after it finished loading (intro cutscene plays) Resubscribe to the mod Open the game again. DON'T close the game when it seems to not respond anymore This process will delete all instances of the mod files, allowing steam to try and download them all again.","title":"A big mod has invisible enemies, and everything seems broken"},{"location":"xml/XMLFiledocumentation/","text":"XML-File Documentations \u2693\ufe0e The game uses .XML files to store alot of ingame contents in an easily readable and editable format.","title":"XML Overview"},{"location":"xml/XMLFiledocumentation/#xml-file-documentations","text":"The game uses .XML files to store alot of ingame contents in an easily readable and editable format.","title":"XML-File Documentations"},{"location":"xml/achievements/","text":"File \"achievements.xml\" \u2693\ufe0e This file is used to store general informations about the ingame achievements. Resource-Folder : Placing this file in your mods \"resource\" folder will replace the original file. Content-Folder : Placing this file in your mods \"content\" folder has no effect! Variable-Name Possible Values Description id int Ingame-Id of the Achievement text string Description gfx string .png file path based on the \"gfxroot\" attribute of the \"achievements\" xml root. steam_name string Name of achievement on Steam steam_description string Description (not used) steam_icon string Icon name of the achievement sprite for Steam.","title":"achievements.xml"},{"location":"xml/achievements/#file-achievementsxml","text":"This file is used to store general informations about the ingame achievements. Resource-Folder : Placing this file in your mods \"resource\" folder will replace the original file. Content-Folder : Placing this file in your mods \"content\" folder has no effect! Variable-Name Possible Values Description id int Ingame-Id of the Achievement text string Description gfx string .png file path based on the \"gfxroot\" attribute of the \"achievements\" xml root. steam_name string Name of achievement on Steam steam_description string Description (not used) steam_icon string Icon name of the achievement sprite for Steam.","title":"File \"achievements.xml\""},{"location":"xml/ambush/","text":"File \"ambush.xml\" \u2693\ufe0e This file is used to store spawning patterns for the wave system of Ambush rooms. Resource-Folder : Using this file in a resource folder of a mod is not tested yet. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description todo","title":"ambush.xml"},{"location":"xml/ambush/#file-ambushxml","text":"This file is used to store spawning patterns for the wave system of Ambush rooms. Resource-Folder : Using this file in a resource folder of a mod is not tested yet. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description todo","title":"File \"ambush.xml\""},{"location":"xml/babies/","text":"File \"babies.xml\" \u2693\ufe0e This file is used to store informations about coop-babies. Placing this file in a resource folder of a mod and removing entries causes crashes. Resource-Folder : Using this file in a resource folder and modifying it can cause crashes. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description id int Identifier of the Baby name string Name of the Baby skin string Filepath to the .png file used by the baby achievement int Achievement id needed tp unlock this Baby","title":"babies.xml"},{"location":"xml/babies/#file-babiesxml","text":"This file is used to store informations about coop-babies. Placing this file in a resource folder of a mod and removing entries causes crashes. Resource-Folder : Using this file in a resource folder and modifying it can cause crashes. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description id int Identifier of the Baby name string Name of the Baby skin string Filepath to the .png file used by the baby achievement int Achievement id needed tp unlock this Baby","title":"File \"babies.xml\""},{"location":"xml/backdrops/","text":"File \"backdrops.xml\" \u2693\ufe0e This page needs some content. You can contribute to it using the Edit Button! old tutorial: https://www.reddit.com/r/themoddingofisaac/comments/34bhi4/backdrops_explained/ Resource-Folder : Using this file in a resource folder of a mod is not tested yet. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description todo","title":"backdrops.xml"},{"location":"xml/backdrops/#file-backdropsxml","text":"This page needs some content. You can contribute to it using the Edit Button! old tutorial: https://www.reddit.com/r/themoddingofisaac/comments/34bhi4/backdrops_explained/ Resource-Folder : Using this file in a resource folder of a mod is not tested yet. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description todo","title":"File \"backdrops.xml\""},{"location":"xml/bosscolors/","text":"File \"bosscolors.xml\" \u2693\ufe0e This page needs some content. You can contribute to it using the Edit Button! Resource-Folder : Using this file in a resource folder of a mod is not tested yet. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description todo","title":"bosscolors.xml"},{"location":"xml/bosscolors/#file-bosscolorsxml","text":"This page needs some content. You can contribute to it using the Edit Button! Resource-Folder : Using this file in a resource folder of a mod is not tested yet. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description todo","title":"File \"bosscolors.xml\""},{"location":"xml/bossportraits/","text":"File \"bossportraits.xml\" \u2693\ufe0e This page needs some content. You can contribute to it using the Edit Button! Resource-Folder : Using this file in a resource folder of a mod is not tested yet. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description todo","title":"bossportraits.xml"},{"location":"xml/bossportraits/#file-bossportraitsxml","text":"This page needs some content. You can contribute to it using the Edit Button! Resource-Folder : Using this file in a resource folder of a mod is not tested yet. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description todo","title":"File \"bossportraits.xml\""},{"location":"xml/challenges/","text":"File \"challenges.xml\" \u2693\ufe0e Used to store all challenges and some of their attributes. Resource-Folder : Placing this file in a resource folder of a mod will override the original. Content-Folder : Placing this file in a content folder of a mod will add a new Custom challenge . Variable-Name Possible Values Description id int Ingame-Id of the Challenge (Not needed for Content Folder) name string Name of the Challenge startingitems string list Comma separated (nospace) item ids that will be added at the start. startingtrinkets string list comma separated (nospace) trinket ids that will be added at the start (max 2) startingpill string list startingpill = effect id of the starting pill (-1 for no pill playertype string player type id (0 for Isaac endstage string the last stage of the challenge (use LevelStage internal ids) roomfilter string list list of room ids to not be generated in challenge [Not all room ids can be used] (NORMAL - 1, Shop - 2, Error - 3, Treasure - 4, Boss - 5, Miniboss - 6, Secret - 7, SuperSecret - 8, Arcade - 9, Curse - 10, Challenge - 11, Library - 12, Sacrifice - 13, Devil - 14, Angel - 15, Dungeon - 16, Bossrush - 17, Isaacs - 18, Barren - 19, Chest - 20, Dice - 21, BMarket - 22). cursefilter string bitmask for curses to be removed (Darkness = 1, Labyrinth = 2, Lost = 4, Unknown = 8, Cursed = 16) getcurse string bitmask for curses to be forced (Same id's as curse filter) achievements string list list of achievement ids that are required to be able to play the challenge altpath bool alternative floor for light/dark path (isaac/satan) canshoot bool determines if player can shoot (true redhp int Add red hp to the base of the choosen character. 2 = 1 Heart. Negative numbers possible maxhp int Add red hp containers to the base of the choosen character. 2 = 1 Heartcontainer. Negative numbers possible soulhp int Add soul hp containers to the base of the choosen character. 2 = 1 Heartcontainer blackhp int Add black hp containers to the base of the choosen character. 2 = 1 Heartcontainer coins int Add starting coins maxdamage bool Max. damage actived (clamps at min 100) or deactivated adddamage float + damage up minfirerate float minimal fire rate or more minshotspeed bool minimal shot speed actived or deactivated bigrange bool Enable high starting range value difficulty bool game difficulty (0 - normal megasatan bool last boss is megasatan. Adds the Key to the player.","title":"challenges.xml"},{"location":"xml/challenges/#file-challengesxml","text":"Used to store all challenges and some of their attributes. Resource-Folder : Placing this file in a resource folder of a mod will override the original. Content-Folder : Placing this file in a content folder of a mod will add a new Custom challenge . Variable-Name Possible Values Description id int Ingame-Id of the Challenge (Not needed for Content Folder) name string Name of the Challenge startingitems string list Comma separated (nospace) item ids that will be added at the start. startingtrinkets string list comma separated (nospace) trinket ids that will be added at the start (max 2) startingpill string list startingpill = effect id of the starting pill (-1 for no pill playertype string player type id (0 for Isaac endstage string the last stage of the challenge (use LevelStage internal ids) roomfilter string list list of room ids to not be generated in challenge [Not all room ids can be used] (NORMAL - 1, Shop - 2, Error - 3, Treasure - 4, Boss - 5, Miniboss - 6, Secret - 7, SuperSecret - 8, Arcade - 9, Curse - 10, Challenge - 11, Library - 12, Sacrifice - 13, Devil - 14, Angel - 15, Dungeon - 16, Bossrush - 17, Isaacs - 18, Barren - 19, Chest - 20, Dice - 21, BMarket - 22). cursefilter string bitmask for curses to be removed (Darkness = 1, Labyrinth = 2, Lost = 4, Unknown = 8, Cursed = 16) getcurse string bitmask for curses to be forced (Same id's as curse filter) achievements string list list of achievement ids that are required to be able to play the challenge altpath bool alternative floor for light/dark path (isaac/satan) canshoot bool determines if player can shoot (true redhp int Add red hp to the base of the choosen character. 2 = 1 Heart. Negative numbers possible maxhp int Add red hp containers to the base of the choosen character. 2 = 1 Heartcontainer. Negative numbers possible soulhp int Add soul hp containers to the base of the choosen character. 2 = 1 Heartcontainer blackhp int Add black hp containers to the base of the choosen character. 2 = 1 Heartcontainer coins int Add starting coins maxdamage bool Max. damage actived (clamps at min 100) or deactivated adddamage float + damage up minfirerate float minimal fire rate or more minshotspeed bool minimal shot speed actived or deactivated bigrange bool Enable high starting range value difficulty bool game difficulty (0 - normal megasatan bool last boss is megasatan. Adds the Key to the player.","title":"File \"challenges.xml\""},{"location":"xml/costumes2/","text":"File \"costumes2.xml\" \u2693\ufe0e Defines Costume informations. Resource-Folder : Placing this file in a resource folder of a mod will override the original. Content-Folder : Placing this file in a content folder of a mod will add a new Costumes. See the Tutorial on \"Adding Costumes\" for more informations. Variable-Name Possible Values Description id int Ingame-Id of the Costume. Will be overridden by the game when file is in content folder. anm2path string Path to the .anm2 file type string Type of the costume. Available: none priority int Priority of the costume. higher number means higher priority overwriteColor bool Define if a costume overrides the body color of the character (default: false) isFlying bool Define if a costume displays a flying character (default: false) skinColor int Define what skincolor that costume has. (default: 0) hasSkinAlt bool Define if a costume has alternative versions for all other the skin colors (default: false) hasOverlay bool Define if a costume has an overlayeffect (default: false)","title":"costumes2.xml"},{"location":"xml/costumes2/#file-costumes2xml","text":"Defines Costume informations. Resource-Folder : Placing this file in a resource folder of a mod will override the original. Content-Folder : Placing this file in a content folder of a mod will add a new Costumes. See the Tutorial on \"Adding Costumes\" for more informations. Variable-Name Possible Values Description id int Ingame-Id of the Costume. Will be overridden by the game when file is in content folder. anm2path string Path to the .anm2 file type string Type of the costume. Available: none priority int Priority of the costume. higher number means higher priority overwriteColor bool Define if a costume overrides the body color of the character (default: false) isFlying bool Define if a costume displays a flying character (default: false) skinColor int Define what skincolor that costume has. (default: 0) hasSkinAlt bool Define if a costume has alternative versions for all other the skin colors (default: false) hasOverlay bool Define if a costume has an overlayeffect (default: false)","title":"File \"costumes2.xml\""},{"location":"xml/curses/","text":"File \"curses.xml\" \u2693\ufe0e Stores the names and ids of the available curses. Resource-Folder : Placing this file inside a mods resources folder will rename curses. Content-Folder : Placing this file in a content folder of a mod will add a new Curse. The new curse must be applied using lua, since it cant be encountered normally! Variable-Name Possible Values Description id int Ingame-Id of the Curse. Will be overridden by the game when file is in content folder. name string Name of the Curse","title":"curses.xml"},{"location":"xml/curses/#file-cursesxml","text":"Stores the names and ids of the available curses. Resource-Folder : Placing this file inside a mods resources folder will rename curses. Content-Folder : Placing this file in a content folder of a mod will add a new Curse. The new curse must be applied using lua, since it cant be encountered normally! Variable-Name Possible Values Description id int Ingame-Id of the Curse. Will be overridden by the game when file is in content folder. name string Name of the Curse","title":"File \"curses.xml\""},{"location":"xml/cutscenes/","text":"File \"cutscenes.xml\" \u2693\ufe0e This page needs some content. You can contribute to it using the Edit Button! Resource-Folder : Using this file in a resource folder of a mod is not tested yet. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description todo","title":"cutscenes.xml"},{"location":"xml/cutscenes/#file-cutscenesxml","text":"This page needs some content. You can contribute to it using the Edit Button! Resource-Folder : Using this file in a resource folder of a mod is not tested yet. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description todo","title":"File \"cutscenes.xml\""},{"location":"xml/entities2/","text":"File \"entities2.xml\" \u2693\ufe0e This page needs some content. You can contribute to it using the Edit Button! old tutorial: https://www.reddit.com/r/themoddingofisaac/comments/36o00t/entitys_explained_how_to_add_entity_variants/ Resource-Folder : Using this file in a resource folder of a mod is not tested yet. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description todo","title":"entities2.xml"},{"location":"xml/entities2/#file-entities2xml","text":"This page needs some content. You can contribute to it using the Edit Button! old tutorial: https://www.reddit.com/r/themoddingofisaac/comments/36o00t/entitys_explained_how_to_add_entity_variants/ Resource-Folder : Using this file in a resource folder of a mod is not tested yet. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description todo","title":"File \"entities2.xml\""},{"location":"xml/fortunes/","text":"File \"fortunes.txt\" \u2693\ufe0e This file is used to store all \"fortunes\" displayed when using the \"Fortune Machine\" or similar. Fortunes-entries can have up to 3 rows and should be seperated with an empty line. Bug Having more than 24 character in a row will cause the text to flow outside of the display-box. Resource-Folder : Placing this file in your mods \"resource\" folder will replace the original file. Content-Folder : Placing this file in your mods \"content\" folder has no effect!","title":"fortunes.txt"},{"location":"xml/fortunes/#file-fortunestxt","text":"This file is used to store all \"fortunes\" displayed when using the \"Fortune Machine\" or similar. Fortunes-entries can have up to 3 rows and should be seperated with an empty line. Bug Having more than 24 character in a row will cause the text to flow outside of the display-box. Resource-Folder : Placing this file in your mods \"resource\" folder will replace the original file. Content-Folder : Placing this file in your mods \"content\" folder has no effect!","title":"File \"fortunes.txt\""},{"location":"xml/fxlayers/","text":"File \"fxlayers.xml\" \u2693\ufe0e This page needs some content. You can contribute to it using the Edit Button! Resource-Folder : Using this file in a resource folder of a mod is not tested yet. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description todo","title":"fxlayers.xml"},{"location":"xml/fxlayers/#file-fxlayersxml","text":"This page needs some content. You can contribute to it using the Edit Button! Resource-Folder : Using this file in a resource folder of a mod is not tested yet. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description todo","title":"File \"fxlayers.xml\""},{"location":"xml/giantbook/","text":"File \"giantbook.xml\" \u2693\ufe0e This page needs some content. You can contribute to it using the Edit Button! Resource-Folder : Using this file in a resource folder of a mod is not tested yet. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description todo","title":"giantbook.xml"},{"location":"xml/giantbook/#file-giantbookxml","text":"This page needs some content. You can contribute to it using the Edit Button! Resource-Folder : Using this file in a resource folder of a mod is not tested yet. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description todo","title":"File \"giantbook.xml\""},{"location":"xml/itempools/","text":"File \"itempools.xml\" \u2693\ufe0e This page needs some content. You can contribute to it using the Edit Button! Resource-Folder : Using this file in a resource folder of a mod is not tested yet. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description todo","title":"itempools.xml"},{"location":"xml/itempools/#file-itempoolsxml","text":"This page needs some content. You can contribute to it using the Edit Button! Resource-Folder : Using this file in a resource folder of a mod is not tested yet. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description todo","title":"File \"itempools.xml\""},{"location":"xml/items/","text":"File \"items.xml\" \u2693\ufe0e This page needs some content. You can contribute to it using the Edit Button! old tutorial: https://www.reddit.com/r/themoddingofisaac/comments/3mub9c/ways_to_modify_items/ Resource-Folder : Using this file in a resource folder of a mod is not tested yet. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description todo","title":"items.xml"},{"location":"xml/items/#file-itemsxml","text":"This page needs some content. You can contribute to it using the Edit Button! old tutorial: https://www.reddit.com/r/themoddingofisaac/comments/3mub9c/ways_to_modify_items/ Resource-Folder : Using this file in a resource folder of a mod is not tested yet. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description todo","title":"File \"items.xml\""},{"location":"xml/minibosses/","text":"File \"minibosses.xml\" \u2693\ufe0e This file is used to store the name of the miniboss in certain miniboss-rooms. The name will be displayed on a \"streak\"-animation like \"Isaac vs. MINIBOSS_NAME\" Resource-Folder : Placing this file in your mods \"resource\" folder will replace the original file. Content-Folder : Placing this file in your mods \"content\" folder has no effect! Variable-Name Possible Values Description id int RoomID where this streak should be triggered. The RoomID should be in increments of 10 Example : 2020 Rooms with IDs not ending with 0 will be fitted to a possible id ending with 0. Example : 2023 will be sorted to 2020 . name string Name that will be displayed in the streak animation","title":"minibosses.xml"},{"location":"xml/minibosses/#file-minibossesxml","text":"This file is used to store the name of the miniboss in certain miniboss-rooms. The name will be displayed on a \"streak\"-animation like \"Isaac vs. MINIBOSS_NAME\" Resource-Folder : Placing this file in your mods \"resource\" folder will replace the original file. Content-Folder : Placing this file in your mods \"content\" folder has no effect! Variable-Name Possible Values Description id int RoomID where this streak should be triggered. The RoomID should be in increments of 10 Example : 2020 Rooms with IDs not ending with 0 will be fitted to a possible id ending with 0. Example : 2023 will be sorted to 2020 . name string Name that will be displayed in the streak animation","title":"File \"minibosses.xml\""},{"location":"xml/music/","text":"File \"music.xml\" \u2693\ufe0e This page needs some content. You can contribute to it using the Edit Button! old tutorial: https://www.reddit.com/r/themoddingofisaac/comments/3ebqat/all_about_music_soundfiles/ Resource-Folder : Using this file in a resource folder of a mod is not tested yet. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description todo","title":"music.xml"},{"location":"xml/music/#file-musicxml","text":"This page needs some content. You can contribute to it using the Edit Button! old tutorial: https://www.reddit.com/r/themoddingofisaac/comments/3ebqat/all_about_music_soundfiles/ Resource-Folder : Using this file in a resource folder of a mod is not tested yet. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description todo","title":"File \"music.xml\""},{"location":"xml/nightmares/","text":"File \"nightmares.xml\" \u2693\ufe0e Used to store all animation paths to the nightmares (dream sequence between stage transitions) Resource-Folder : Placing this file in a resource folder of a mod will override the original. Content-Folder : Placing this file in a content folder of a mod will add new nightmares. Variable-Name Possible Values Description anm2 string Path to the .anm2 file of the nightmare","title":"nightmares.xml"},{"location":"xml/nightmares/#file-nightmaresxml","text":"Used to store all animation paths to the nightmares (dream sequence between stage transitions) Resource-Folder : Placing this file in a resource folder of a mod will override the original. Content-Folder : Placing this file in a content folder of a mod will add new nightmares. Variable-Name Possible Values Description anm2 string Path to the .anm2 file of the nightmare","title":"File \"nightmares.xml\""},{"location":"xml/players/","text":"File \"players.xml\" \u2693\ufe0e This page needs some content. You can contribute to it using the Edit Button! Resource-Folder : Using this file in a resource folder of a mod is not tested yet. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description todo","title":"players.xml"},{"location":"xml/players/#file-playersxml","text":"This page needs some content. You can contribute to it using the Edit Button! Resource-Folder : Using this file in a resource folder of a mod is not tested yet. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description todo","title":"File \"players.xml\""},{"location":"xml/pocketitems/","text":"File \"pocketitems.xml\" \u2693\ufe0e This page needs some content. You can contribute to it using the Edit Button! Resource-Folder : Using this file in a resource folder of a mod is not tested yet. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description todo","title":"pocketitems.xml"},{"location":"xml/pocketitems/#file-pocketitemsxml","text":"This page needs some content. You can contribute to it using the Edit Button! Resource-Folder : Using this file in a resource folder of a mod is not tested yet. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description todo","title":"File \"pocketitems.xml\""},{"location":"xml/preload/","text":"File \"preload.xml\" \u2693\ufe0e This page needs some content. You can contribute to it using the Edit Button! Resource-Folder : Using this file in a resource folder of a mod is not tested yet. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description todo","title":"preload.xml"},{"location":"xml/preload/#file-preloadxml","text":"This page needs some content. You can contribute to it using the Edit Button! Resource-Folder : Using this file in a resource folder of a mod is not tested yet. Content-Folder : Using this file in a content folder of a mod is not tested yet. Variable-Name Possible Values Description todo","title":"File \"preload.xml\""},{"location":"xml/rules/","text":"File \"rules.txt\" \u2693\ufe0e This file is used to store all \"rules\" displayed when using the \"Rules\" card. Rule-entries can have up to 3 rows and should be seperated with an empty line. Bug Having more than 24 character in a row will cause the text to flow outside of the display-box. Resource-Folder : Placing this file in your mods \"resource\" folder will replace the original file. Content-Folder : Placing this file in your mods \"content\" folder has no effect!","title":"rules.txt"},{"location":"xml/rules/#file-rulestxt","text":"This file is used to store all \"rules\" displayed when using the \"Rules\" card. Rule-entries can have up to 3 rows and should be seperated with an empty line. Bug Having more than 24 character in a row will cause the text to flow outside of the display-box. Resource-Folder : Placing this file in your mods \"resource\" folder will replace the original file. Content-Folder : Placing this file in your mods \"content\" folder has no effect!","title":"File \"rules.txt\""},{"location":"xml/seedmenu/","text":"File \"seedmenu.xml\" \u2693\ufe0e File that defines the display of the Easter Egg seed menu. Resource-Folder : Placing this file in your mods \"resources\" folder has no effect! Content-Folder : Placing this file in your mods \"content\" folder has no effect!","title":"seedmenu.xml"},{"location":"xml/seedmenu/#file-seedmenuxml","text":"File that defines the display of the Easter Egg seed menu. Resource-Folder : Placing this file in your mods \"resources\" folder has no effect! Content-Folder : Placing this file in your mods \"content\" folder has no effect!","title":"File \"seedmenu.xml\""},{"location":"xml/seeds/","text":"File \"seeds.txt\" \u2693\ufe0e A text file containing special seeds, mostly used for Easter Egg seeds. Any Seed listed in this file can not be used in the \"seed input\" dialog. (Blacklist-Behavior) Resource-Folder : Placing this file in your mods \"resource\" folder will add all listed seeds to the seed-blacklist. (Easter-Egg seeds still work and are still blocked) Content-Folder : Placing this file in your mods \"resource\" folder will add all listed seeds to the seed-blacklist.","title":"seeds.txt"},{"location":"xml/seeds/#file-seedstxt","text":"A text file containing special seeds, mostly used for Easter Egg seeds. Any Seed listed in this file can not be used in the \"seed input\" dialog. (Blacklist-Behavior) Resource-Folder : Placing this file in your mods \"resource\" folder will add all listed seeds to the seed-blacklist. (Easter-Egg seeds still work and are still blocked) Content-Folder : Placing this file in your mods \"resource\" folder will add all listed seeds to the seed-blacklist.","title":"File \"seeds.txt\""},{"location":"xml/sounds/","text":"File \"sounds.xml\" \u2693\ufe0e This file is used to store informations about the Soundeffect used in the game. old tutorial: https://www.reddit.com/r/themoddingofisaac/comments/3ebqat/all_about_music_soundfiles/ Resource-Folder : Placing this file in your mods \"resource\" folder will replace the original file. Content-Folder : Placing this file in your mods \"content\" folder will add new sound effects. \"sound\" node \u2693\ufe0e Variable-Name Possible Values Description name string Name of the Sound effect \"sample\" node \u2693\ufe0e Child-node of the \"sound\" node. Multiple \"sample\" nodes can be added to a \"sound\" node, resulting in a random selection of them when playing. Variable-Name Possible Values Description weight float Weight of the sound-effect when choosen by random. Lower number = less likely path string filepath to the .wav file Example \u2693\ufe0e Example Code This code adds two sound effects. One with a single sound, and another one with 3 possible sounds choosen by random. 1 2 3 4 5 6 7 8 9 10 <sounds root= \"sounds/\" > <sound name= \"MySoundEffect1\" > <sample weight= \"1\" path= \"some_Sound_file.wav\" /> </sound> <sound name= \"MySoundEffect2\" > <sample weight= \"1\" path= \"sound_effect_variation_1.wav\" /> <sample weight= \"1\" path= \"sound_effect_variation_2.wav\" /> <sample weight= \"1\" path= \"sound_effect_variation_3.wav\" /> </sound> </sounds>","title":"sounds.xml"},{"location":"xml/sounds/#file-soundsxml","text":"This file is used to store informations about the Soundeffect used in the game. old tutorial: https://www.reddit.com/r/themoddingofisaac/comments/3ebqat/all_about_music_soundfiles/ Resource-Folder : Placing this file in your mods \"resource\" folder will replace the original file. Content-Folder : Placing this file in your mods \"content\" folder will add new sound effects.","title":"File \"sounds.xml\""},{"location":"xml/sounds/#sound-node","text":"Variable-Name Possible Values Description name string Name of the Sound effect","title":"\"sound\" node"},{"location":"xml/sounds/#sample-node","text":"Child-node of the \"sound\" node. Multiple \"sample\" nodes can be added to a \"sound\" node, resulting in a random selection of them when playing. Variable-Name Possible Values Description weight float Weight of the sound-effect when choosen by random. Lower number = less likely path string filepath to the .wav file","title":"\"sample\" node"},{"location":"xml/sounds/#example","text":"Example Code This code adds two sound effects. One with a single sound, and another one with 3 possible sounds choosen by random. 1 2 3 4 5 6 7 8 9 10 <sounds root= \"sounds/\" > <sound name= \"MySoundEffect1\" > <sample weight= \"1\" path= \"some_Sound_file.wav\" /> </sound> <sound name= \"MySoundEffect2\" > <sample weight= \"1\" path= \"sound_effect_variation_1.wav\" /> <sample weight= \"1\" path= \"sound_effect_variation_2.wav\" /> <sample weight= \"1\" path= \"sound_effect_variation_3.wav\" /> </sound> </sounds>","title":"Example"},{"location":"xml/stages/","text":"File \"stages.xml\" \u2693\ufe0e This file is used to store informations about the Levels / Stages of the game. Resource-Folder : Placing this file in your mods \"resource\" folder will replace the original file. Content-Folder : Placing this file in your mods \"content\" folder has no effect! Variable-Name Possible Values Description id int Internal identifier of the Stage name string Display name of the Stage path string Filename of the .stb file found in the \"rooms\" folder, BUT written as an .xml file path (simply replace .stb with .xml in your filename) playerspot string Path to the .png file, displayed under the player sprite, that should be used for the Boss-Fight-transition animation bossspot string Same is playerspot, but displayed under the boss sprite","title":"stages.xml"},{"location":"xml/stages/#file-stagesxml","text":"This file is used to store informations about the Levels / Stages of the game. Resource-Folder : Placing this file in your mods \"resource\" folder will replace the original file. Content-Folder : Placing this file in your mods \"content\" folder has no effect! Variable-Name Possible Values Description id int Internal identifier of the Stage name string Display name of the Stage path string Filename of the .stb file found in the \"rooms\" folder, BUT written as an .xml file path (simply replace .stb with .xml in your filename) playerspot string Path to the .png file, displayed under the player sprite, that should be used for the Boss-Fight-transition animation bossspot string Same is playerspot, but displayed under the boss sprite","title":"File \"stages.xml\""},{"location":"xml/translations/","text":"File \"translations.xml\" \u2693\ufe0e This file is used to store a mapping of possible game translation packages. Used for Japanese and Korean. Bug This file seems to do nothing useful! Resource-Folder : Placing this file in your mods \"resources\" folder has no effect! Content-Folder : Placing this file in your mods \"content\" folder has no effect! Variable-Name Possible Values Description id string short ID of the language. Used in the options.ini file and possible indicator for the resources package extention (eg. folder: \"resources.jp\") name string Name of the language. No usage for it found yet","title":"translations.xml"},{"location":"xml/translations/#file-translationsxml","text":"This file is used to store a mapping of possible game translation packages. Used for Japanese and Korean. Bug This file seems to do nothing useful! Resource-Folder : Placing this file in your mods \"resources\" folder has no effect! Content-Folder : Placing this file in your mods \"content\" folder has no effect! Variable-Name Possible Values Description id string short ID of the language. Used in the options.ini file and possible indicator for the resources package extention (eg. folder: \"resources.jp\") name string Name of the language. No usage for it found yet","title":"File \"translations.xml\""}]}